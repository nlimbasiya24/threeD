const REVISION="132",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=RGBAFormat,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,SRGB8_ALPHA8_ASTC_4x4_Format=37840,SRGB8_ALPHA8_ASTC_5x4_Format=37841,SRGB8_ALPHA8_ASTC_5x5_Format=37842,SRGB8_ALPHA8_ASTC_6x5_Format=37843,SRGB8_ALPHA8_ASTC_6x6_Format=37844,SRGB8_ALPHA8_ASTC_8x5_Format=37845,SRGB8_ALPHA8_ASTC_8x6_Format=37846,SRGB8_ALPHA8_ASTC_8x8_Format=37847,SRGB8_ALPHA8_ASTC_10x5_Format=37848,SRGB8_ALPHA8_ASTC_10x6_Format=37849,SRGB8_ALPHA8_ASTC_10x8_Format=37850,SRGB8_ALPHA8_ASTC_10x10_Format=37851,SRGB8_ALPHA8_ASTC_12x10_Format=37852,SRGB8_ALPHA8_ASTC_12x12_Format=37853,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042,GLSL1="100",GLSL3="300 es";class EventDispatcher{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){var r;return void 0!==this._listeners&&void 0!==(r=this._listeners)[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){var r;void 0!==this._listeners&&void 0!==(e=this._listeners[e])&&-1!==(r=e.indexOf(t))&&e.splice(r,1)}dispatchEvent(r){if(void 0!==this._listeners){var e=this._listeners[r.type];if(void 0!==e){r.target=this;var i=e.slice(0);for(let e=0,t=i.length;e<t;e++)i[e].call(this,r);r.target=null}}}}const _lut=[];for(let e=0;e<256;e++)_lut[e]=(e<16?"0":"")+e.toString(16);let _seed=1234567;const DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI;function generateUUID(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(_lut[255&e]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[255&t]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[63&r|128]+_lut[r>>8&255]+"-"+_lut[r>>16&255]+_lut[r>>24&255]+_lut[255&i]+_lut[i>>8&255]+_lut[i>>16&255]+_lut[i>>24&255]).toUpperCase()}function clamp(e,t,r){return Math.max(t,Math.min(r,e))}function euclideanModulo(e,t){return(e%t+t)%t}function mapLinear(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)}function inverseLerp(e,t,r){return e!==t?(r-e)/(t-e):0}function lerp(e,t,r){return(1-r)*e+r*t}function damp(e,t,r,i){return lerp(e,t,1-Math.exp(-r*i))}function pingpong(e,t=1){return t-Math.abs(euclideanModulo(e,2*t)-t)}function smoothstep(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*(3-2*e)}function smootherstep(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)}function randInt(e,t){return e+Math.floor(Math.random()*(t-e+1))}function randFloat(e,t){return e+Math.random()*(t-e)}function randFloatSpread(e){return e*(.5-Math.random())}function seededRandom(e){return((_seed=16807*(_seed=void 0!==e?e%2147483647:_seed)%2147483647)-1)/2147483646}function degToRad(e){return e*DEG2RAD}function radToDeg(e){return e*RAD2DEG}function isPowerOfTwo(e){return 0==(e&e-1)&&0!==e}function ceilPowerOfTwo(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function floorPowerOfTwo(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function setQuaternionFromProperEuler(e,t,r,i,n){var a=Math.cos,s=Math.sin,o=a(r/2),l=s(r/2),c=a((t+i)/2),h=s((t+i)/2),u=a((t-i)/2),d=s((t-i)/2),p=a((i-t)/2),m=s((i-t)/2);switch(n){case"XYX":e.set(o*h,l*u,l*d,o*c);break;case"YZY":e.set(l*d,o*h,l*u,o*c);break;case"ZXZ":e.set(l*u,l*d,o*h,o*c);break;case"XZX":e.set(o*h,l*m,l*p,o*c);break;case"YXY":e.set(l*p,o*h,l*m,o*c);break;case"ZYZ":e.set(l*m,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}var MathUtils=Object.freeze({__proto__:null,DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:mapLinear,inverseLerp:inverseLerp,lerp:lerp,damp:damp,pingpong:pingpong,smoothstep:smoothstep,smootherstep:smootherstep,randInt:randInt,randFloat:randFloat,randFloatSpread:randFloatSpread,seededRandom:seededRandom,degToRad:degToRad,radToDeg:radToDeg,isPowerOfTwo:isPowerOfTwo,ceilPowerOfTwo:ceilPowerOfTwo,floorPowerOfTwo:floorPowerOfTwo,setQuaternionFromProperEuler:setQuaternionFromProperEuler});class Vector2{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,r=this.y,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6],this.y=e[1]*t+e[4]*r+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var r=Math.cos(t),t=Math.sin(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*t+e.x,this.y=i*t+n*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Vector2.prototype.isVector2=!0;class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,i,n,a,s,o,l){var c=this.elements;return c[0]=e,c[1]=i,c[2]=s,c[3]=t,c[4]=n,c[5]=o,c[6]=r,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,r=this.elements,i=e[0],n=e[3],a=e[6],s=e[1],o=e[4],l=e[7],c=e[2],h=e[5],e=e[8],u=t[0],d=t[3],p=t[6],m=t[1],f=t[4],g=t[7],v=t[2],_=t[5],t=t[8];return r[0]=i*u+n*m+a*v,r[3]=i*d+n*f+a*_,r[6]=i*p+n*g+a*t,r[1]=s*u+o*m+l*v,r[4]=s*d+o*f+l*_,r[7]=s*p+o*g+l*t,r[2]=c*u+h*m+e*v,r[5]=c*d+h*f+e*_,r[8]=c*p+h*g+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-r*n*e+r*s*o+i*n*l-i*a*o}invert(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=c*a-s*l,u=s*o-c*n,d=l*n-a*o,p=t*h+r*u+i*d;return 0==p?this.set(0,0,0,0,0,0,0,0,0):(e[0]=h*(h=1/p),e[1]=(i*l-c*r)*h,e[2]=(s*r-i*a)*h,e[3]=u*h,e[4]=(c*t-i*o)*h,e[5]=(i*n-s*t)*h,e[6]=d*h,e[7]=(r*o-l*t)*h,e[8]=(a*t-r*n)*h,this)}transpose(){var e=this.elements,t=e[1];return e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,i,n,a,s){var o=Math.cos(n),n=Math.sin(n);return this.set(r*o,r*n,-r*(o*a+n*s)+a+e,-i*n,i*o,-i*(-n*a+o*s)+s+t,0,0,1),this}scale(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){var t=Math.cos(e),e=Math.sin(e),r=this.elements,i=r[0],n=r[3],a=r[6],s=r[1],o=r[4],l=r[7];return r[0]=t*i+e*s,r[3]=t*n+e*o,r[6]=t*a+e*l,r[1]=-e*i+t*s,r[4]=-e*n+t*o,r[7]=-e*a+t*l,this}translate(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<9;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}Matrix3.prototype.isMatrix3=!0;let _canvas;class ImageUtils{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;var r;return 2048<(t=e instanceof HTMLCanvasElement?e:((_canvas=void 0===_canvas?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):_canvas).width=e.width,_canvas.height=e.height,r=_canvas.getContext("2d"),e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),_canvas)).width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let textureId=0;class Texture extends EventDispatcher{constructor(e=Texture.DEFAULT_IMAGE,t=Texture.DEFAULT_MAPPING,r=ClampToEdgeWrapping,i=ClampToEdgeWrapping,n=LinearFilter,a=LinearMipmapLinearFilter,s=RGBAFormat,o=UnsignedByteType,l=1,c=LinearEncoding){super(),Object.defineProperty(this,"id",{value:textureId++}),this.uuid=generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=i,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var i=this.image;if(void 0===i.uuid&&(i.uuid=generateUUID()),!t&&void 0===e.images[i.uuid]){let r;if(Array.isArray(i)){r=[];for(let e=0,t=i.length;e<t;e++)i[e].isDataTexture?r.push(serializeImage(i[e].image)):r.push(serializeImage(i[e]))}else r=serializeImage(i);e.images[i.uuid]={uuid:i.uuid,url:r}}r.image=i.uuid}return t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping===UVMapping){if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}return e}set needsUpdate(e){!0===e&&this.version++}}function serializeImage(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ImageUtils.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=UVMapping,Texture.prototype.isTexture=!0;class Vector4{constructor(e=0,t=0,r=0,i=1){this.x=e,this.y=t,this.z=r,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,r=this.y,i=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*i+e[12]*n,this.y=e[1]*t+e[5]*r+e[9]*i+e[13]*n,this.z=e[2]*t+e[6]*r+e[10]*i+e[14]*n,this.w=e[3]*t+e[7]*r+e[11]*i+e[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(t){let e,r,i,n;var a,s,o,l,c,h,t=t.elements,u=t[0],d=t[4],p=t[8],m=t[1],f=t[5],g=t[9],v=t[2],_=t[6],t=t[10];if(Math.abs(d-m)<.01&&Math.abs(p-v)<.01&&Math.abs(g-_)<.01)Math.abs(d+m)<.1&&Math.abs(p+v)<.1&&Math.abs(g+_)<.1&&Math.abs(u+f+t-3)<.1?this.set(1,0,0,0):(e=Math.PI,o=(t+1)/2,l=(d+m)/4,c=(p+v)/4,h=(g+_)/4,(s=(f+1)/2)<(a=(u+1)/2)&&o<a?n=a<.01?(r=0,i=.707106781):(r=Math.sqrt(a),i=l/r,c/r):o<s?n=s<.01?(r=.707106781,i=0,.707106781):(i=Math.sqrt(s),r=l/i,h/i):o<.01?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(o),r=c/n,i=h/n),this.set(r,i,n,e));else{let e=Math.sqrt((_-g)*(_-g)+(p-v)*(p-v)+(m-d)*(m-d));Math.abs(e)<.001&&(e=1),this.x=(_-g)/e,this.y=(p-v)/e,this.z=(m-d)/e,this.w=Math.acos((u+f+t-1)/2)}return this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Vector4.prototype.isVector4=!0;class WebGLRenderTarget extends EventDispatcher{constructor(e,t,r={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),this.texture=new Texture(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.internalFormat=void 0!==r.internalFormat?r.internalFormat:null,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:LinearFilter,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,r=1){this.width===e&&this.height===t&&this.depth===r||(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}WebGLRenderTarget.prototype.isWebGLRenderTarget=!0;class WebGLMultipleRenderTargets extends WebGLRenderTarget{constructor(e,t,r){super(e,t);var i=this.texture;this.texture=[];for(let e=0;e<r;e++)this.texture[e]=i.clone()}setSize(r,i,n=1){if(this.width!==r||this.height!==i||this.depth!==n){this.width=r,this.height=i,this.depth=n;for(let e=0,t=this.texture.length;e<t;e++)this.texture[e].image.width=r,this.texture[e].image.height=i,this.texture[e].image.depth=n;this.dispose()}return this.viewport.set(0,0,r,i),this.scissor.set(0,0,r,i),this}copy(r){this.dispose(),this.width=r.width,this.height=r.height,this.depth=r.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.depthTexture=r.depthTexture;for(let e=this.texture.length=0,t=r.texture.length;e<t;e++)this.texture[e]=r.texture[e].clone();return this}}WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets=!0;class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(e,t,r){super(e,t,r),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget=!0;class Quaternion{constructor(e=0,t=0,r=0,i=1){this._x=e,this._y=t,this._z=r,this._w=i}static slerp(e,t,r,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(e,t,i)}static slerpFlat(e,t,r,i,n,a,s){let o=r[i+0],l=r[i+1],c=r[i+2],h=r[i+3];var r=n[a+0],i=n[a+1],u=n[a+2],n=n[a+3];if(0===s)e[t+0]=o,e[t+1]=l,e[t+2]=c,e[t+3]=h;else if(1===s)e[t+0]=r,e[t+1]=i,e[t+2]=u,e[t+3]=n;else{if(h!==n||o!==r||l!==i||c!==u){let e=1-s;var a=o*r+l*i+c*u+h*n,d=0<=a?1:-1,p=1-a*a,a=(p>Number.EPSILON&&(p=Math.sqrt(p),a=Math.atan2(p,a*d),e=Math.sin(e*a)/p,s=Math.sin(s*a)/p),s*d);o=o*e+r*a,l=l*e+i*a,c=c*e+u*a,h=h*e+n*a,e===1-s&&(p=1/Math.sqrt(o*o+l*l+c*c+h*h),o*=p,l*=p,c*=p,h*=p)}e[t]=o,e[t+1]=l,e[t+2]=c,e[t+3]=h}}static multiplyQuaternionsFlat(e,t,r,i,n,a){var s=r[i],o=r[i+1],l=r[i+2],r=r[i+3],i=n[a],c=n[a+1],h=n[a+2],n=n[a+3];return e[t]=s*n+r*i+o*h-l*c,e[t+1]=o*n+r*c+l*i-s*h,e[t+2]=l*n+r*h+s*c-o*i,e[t+3]=r*n-s*i-o*c-l*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,i=e._y,n=e._z,a=e._order,e=Math.cos,s=Math.sin,o=e(r/2),l=e(i/2),c=e(n/2),h=s(r/2),u=s(i/2),d=s(n/2);switch(a){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var t=t/2,r=Math.sin(t);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(t),this._onChangeCallback(),this}setFromRotationMatrix(e){var e=e.elements,t=e[0],r=e[4],i=e[8],n=e[1],a=e[5],s=e[9],o=e[2],l=e[6],e=e[10],c=t+a+e;return 0<c?(c=.5/Math.sqrt(c+1),this._w=.25/c,this._x=(l-s)*c,this._y=(i-o)*c,this._z=(n-r)*c):a<t&&e<t?(c=2*Math.sqrt(1+t-a-e),this._w=(l-s)/c,this._x=.25*c,this._y=(r+n)/c,this._z=(i+o)/c):e<a?(c=2*Math.sqrt(1+a-t-e),this._w=(i-o)/c,this._x=(r+n)/c,this._y=.25*c,this._z=(s+l)/c):(c=2*Math.sqrt(1+e-t-a),this._w=(n-r)/c,this._x=(i+o)/c,this._y=(s+l)/c,this._z=.25*c),this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(clamp(this.dot(e),-1,1)))}rotateTowards(e,t){var r=this.angleTo(e);return 0!==r&&(t=Math.min(1,t/r),this.slerp(e,t)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var r=e._x,i=e._y,n=e._z,e=e._w,a=t._x,s=t._y,o=t._z,t=t._w;return this._x=r*t+e*a+i*o-n*s,this._y=i*t+e*s+n*a-r*o,this._z=n*t+e*o+r*s-i*a,this._w=e*t-r*a-i*s-n*o,this._onChangeCallback(),this}slerp(t,r){if(0!==r){if(1===r)return this.copy(t);var i,n,a=this._x,s=this._y,o=this._z,l=this._w;let e=l*t._w+a*t._x+s*t._y+o*t._z;e<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,e=-e):this.copy(t),1<=e?(this._w=l,this._x=a,this._y=s,this._z=o):((t=1-e*e)<=Number.EPSILON?(this._w=(i=1-r)*l+r*this._w,this._x=i*a+r*this._x,this._y=i*s+r*this._y,this._z=i*o+r*this._z,this.normalize()):(i=Math.sqrt(t),t=Math.atan2(i,e),n=Math.sin((1-r)*t)/i,r=Math.sin(r*t)/i,this._w=l*n+this._w*r,this._x=a*n+this._x*r,this._y=s*n+this._y*r,this._z=o*n+this._z*r),this._onChangeCallback())}return this}slerpQuaternions(e,t,r){this.copy(e).slerp(t,r)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Quaternion.prototype.isQuaternion=!0;class Vector3{constructor(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion$4.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,r=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6]*i,this.y=e[1]*t+e[4]*r+e[7]*i,this.z=e[2]*t+e[5]*r+e[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,r=this.y,i=this.z,e=e.elements,n=1/(e[3]*t+e[7]*r+e[11]*i+e[15]);return this.x=(e[0]*t+e[4]*r+e[8]*i+e[12])*n,this.y=(e[1]*t+e[5]*r+e[9]*i+e[13])*n,this.z=(e[2]*t+e[6]*r+e[10]*i+e[14])*n,this}applyQuaternion(e){var t=this.x,r=this.y,i=this.z,n=e.x,a=e.y,s=e.z,e=e.w,o=e*t+a*i-s*r,l=e*r+s*t-n*i,c=e*i+n*r-a*t,t=-n*t-a*r-s*i;return this.x=o*e+t*-n+l*-s-c*-a,this.y=l*e+t*-a+c*-n-o*-s,this.z=c*e+t*-s+o*-a-l*-n,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,r=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*i,this.y=e[1]*t+e[5]*r+e[9]*i,this.z=e[2]*t+e[6]*r+e[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var r=e.x,i=e.y,e=e.z,n=t.x,a=t.y,t=t.z;return this.x=i*t-e*a,this.y=e*n-r*t,this.z=r*a-i*n,this}projectOnVector(e){var t=e.lengthSq();return 0===t?this.set(0,0,0):(t=e.dot(this)/t,this.copy(e).multiplyScalar(t))}projectOnPlane(e){return _vector$c.copy(this).projectOnVector(e),this.sub(_vector$c)}reflect(e){return this.sub(_vector$c.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:(e=this.dot(e)/t,Math.acos(clamp(e,-1,1)))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y,e=this.z-e.z;return t*t+r*r+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){var i=Math.sin(t)*e;return this.x=i*Math.sin(r),this.y=Math.cos(t)*e,this.z=i*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}Vector3.prototype.isVector3=!0;const _vector$c=new Vector3,_quaternion$4=new Quaternion;class Box3{constructor(e=new Vector3(1/0,1/0,1/0),t=new Vector3(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(r){let i=1/0,n=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.length;e<t;e+=3){var c=r[e],h=r[e+1],u=r[e+2];c<i&&(i=c),h<n&&(n=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(i,n,a),this.max.set(s,o,l),this}setFromBufferAttribute(r){let i=1/0,n=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.count;e<t;e++){var c=r.getX(e),h=r.getY(e),u=r.getZ(e);c<i&&(i=c),h<n&&(n=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(i,n,a),this.max.set(s,o,l),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=_vector$b.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);var t=e.geometry,r=(void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),_box$3.copy(t.boundingBox),_box$3.applyMatrix4(e.matrixWorld),this.union(_box$3)),e.children);for(let e=0,t=r.length;e<t;e++)this.expandByObject(r[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_vector$b),_vector$b.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return r=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(_center),_extents.subVectors(this.max,_center),_v0$2.subVectors(e.a,_center),_v1$7.subVectors(e.b,_center),_v2$3.subVectors(e.c,_center),_f0.subVectors(_v1$7,_v0$2),_f1.subVectors(_v2$3,_v1$7),_f2.subVectors(_v0$2,_v2$3),!!satForAxes([0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0],_v0$2,_v1$7,_v2$3,_extents))&&!!satForAxes([1,0,0,0,1,0,0,0,1],_v0$2,_v1$7,_v2$3,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),satForAxes([_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],_v0$2,_v1$7,_v2$3,_extents))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$b.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(_vector$b).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Box3.prototype.isBox3=!0;const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$b=new Vector3,_box$3=new Box3,_v0$2=new Vector3,_v1$7=new Vector3,_v2$3=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function satForAxes(r,i,n,a,s){for(let e=0,t=r.length-3;e<=t;e+=3){_testAxis.fromArray(r,e);var o=s.x*Math.abs(_testAxis.x)+s.y*Math.abs(_testAxis.y)+s.z*Math.abs(_testAxis.z),l=i.dot(_testAxis),c=n.dot(_testAxis),h=a.dot(_testAxis);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const _box$2=new Box3,_v1$6=new Vector3,_toFarthestPoint=new Vector3,_toPoint=new Vector3;class Sphere{constructor(e=new Vector3,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(r,e){var i=this.center;void 0!==e?i.copy(e):_box$2.setFromPoints(r).getCenter(i);let n=0;for(let e=0,t=r.length;e<t;e++)n=Math.max(n,i.distanceToSquared(r[e]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){_toPoint.subVectors(e,this.center);var t,e=_toPoint.lengthSq();return e>this.radius*this.radius&&(t=.5*((e=Math.sqrt(e))-this.radius),this.center.add(_toPoint.multiplyScalar(t/e)),this.radius+=t),this}union(e){return _toFarthestPoint.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(_v1$6.copy(e.center).add(_toFarthestPoint)),this.expandByPoint(_v1$6.copy(e.center).sub(_toFarthestPoint)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _vector$a=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal$1=new Vector3;class Ray{constructor(e=new Vector3,t=new Vector3(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$a)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=_vector$a.subVectors(e,this.origin).dot(this.direction);return(t<0?this.origin:(_vector$a.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$a)).distanceToSquared(e)}distanceSqToSegment(e,t,r,i){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);var e=.5*e.distanceTo(t),t=-this.direction.dot(_segDir),n=_diff.dot(this.direction),a=-_diff.dot(_segDir),s=_diff.lengthSq(),o=Math.abs(1-t*t);let l,c,h,u;return h=0<o?(l=t*a-n,c=t*n-a,u=e*o,0<=l?c>=-u?c<=u?(o=1/o,l*=o,c*=o,l*(l+t*c+2*n)+c*(t*l+c+2*a)+s):(c=e,-(l=Math.max(0,-(t*c+n)))*l+c*(c+2*a)+s):(c=-e,-(l=Math.max(0,-(t*c+n)))*l+c*(c+2*a)+s):c<=-u?(l=Math.max(0,-(-t*e+n)),c=0<l?-e:Math.min(Math.max(-e,-a),e),-l*l+c*(c+2*a)+s):c<=u?(l=0,(c=Math.min(Math.max(-e,-a),e))*(c+2*a)+s):(l=Math.max(0,-(t*e+n)),c=0<l?e:Math.min(Math.max(-e,-a),e),-l*l+c*(c+2*a)+s)):(c=0<t?-e:e,-(l=Math.max(0,-(t*c+n)))*l+c*(c+2*a)+s),r&&r.copy(this.direction).multiplyScalar(l).add(this.origin),i&&i.copy(_segDir).multiplyScalar(c).add(_segCenter),h}intersectSphere(e,t){_vector$a.subVectors(e.center,this.origin);var r=_vector$a.dot(this.direction),i=_vector$a.dot(_vector$a)-r*r,e=e.radius*e.radius;return e<i||(i=r+(e=Math.sqrt(e-i)),(r=r-e)<0&&i<0)?null:r<0?this.at(i,t):this.at(r,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:0<=(e=-(this.origin.dot(e.normal)+e.constant)/t)?e:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,i,n,a,s,o;var l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return i=0<=l?(r=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(r=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=c?(n=(e.min.y-u.y)*c,(e.max.y-u.y)*c):(n=(e.max.y-u.y)*c,(e.min.y-u.y)*c),r>a||n>i||((n>r||r!=r)&&(r=n),(a<i||i!=i)&&(i=a),o=0<=h?(s=(e.min.z-u.z)*h,(e.max.z-u.z)*h):(s=(e.max.z-u.z)*h,(e.min.z-u.z)*h),r>o)||s>i||((s>r||r!=r)&&(r=s),(i=o<i||i!=i?o:i)<0)?null:this.at(0<=r?r:i,t)}intersectsBox(e){return null!==this.intersectBox(e,_vector$a)}intersectTriangle(e,t,r,i,n){_edge1.subVectors(t,e),_edge2.subVectors(r,e),_normal$1.crossVectors(_edge1,_edge2);let a=this.direction.dot(_normal$1),s;if(0<a){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}_diff.subVectors(this.origin,e);t=s*this.direction.dot(_edge2.crossVectors(_diff,_edge2));return t<0||(r=s*this.direction.dot(_edge1.cross(_diff)))<0||t+r>a||(i=-s*_diff.dot(_normal$1))<0?null:this.at(i/a,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,i,n,a,s,o,l,c,h,u,d,p,m,f){var g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=i,g[1]=n,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){var t=this.elements,r=e.elements,i=1/_v1$5.setFromMatrixColumn(e,0).length(),n=1/_v1$5.setFromMatrixColumn(e,1).length(),e=1/_v1$5.setFromMatrixColumn(e,2).length();return t[0]=r[0]*i,t[1]=r[1]*i,t[2]=r[2]*i,t[3]=0,t[4]=r[4]*n,t[5]=r[5]*n,t[6]=r[6]*n,t[7]=0,t[8]=r[8]*e,t[9]=r[9]*e,t[10]=r[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t,r,i,n,a=this.elements,s=e.x,o=e.y,l=e.z,c=Math.cos(s),s=Math.sin(s),h=Math.cos(o),o=Math.sin(o),u=Math.cos(l),l=Math.sin(l);return"XYZ"===e.order?(r=c*u,i=c*l,n=s*u,t=s*l,a[0]=h*u,a[4]=-h*l,a[8]=o,a[1]=i+n*o,a[5]=r-t*o,a[9]=-s*h,a[2]=t-r*o,a[6]=n+i*o,a[10]=c*h):"YXZ"===e.order?(t=h*l,r=o*u,a[0]=(n=h*u)+(i=o*l)*s,a[4]=r*s-t,a[8]=c*o,a[1]=c*l,a[5]=c*u,a[9]=-s,a[2]=t*s-r,a[6]=i+n*s,a[10]=c*h):"ZXY"===e.order?(t=h*l,r=o*u,a[0]=(i=h*u)-(n=o*l)*s,a[4]=-c*l,a[8]=r+t*s,a[1]=t+r*s,a[5]=c*u,a[9]=n-i*s,a[2]=-c*o,a[6]=s,a[10]=c*h):"ZYX"===e.order?(t=c*u,r=c*l,n=s*u,i=s*l,a[0]=h*u,a[4]=n*o-r,a[8]=t*o+i,a[1]=h*l,a[5]=i*o+t,a[9]=r*o-n,a[2]=-o,a[6]=s*h,a[10]=c*h):"YZX"===e.order?(i=c*h,t=c*o,r=s*h,n=s*o,a[0]=h*u,a[4]=n-i*l,a[8]=r*l+t,a[1]=l,a[5]=c*u,a[9]=-s*u,a[2]=-o*u,a[6]=t*l+r,a[10]=i-n*l):"XZY"===e.order&&(t=c*h,r=c*o,i=s*h,n=s*o,a[0]=h*u,a[4]=-l,a[8]=o*u,a[1]=t*l+n,a[5]=c*u,a[9]=r*l-i,a[2]=i*l-r,a[6]=s*u,a[10]=n*l+t),a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,r){var i=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(r,_z),0===_x.lengthSq()&&(1===Math.abs(r.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(r,_z)),_x.normalize(),_y.crossVectors(_z,_x),i[0]=_x.x,i[4]=_y.x,i[8]=_z.x,i[1]=_x.y,i[5]=_y.y,i[9]=_z.y,i[2]=_x.z,i[6]=_y.z,i[10]=_z.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,r=this.elements,i=e[0],n=e[4],a=e[8],s=e[12],o=e[1],l=e[5],c=e[9],h=e[13],u=e[2],d=e[6],p=e[10],m=e[14],f=e[3],g=e[7],v=e[11],e=e[15],_=t[0],y=t[4],x=t[8],b=t[12],M=t[1],w=t[5],S=t[9],T=t[13],E=t[2],A=t[6],L=t[10],C=t[14],R=t[3],P=t[7],B=t[11],t=t[15];return r[0]=i*_+n*M+a*E+s*R,r[4]=i*y+n*w+a*A+s*P,r[8]=i*x+n*S+a*L+s*B,r[12]=i*b+n*T+a*C+s*t,r[1]=o*_+l*M+c*E+h*R,r[5]=o*y+l*w+c*A+h*P,r[9]=o*x+l*S+c*L+h*B,r[13]=o*b+l*T+c*C+h*t,r[2]=u*_+d*M+p*E+m*R,r[6]=u*y+d*w+p*A+m*P,r[10]=u*x+d*S+p*L+m*B,r[14]=u*b+d*T+p*C+m*t,r[3]=f*_+g*M+v*E+e*R,r[7]=f*y+g*w+v*A+e*P,r[11]=f*x+g*S+v*L+e*B,r[15]=f*b+g*T+v*C+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],a=e[1],s=e[5],o=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+n*o*h-i*l*h-n*s*u+r*l*u+i*s*d-r*o*d)+e[7]*(+t*o*d-t*l*u+n*a*u-i*a*d+i*l*c-n*o*c)+e[11]*(+t*l*h-t*s*d-n*a*h+r*a*d+n*s*c-r*l*c)+e[15]*(-i*s*c-t*o*h+t*s*u+i*a*h-r*a*u+r*o*c)}transpose(){var e=this.elements,t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){var i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=r),this}invert(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=h*f*l-m*u*l+m*o*d-s*f*d-h*o*g+s*u*g,_=p*u*l-c*f*l-p*o*d+a*f*d+c*o*g-a*u*g,y=c*m*l-p*h*l+p*s*d-a*m*d-c*s*g+a*h*g,x=p*h*o-c*m*o-p*s*u+a*m*u+c*s*f-a*h*f,b=t*v+r*_+i*y+n*x;return 0==b?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(e[0]=v*(v=1/b),e[1]=(m*u*n-h*f*n-m*i*d+r*f*d+h*i*g-r*u*g)*v,e[2]=(s*f*n-m*o*n+m*i*l-r*f*l-s*i*g+r*o*g)*v,e[3]=(h*o*n-s*u*n-h*i*l+r*u*l+s*i*d-r*o*d)*v,e[4]=_*v,e[5]=(c*f*n-p*u*n+p*i*d-t*f*d-c*i*g+t*u*g)*v,e[6]=(p*o*n-a*f*n-p*i*l+t*f*l+a*i*g-t*o*g)*v,e[7]=(a*u*n-c*o*n+c*i*l-t*u*l-a*i*d+t*o*d)*v,e[8]=y*v,e[9]=(p*h*n-c*m*n-p*r*d+t*m*d+c*r*g-t*h*g)*v,e[10]=(a*m*n-p*s*n+p*r*l-t*m*l-a*r*g+t*s*g)*v,e[11]=(c*s*n-a*h*n-c*r*l+t*h*l+a*r*d-t*s*d)*v,e[12]=x*v,e[13]=(c*m*i-p*h*i+p*r*u-t*m*u-c*r*f+t*h*f)*v,e[14]=(p*s*i-a*m*i-p*r*o+t*m*o+a*r*f-t*s*f)*v,e[15]=(a*h*i-c*s*i+c*r*o-t*h*o-a*r*u+t*s*u)*v,this)}scale(e){var t=this.elements,r=e.x,i=e.y,e=e.z;return t[0]*=r,t[4]*=i,t[8]*=e,t[1]*=r,t[5]*=i,t[9]*=e,t[2]*=r,t[6]*=i,t[10]*=e,t[3]*=r,t[7]*=i,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,e))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var r=Math.cos(t),t=Math.sin(t),i=1-r,n=e.x,a=e.y,e=e.z,s=i*n,o=i*a;return this.set(s*n+r,s*a-t*e,s*e+t*a,0,s*a+t*e,o*a+r,o*e-t*n,0,s*e-t*a,o*e+t*n,i*e*e+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,i,n,a){return this.set(1,r,n,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,r){var i=this.elements,n=t._x,a=t._y,s=t._z,t=t._w,o=n+n,l=a+a,c=s+s,h=n*o,u=n*l,n=n*c,d=a*l,a=a*c,s=s*c,o=t*o,l=t*l,t=t*c,c=r.x,p=r.y,r=r.z;return i[0]=(1-(d+s))*c,i[1]=(u+t)*c,i[2]=(n-l)*c,i[3]=0,i[4]=(u-t)*p,i[5]=(1-(h+s))*p,i[6]=(a+o)*p,i[7]=0,i[8]=(n+l)*r,i[9]=(a-o)*r,i[10]=(1-(h+d))*r,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,r){var i=this.elements;let n=_v1$5.set(i[0],i[1],i[2]).length();var a=_v1$5.set(i[4],i[5],i[6]).length(),s=_v1$5.set(i[8],i[9],i[10]).length(),e=(this.determinant()<0&&(n=-n),e.x=i[12],e.y=i[13],e.z=i[14],_m1$2.copy(this),1/n),i=1/a,o=1/s;return _m1$2.elements[0]*=e,_m1$2.elements[1]*=e,_m1$2.elements[2]*=e,_m1$2.elements[4]*=i,_m1$2.elements[5]*=i,_m1$2.elements[6]*=i,_m1$2.elements[8]*=o,_m1$2.elements[9]*=o,_m1$2.elements[10]*=o,t.setFromRotationMatrix(_m1$2),r.x=n,r.y=a,r.z=s,this}makePerspective(e,t,r,i,n,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var s=this.elements,o=2*n/(r-i),l=(t+e)/(t-e),r=(r+i)/(r-i),i=-(a+n)/(a-n),a=-2*a*n/(a-n);return s[0]=2*n/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=r,s[13]=0,s[2]=0,s[6]=0,s[10]=i,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,r,i,n,a){var s=this.elements,o=1/(t-e),l=1/(r-i),c=1/(a-n),t=(t+e)*o,e=(r+i)*l,r=(a+n)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-t,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-e,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-r,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<16;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}Matrix4.prototype.isMatrix4=!0;const _v1$5=new Vector3,_m1$2=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix$1=new Matrix4,_quaternion$3=new Quaternion;class Euler{constructor(e=0,t=0,r=0,i=Euler.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,i=this._order){return this._x=e,this._y=t,this._z=r,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){var e=e.elements,i=e[0],n=e[4],a=e[8],s=e[1],o=e[5],l=e[9],c=e[2],h=e[6],u=e[10];switch(t){case"XYZ":this._y=Math.asin(clamp(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-n,i)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-clamp(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(clamp(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-clamp(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(clamp(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-clamp(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return _matrix$1.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix$1,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _quaternion$3.setFromEuler(this),this.setFromQuaternion(_quaternion$3,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Euler.prototype.isEuler=!0,Euler.DefaultOrder="XYZ",Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Layers{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let _object3DId=0;const _v1$4=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};class Object3D extends EventDispatcher{constructor(){super(),Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();var e=new Vector3;const t=new Euler,r=new Quaternion;var i=new Vector3(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this}rotateOnWorldAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this}rotateX(e){return this.rotateOnAxis(_xAxis,e)}rotateY(e){return this.rotateOnAxis(_yAxis,e)}rotateZ(e){return this.rotateOnAxis(_zAxis,e)}translateOnAxis(e,t){return _v1$4.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$4.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_xAxis,e)}translateY(e){return this.translateOnAxis(_yAxis,e)}translateZ(e){return this.translateOnAxis(_zAxis,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_m1$1.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?_target.copy(e):_target.set(e,t,r);e=this.parent;this.updateWorldMatrix(!0,!1),_position$3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position$3,_target,this.up):_m1$1.lookAt(_target,_position$3,this.up),this.quaternion.setFromRotationMatrix(_m1$1),e&&(_m1$1.extractRotation(e.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.invert()))}add(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.add(arguments[e]);else e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e);return this}remove(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);else{var t=this.children.indexOf(e);-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent))}return this}removeFromParent(){var e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(_removedEvent)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_m1$1.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(r,i){if(this[r]===i)return this;for(let e=0,t=this.children.length;e<t;e++){var n=this.children[e].getObjectByProperty(r,i);if(void 0!==n)return n}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,e,_scale$2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,_quaternion$2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(r){r(this);var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverse(r)}traverseVisible(r){if(!1!==this.visible){r(this);var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverseVisible(r)}}traverseAncestors(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(r){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||r)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),r=!(this.matrixWorldNeedsUpdate=!1));var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(r)}updateWorldMatrix(e,t){var r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){var i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateWorldMatrix(!1,!0)}}toJSON(r){var e,t,i,n,a,s=void 0===r||"string"==typeof r,o={},l=(s&&(r={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},o.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function c(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(r)),t.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor)&&(l.instanceColor=this.instanceColor.toJSON()),this.isScene)this.background&&(this.background.isColor?l.background=this.background.toJSON():this.background.isTexture&&(l.background=this.background.toJSON(r).uuid)),this.environment&&this.environment.isTexture&&(l.environment=this.environment.toJSON(r).uuid);else if(this.isMesh||this.isLine||this.isPoints){l.geometry=c(r.geometries,this.geometry);var h=this.geometry.parameters;if(void 0!==h&&void 0!==h.shapes){var u=h.shapes;if(Array.isArray(u))for(let e=0,t=u.length;e<t;e++){var d=u[e];c(r.shapes,d)}else c(r.shapes,u)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton)&&(c(r.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid),void 0!==this.material)if(Array.isArray(this.material)){var p=[];for(let e=0,t=this.material.length;e<t;e++)p.push(c(r.materials,this.material[e]));l.material=p}else l.material=c(r.materials,this.material);if(0<this.children.length){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(r).object)}if(0<this.animations.length){l.animations=[];for(let e=0;e<this.animations.length;e++){var m=this.animations[e];l.animations.push(c(r.animations,m))}}return s&&(h=f(r.geometries),s=f(r.materials),e=f(r.textures),t=f(r.images),i=f(r.shapes),n=f(r.skeletons),a=f(r.animations),0<h.length&&(o.geometries=h),0<s.length&&(o.materials=s),0<e.length&&(o.textures=e),0<t.length&&(o.images=t),0<i.length&&(o.shapes=i),0<n.length&&(o.skeletons=n),0<a.length)&&(o.animations=a),o.object=l,o;function f(e){var t=[];for(const i in e){var r=e[i];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){var r=t.children[e];this.add(r.clone())}return this}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype.isObject3D=!0;const _v0$1=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$1=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;class Triangle{constructor(e=new Vector3,t=new Vector3,r=new Vector3){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,i){i.subVectors(r,t),_v0$1.subVectors(e,t),i.cross(_v0$1);r=i.lengthSq();return 0<r?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,r,i,n){_v0$1.subVectors(i,t),_v1$3.subVectors(r,t),_v2$2.subVectors(e,t);var i=_v0$1.dot(_v0$1),r=_v0$1.dot(_v1$3),e=_v0$1.dot(_v2$2),t=_v1$3.dot(_v1$3),a=_v1$3.dot(_v2$2),s=i*t-r*r;return 0==s?n.set(-2,-1,-1):n.set(1-(t=(t*e-r*a)*(n=1/s))-(s=(i*a-r*e)*n),s,t)}static containsPoint(e,t,r,i){return this.getBarycoord(e,t,r,i,_v3$1),0<=_v3$1.x&&0<=_v3$1.y&&_v3$1.x+_v3$1.y<=1}static getUV(e,t,r,i,n,a,s,o){return this.getBarycoord(e,t,r,i,_v3$1),o.set(0,0),o.addScaledVector(n,_v3$1.x),o.addScaledVector(a,_v3$1.y),o.addScaledVector(s,_v3$1.z),o}static isFrontFacing(e,t,r,i){return _v0$1.subVectors(r,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(i)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,i,n){return Triangle.getUV(e,this.a,this.b,this.c,t,r,i,n)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){var r=this.a,i=this.b,n=this.c;let a,s;_vab.subVectors(i,r),_vac.subVectors(n,r),_vap.subVectors(e,r);var o=_vab.dot(_vap),l=_vac.dot(_vap);if(o<=0&&l<=0)return t.copy(r);_vbp.subVectors(e,i);var c=_vab.dot(_vbp),h=_vac.dot(_vbp);if(0<=c&&h<=c)return t.copy(i);var u=o*h-c*l;if(u<=0&&0<=o&&c<=0)return a=o/(o-c),t.copy(r).addScaledVector(_vab,a);_vcp.subVectors(e,n);var e=_vab.dot(_vcp),d=_vac.dot(_vcp);return 0<=d&&e<=d?t.copy(n):(o=e*l-o*d)<=0&&0<=l&&d<=0?(s=l/(l-d),t.copy(r).addScaledVector(_vac,s)):(l=c*d-e*h)<=0&&0<=h-c&&0<=e-d?(_vbc.subVectors(n,i),s=(h-c)/(h-c+(e-d)),t.copy(i).addScaledVector(_vbc,s)):(n=1/(l+o+u),a=o*n,s=u*n,t.copy(r).addScaledVector(_vab,a).addScaledVector(_vac,s))}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let materialId=0;class Material extends EventDispatcher{#alphaTest=0;constructor(){super(),Object.defineProperty(this,"id",{value:materialId++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=NormalBlending,this.side=FrontSide,this.vertexColors=!1,this.opacity=1,this.format=RGBAFormat,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}get alphaTest(){return this.#alphaTest}set alphaTest(e){0<this.#alphaTest!=0<e&&this.version++,this.#alphaTest=e}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const i in e){var t,r=e[i];void 0===r?console.warn("THREE.Material: '"+i+"' parameter is undefined."):"shading"===i?(console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===FlatShading):void 0===(t=this[i])?console.warn("THREE."+this.type+": '"+i+"' is not a property of this material."):t&&t.isColor?t.set(r):t&&t.isVector3&&r&&r.isVector3?t.copy(r):this[i]=r}}toJSON(e){var t=void 0===e||"string"==typeof e,r=(t&&(e={textures:{},images:{}}),{metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}});function i(e){var t=[];for(const i in e){var r=e[i];delete r.metadata,t.push(r)}return t}return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.sheenTint&&this.sheenTint.isColor&&(r.sheenTint=this.sheenTint.getHex()),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(r.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(r.specularTintMap=this.specularTintMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine)&&(r.combine=this.combine),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(r.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(r.blending=this.blending),this.side!==FrontSide&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),this.format!==RGBAFormat&&(r.format=this.format),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t&&(t=i(e.textures),e=i(e.images),0<t.length&&(r.textures=t),0<e.length)&&(r.images=e),r}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes;let r=null;if(null!==t){var i=t.length;r=new Array(i);for(let e=0;e!==i;++e)r[e]=t[e].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}Material.prototype.isMaterial=!0;const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(e,t,r){return r<0&&(r+=1),1<r&&--r,r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function SRGBToLinear(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Color{constructor(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this}setHSL(e,t,r){return e=euclideanModulo(e,1),t=clamp(t,0,1),r=clamp(r,0,1),0===t?this.r=this.g=this.b=r:(this.r=hue2rgb(t=2*r-(r=r<=.5?r*(1+t):r+t-r*t),r,e+1/3),this.g=hue2rgb(t,r,e),this.b=hue2rgb(t,r,e-1/3)),this}setStyle(t){function r(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}if(l=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i,n,a,s=l[1],o=l[2];switch(s){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,r(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,r(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,a=parseInt(e[3],10)/100,r(e[4]),this.setHSL(i,n,a)}}else if(l=/^\#([A-Fa-f\d]+)$/.exec(t)){var s=l[1],l=s.length;if(3===l)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=_colorKeywords[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){t=0<t?1/t:1;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){var t=this.r,r=this.g,i=this.b,n=Math.max(t,r,i),a=Math.min(t,r,i);let s,o;var l=(a+n)/2;if(a===n)s=0,o=0;else{var c=n-a;switch(o=l<=.5?c/(n+a):c/(2-n-a),n){case t:s=(r-i)/c+(r<i?6:0);break;case r:s=(i-t)/c+2;break;case i:s=(t-r)/c+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,r){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=r,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);var e=lerp(_hslA.h,_hslB.h,t),r=lerp(_hslA.s,_hslB.s,t),t=lerp(_hslA.l,_hslB.l,t);return this.setHSL(e,r,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Color.NAMES=_colorKeywords,Color.prototype.isColor=!0,Color.prototype.r=1,Color.prototype.g=1,Color.prototype.b=1;class MeshBasicMaterial extends Material{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}MeshBasicMaterial.prototype.isMeshBasicMaterial=!0;const _vector$9=new Vector3,_vector2$1=new Vector2;class BufferAttribute{constructor(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(r,i,n){r*=this.itemSize,n*=i.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[r+e]=i.array[n+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new Color),i[n++]=e.r,i[n++]=e.g,i[n++]=e.b}return this}copyVector2sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Vector2),i[n++]=e.x,i[n++]=e.y}return this}copyVector3sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new Vector3),i[n++]=e.x,i[n++]=e.y,i[n++]=e.z}return this}copyVector4sArray(r){var i=this.array;let n=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Vector4),i[n++]=e.x,i[n++]=e.y,i[n++]=e.z,i[n++]=e.w}return this}applyMatrix3(r){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)_vector2$1.fromBufferAttribute(this,e),_vector2$1.applyMatrix3(r),this.setXY(e,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)_vector$9.fromBufferAttribute(this,e),_vector$9.applyMatrix3(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyMatrix4(r){for(let e=0,t=this.count;e<t;e++)_vector$9.x=this.getX(e),_vector$9.y=this.getY(e),_vector$9.z=this.getZ(e),_vector$9.applyMatrix4(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)_vector$9.x=this.getX(e),_vector$9.y=this.getY(e),_vector$9.z=this.getZ(e),_vector$9.applyNormalMatrix(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)_vector$9.x=this.getX(e),_vector$9.y=this.getY(e),_vector$9.z=this.getZ(e),_vector$9.transformDirection(r),this.setXYZ(e,_vector$9.x,_vector$9.y,_vector$9.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this}setXYZW(e,t,r,i,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==StaticDrawUsage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}BufferAttribute.prototype.isBufferAttribute=!0;class Int8BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int8Array(e),t,r)}}class Uint8BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint8Array(e),t,r)}}class Uint8ClampedBufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint8ClampedArray(e),t,r)}}class Int16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int16Array(e),t,r)}}class Uint16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Int32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Int32Array(e),t,r)}}class Uint32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Float16BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Uint16Array(e),t,r)}}Float16BufferAttribute.prototype.isFloat16BufferAttribute=!0;class Float32BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Float32Array(e),t,r)}}class Float64BufferAttribute extends BufferAttribute{constructor(e,t,r){super(new Float64Array(e),t,r)}}function arrayMax(r){if(0===r.length)return-1/0;let i=r[0];for(let e=1,t=r.length;e<t;++e)r[e]>i&&(i=r[e]);return i}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(e,t){return new TYPED_ARRAYS[e](t)}let _id=0;const _m1=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$1=new Box3,_boxMorphTargets=new Box3,_vector$8=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),Object.defineProperty(this,"id",{value:_id++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(65535<arrayMax(e)?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){var t=this.attributes.position,t=(void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0),this.attributes.normal),r=(void 0!==t&&(r=(new Matrix3).getNormalMatrix(e),t.applyNormalMatrix(r),t.needsUpdate=!0),this.attributes.tangent);return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return _m1.makeRotationFromQuaternion(e),this.applyMatrix4(_m1),this}rotateX(e){return _m1.makeRotationX(e),this.applyMatrix4(_m1),this}rotateY(e){return _m1.makeRotationY(e),this.applyMatrix4(_m1),this}rotateZ(e){return _m1.makeRotationZ(e),this.applyMatrix4(_m1),this}translate(e,t,r){return _m1.makeTranslation(e,t,r),this.applyMatrix4(_m1),this}scale(e,t,r){return _m1.makeScale(e,t,r),this.applyMatrix4(_m1),this}lookAt(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this}setFromPoints(r){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Float32BufferAttribute(i,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Box3);var e=this.attributes.position,r=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));else{if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),r)for(let e=0,t=r.length;e<t;e++){var i=r[e];_box$1.setFromBufferAttribute(i),this.morphTargetsRelative?(_vector$8.addVectors(this.boundingBox.min,_box$1.min),this.boundingBox.expandByPoint(_vector$8),_vector$8.addVectors(this.boundingBox.max,_box$1.max),this.boundingBox.expandByPoint(_vector$8)):(this.boundingBox.expandByPoint(_box$1.min),this.boundingBox.expandByPoint(_box$1.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var i=this.attributes.position,n=this.morphAttributes.position;if(i&&i.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Vector3,1/0);else if(i){var a=this.boundingSphere.center;if(_box$1.setFromBufferAttribute(i),n)for(let e=0,t=n.length;e<t;e++){var s=n[e];_boxMorphTargets.setFromBufferAttribute(s),this.morphTargetsRelative?(_vector$8.addVectors(_box$1.min,_boxMorphTargets.min),_box$1.expandByPoint(_vector$8),_vector$8.addVectors(_box$1.max,_boxMorphTargets.max),_box$1.expandByPoint(_vector$8)):(_box$1.expandByPoint(_boxMorphTargets.min),_box$1.expandByPoint(_boxMorphTargets.max))}_box$1.getCenter(a);let r=0;for(let e=0,t=i.count;e<t;e++)_vector$8.fromBufferAttribute(i,e),r=Math.max(r,a.distanceToSquared(_vector$8));if(n)for(let e=0,t=n.length;e<t;e++){var o=n[e],l=this.morphTargetsRelative;for(let e=0,t=o.count;e<t;e++)_vector$8.fromBufferAttribute(o,e),l&&(_offset.fromBufferAttribute(i,e),_vector$8.add(_offset)),r=Math.max(r,a.distanceToSquared(_vector$8))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){var e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");else{var i=e.array;const m=t.position.array,f=t.normal.array,g=t.uv.array;var n,a,s,o,l=m.length/3;void 0===t.tangent&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*l),4));const v=t.tangent.array,_=[],y=[];for(let e=0;e<l;e++)_[e]=new Vector3,y[e]=new Vector3;const x=new Vector3,b=new Vector3,M=new Vector3,w=new Vector2,S=new Vector2,T=new Vector2,E=new Vector3,A=new Vector3;let r=this.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:i.length}]:r).length;e<t;++e){var c=r[e],h=c.start;for(let e=h,t=h+c.count;e<t;e+=3)n=i[e+0],a=i[e+1],s=i[e+2],o=void 0,x.fromArray(m,3*n),b.fromArray(m,3*a),M.fromArray(m,3*s),w.fromArray(g,2*n),S.fromArray(g,2*a),T.fromArray(g,2*s),b.sub(x),M.sub(x),S.sub(w),T.sub(w),o=1/(S.x*T.y-T.x*S.y),isFinite(o)&&(E.copy(b).multiplyScalar(T.y).addScaledVector(M,-S.y).multiplyScalar(o),A.copy(M).multiplyScalar(S.x).addScaledVector(b,-T.x).multiplyScalar(o),_[n].add(E),_[a].add(E),_[s].add(E),y[n].add(A),y[a].add(A),y[s].add(A))}const L=new Vector3,C=new Vector3,R=new Vector3,P=new Vector3;for(let e=0,t=r.length;e<t;++e){var u=r[e],d=u.start;for(let e=d,t=d+u.count;e<t;e+=3)p(i[e+0]),p(i[e+1]),p(i[e+2])}function p(e){R.fromArray(f,3*e),P.copy(R);var t=_[e],t=(L.copy(t),L.sub(R.multiplyScalar(R.dot(t))).normalize(),C.crossVectors(P,t),C.dot(y[e])),t=t<0?-1:1;v[4*e]=L.x,v[4*e+1]=L.y,v[4*e+2]=L.z,v[4*e+3]=t}}}computeVertexNormals(){var i=this.index,n=this.getAttribute("position");if(void 0!==n){let r=this.getAttribute("normal");if(void 0===r)r=new BufferAttribute(new Float32Array(3*n.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);var a=new Vector3,s=new Vector3,o=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3,u=new Vector3,d=new Vector3;if(i)for(let e=0,t=i.count;e<t;e+=3){var p=i.getX(e+0),m=i.getX(e+1),f=i.getX(e+2);a.fromBufferAttribute(n,p),s.fromBufferAttribute(n,m),o.fromBufferAttribute(n,f),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),l.fromBufferAttribute(r,p),c.fromBufferAttribute(r,m),h.fromBufferAttribute(r,f),l.add(u),c.add(u),h.add(u),r.setXYZ(p,l.x,l.y,l.z),r.setXYZ(m,c.x,c.y,c.z),r.setXYZ(f,h.x,h.y,h.z)}else for(let e=0,t=n.count;e<t;e+=3)a.fromBufferAttribute(n,e+0),s.fromBufferAttribute(n,e+1),o.fromBufferAttribute(n,e+2),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),r.setXYZ(e+0,u.x,u.y,u.z),r.setXYZ(e+1,u.x,u.y,u.z),r.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(const o in r)if(void 0!==e.attributes[o]){var i=r[o].array,n=e.attributes[o],a=n.array,n=n.itemSize*t,s=Math.min(a.length,i.length-n);for(let e=0,t=n;e<s;e++,t++)i[t]=a[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){var r=this.attributes.normal;for(let e=0,t=r.count;e<t;e++)_vector$8.fromBufferAttribute(r,e),_vector$8.normalize(),r.setXYZ(e,_vector$8.x,_vector$8.y,_vector$8.z)}toNonIndexed(){function r(r,i){var n=r.array,a=r.itemSize,e=r.normalized,s=new n.constructor(i.length*a);let o=0,l=0;for(let e=0,t=i.length;e<t;e++){o=r.isInterleavedBufferAttribute?i[e]*r.data.stride+r.offset:i[e]*a;for(let e=0;e<a;e++)s[l++]=n[o++]}return new BufferAttribute(s,a,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var i=new BufferGeometry,n=this.index.array,e=this.attributes;for(const u in e){var t=r(e[u],n);i.setAttribute(u,t)}var a=this.morphAttributes;for(const d in a){var s=[],o=a[d];for(let e=0,t=o.length;e<t;e++){var l=r(o[e],n);s.push(l)}i.morphAttributes[d]=s}i.morphTargetsRelative=this.morphTargetsRelative;var c=this.groups;for(let e=0,t=c.length;e<t;e++){var h=c[e];i.addGroup(h.start,h.count,h.materialIndex)}return i}toJSON(){var r={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),0<Object.keys(this.userData).length&&(r.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const c in e)void 0!==e[c]&&(r[c]=e[c])}else{r.data={attributes:{}};var t=this.index,i=(null!==t&&(r.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)}),this.attributes);for(const h in i){var n=i[h];r.data.attributes[h]=n.toJSON(r.data)}var a={};let e=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u],o=[];for(let e=0,t=s.length;e<t;e++){var l=s[e];o.push(l.toJSON(r.data))}0<o.length&&(a[u]=o,e=!0)}e&&(r.data.morphAttributes=a,r.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups,t=(0<t.length&&(r.data.groups=JSON.parse(JSON.stringify(t))),this.boundingSphere);null!==t&&(r.data.boundingSphere={center:t.center.toArray(),radius:t.radius})}return r}clone(){return(new BufferGeometry).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var r={},t=(this.name=e.name,e.index),i=(null!==t&&this.setIndex(t.clone(r)),e.attributes);for(const h in i){var n=i[h];this.setAttribute(h,n.clone(r))}var a=e.morphAttributes;for(const u in a){var s=[],o=a[u];for(let e=0,t=o.length;e<t;e++)s.push(o[e].clone(r));this.morphAttributes[u]=s}this.morphTargetsRelative=e.morphTargetsRelative;var l=e.groups;for(let e=0,t=l.length;e<t;e++){var c=l[e];this.addGroup(c.start,c.count,c.materialIndex)}t=e.boundingBox,null!==t&&(this.boundingBox=t.clone()),t=e.boundingSphere;return null!==t&&(this.boundingSphere=t.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}BufferGeometry.prototype.isBufferGeometry=!0;const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;class Mesh extends Object3D{constructor(e=new BufferGeometry,t=new MeshBasicMaterial){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var i=t[r[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var n=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(i,n){var e=this.geometry,a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere$3.copy(e.boundingSphere),_sphere$3.applyMatrix4(t),!1!==i.ray.intersectsSphere(_sphere$3))&&(_inverseMatrix$2.copy(t).invert(),_ray$2.copy(i.ray).applyMatrix4(_inverseMatrix$2),null===e.boundingBox||!1!==_ray$2.intersectsBox(e.boundingBox))){let r;if(e.isBufferGeometry){var s=e.index,o=e.attributes.position,l=e.morphAttributes.position,c=e.morphTargetsRelative,h=e.attributes.uv,u=e.attributes.uv2,d=e.groups,p=e.drawRange;if(null!==s)if(Array.isArray(a))for(let e=0,t=d.length;e<t;e++){var m=d[e],f=a[m.materialIndex];for(let e=Math.max(m.start,p.start),t=Math.min(m.start+m.count,p.start+p.count);e<t;e+=3){var g=s.getX(e),v=s.getX(e+1),_=s.getX(e+2);(r=checkBufferGeometryIntersection(this,f,i,_ray$2,o,l,c,h,u,g,v,_))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=m.materialIndex,n.push(r))}}else for(let e=Math.max(0,p.start),t=Math.min(s.count,p.start+p.count);e<t;e+=3){var y=s.getX(e),x=s.getX(e+1),b=s.getX(e+2);(r=checkBufferGeometryIntersection(this,a,i,_ray$2,o,l,c,h,u,y,x,b))&&(r.faceIndex=Math.floor(e/3),n.push(r))}else if(void 0!==o)if(Array.isArray(a))for(let e=0,t=d.length;e<t;e++){var M=d[e],w=a[M.materialIndex];for(let e=Math.max(M.start,p.start),t=Math.min(M.start+M.count,p.start+p.count);e<t;e+=3){var S=e,T=e+1,E=e+2;(r=checkBufferGeometryIntersection(this,w,i,_ray$2,o,l,c,h,u,S,T,E))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=M.materialIndex,n.push(r))}}else for(let e=Math.max(0,p.start),t=Math.min(o.count,p.start+p.count);e<t;e+=3){var A=e,L=e+1,C=e+2;(r=checkBufferGeometryIntersection(this,a,i,_ray$2,o,l,c,h,u,A,L,C))&&(r.faceIndex=Math.floor(e/3),n.push(r))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function checkIntersection(e,t,r,i,n,a,s,o){let l;if(null===(l=t.side===BackSide?i.intersectTriangle(s,a,n,!0,o):i.intersectTriangle(n,a,s,t.side!==DoubleSide,o)))return null;_intersectionPointWorld.copy(o),_intersectionPointWorld.applyMatrix4(e.matrixWorld);i=r.ray.origin.distanceTo(_intersectionPointWorld);return i<r.near||i>r.far?null:{distance:i,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,r,i,n,a,s,o,l,c,h,u){_vA$1.fromBufferAttribute(n,c),_vB$1.fromBufferAttribute(n,h),_vC$1.fromBufferAttribute(n,u);var d=e.morphTargetInfluences;if(a&&d){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],m=a[e];0!==p&&(_tempA.fromBufferAttribute(m,c),_tempB.fromBufferAttribute(m,h),_tempC.fromBufferAttribute(m,u),s?(_morphA.addScaledVector(_tempA,p),_morphB.addScaledVector(_tempB,p),_morphC.addScaledVector(_tempC,p)):(_morphA.addScaledVector(_tempA.sub(_vA$1),p),_morphB.addScaledVector(_tempB.sub(_vB$1),p),_morphC.addScaledVector(_tempC.sub(_vC$1),p)))}_vA$1.add(_morphA),_vB$1.add(_morphB),_vC$1.add(_morphC)}e.isSkinnedMesh&&(e.boneTransform(c,_vA$1),e.boneTransform(h,_vB$1),e.boneTransform(u,_vC$1));n=checkIntersection(e,t,r,i,_vA$1,_vB$1,_vC$1,_intersectionPoint);return n&&(o&&(_uvA$1.fromBufferAttribute(o,c),_uvB$1.fromBufferAttribute(o,h),_uvC$1.fromBufferAttribute(o,u),n.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),l&&(_uvA$1.fromBufferAttribute(l,c),_uvB$1.fromBufferAttribute(l,h),_uvC$1.fromBufferAttribute(l,u),n.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),e={a:c,b:h,c:u,normal:new Vector3,materialIndex:0},Triangle.getNormal(_vA$1,_vB$1,_vC$1,e.normal),n.face=e),n}Mesh.prototype.isMesh=!0;class BoxGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,i=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:a};const A=this,L=(i=Math.floor(i),n=Math.floor(n),a=Math.floor(a),[]),C=[],R=[],P=[];let B=0,D=0;function s(r,i,n,a,s,e,t,o,l,c,h){var u=e/l,d=t/c,p=e/2,m=t/2,f=o/2,g=l+1,v=c+1;let _=0,y=0;var x=new Vector3;for(let t=0;t<v;t++){var b=t*d-m;for(let e=0;e<g;e++){var M=e*u-p;x[r]=M*a,x[i]=b*s,x[n]=f,C.push(x.x,x.y,x.z),x[r]=0,x[i]=0,x[n]=0<o?1:-1,R.push(x.x,x.y,x.z),P.push(e/l),P.push(1-t/c),_+=1}}for(let t=0;t<c;t++)for(let e=0;e<l;e++){var w=B+e+g*t,S=B+e+g*(t+1),T=B+(e+1)+g*(t+1),E=B+(e+1)+g*t;L.push(w,S,E),L.push(S,T,E),y+=6}A.addGroup(D,y,h),D+=y,B+=_}s("z","y","x",-1,-1,r,t,e,a,n,0),s("z","y","x",1,-1,r,t,-e,a,n,1),s("x","z","y",1,1,e,r,t,i,a,2),s("x","z","y",1,-1,e,r,-t,i,a,3),s("x","y","z",1,-1,e,t,r,i,n,4),s("x","y","z",-1,-1,e,t,-r,i,n,5),this.setIndex(L),this.setAttribute("position",new Float32BufferAttribute(C,3)),this.setAttribute("normal",new Float32BufferAttribute(R,3)),this.setAttribute("uv",new Float32BufferAttribute(P,2))}static fromJSON(e){return new BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function cloneUniforms(e){var t={};for(const i in e){t[i]={};for(const n in e[i]){var r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function mergeUniforms(t){var r={};for(let e=0;e<t.length;e++){var i=cloneUniforms(t[e]);for(const n in i)r[n]=i[n]}return r}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class ShaderMaterial extends Material{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){var t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){var r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var i={};for(const a in this.extensions)!0===this.extensions[a]&&(i[a]=!0);return 0<Object.keys(i).length&&(t.extensions=i),t}}ShaderMaterial.prototype.isShaderMaterial=!0;class Camera extends Object3D{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Camera.prototype.isCamera=!0;class PerspectiveCamera extends Camera{constructor(e=50,t=1,r=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*RAD2DEG*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*DEG2RAD*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*RAD2DEG*Math.atan(Math.tan(.5*DEG2RAD*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,i,n,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*DEG2RAD*this.fov)/this.zoom,r=2*t,i=this.aspect*r,n=-.5*i;var a,s=this.view,o=(null!==this.view&&this.view.enabled&&(o=s.fullWidth,a=s.fullHeight,n+=s.offsetX*i/o,t-=s.offsetY*r/a,i*=s.width/o,r*=s.height/a),this.filmOffset);0!==o&&(n+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+i,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){e=super.toJSON(e);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}PerspectiveCamera.prototype.isPerspectiveCamera=!0;const fov=90,aspect=1;class CubeCamera extends Object3D{constructor(e,t,r){super(),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget?console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."):(this.renderTarget=r,(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(1,0,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(-1,0,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,0,1),r.lookAt(new Vector3(0,1,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,0,-1),r.lookAt(new Vector3(0,-1,0)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(0,0,1)),this.add(r),(r=new PerspectiveCamera(fov,aspect,e,t)).layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(0,0,-1)),this.add(r))}update(e,t){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,[i,n,a,s,o,l]=this.children,c=e.xr.enabled,h=e.getRenderTarget(),u=(e.xr.enabled=!1,r.texture.generateMipmaps);r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,i),e.setRenderTarget(r,1),e.render(t,n),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,s),e.setRenderTarget(r,4),e.render(t,o),r.texture.generateMipmaps=u,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c}}class CubeTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:CubeReflectionMapping,r,i,n,a,s=void 0!==s?s:RGBFormat,o,l,c),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}CubeTexture.prototype.isCubeTexture=!0;class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),super(e,e,t),t=t||{},this.texture=new CubeTexture(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:LinearFilter,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=RGBAFormat,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new BoxGeometry(5,5,5),r=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:BackSide,blending:NoBlending}),i=(r.uniforms.tEquirect.value=t,new Mesh(i,r)),r=t.minFilter;return t.minFilter===LinearMipmapLinearFilter&&(t.minFilter=LinearFilter),new CubeCamera(1,10,this).update(e,i),t.minFilter=r,i.geometry.dispose(),i.material.dispose(),this}clear(t,r,i,n){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(r,i,n);t.setRenderTarget(e)}}WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0;const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e=new Vector3(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){r=_vector1.subVectors(r,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){var r=e.delta(_vector1),i=this.normal.dot(r);return 0===i?0===this.distanceToPoint(e.start)?t.copy(e.start):null:(i=-(e.start.dot(this.normal)+this.constant)/i)<0||1<i?null:t.copy(r).multiplyScalar(i).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||_normalMatrix.getNormalMatrix(e),e=this.coplanarPoint(_vector1).applyMatrix4(e),t=this.normal.applyMatrix3(t).normalize();return this.constant=-e.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Plane.prototype.isPlane=!0;const _sphere$2=new Sphere,_vector$7=new Vector3;class Frustum{constructor(e=new Plane,t=new Plane,r=new Plane,i=new Plane,n=new Plane,a=new Plane){this.planes=[e,t,r,i,n,a]}set(e,t,r,i,n,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(i),s[4].copy(n),s[5].copy(a),this}copy(t){var r=this.planes;for(let e=0;e<6;e++)r[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){var t=this.planes,e=e.elements,r=e[0],i=e[1],n=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],p=e[11],m=e[12],f=e[13],g=e[14],e=e[15];return t[0].setComponents(a-r,c-s,p-h,e-m).normalize(),t[1].setComponents(a+r,c+s,p+h,e+m).normalize(),t[2].setComponents(a+i,c+o,p+u,e+f).normalize(),t[3].setComponents(a-i,c-o,p-u,e-f).normalize(),t[4].setComponents(a-n,c-l,p-d,e-g).normalize(),t[5].setComponents(a+n,c+l,p+d,e+g).normalize(),this}intersectsObject(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$2.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSprite(e){return _sphere$2.center.set(0,0,0),_sphere$2.radius=.7071067811865476,_sphere$2.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSphere(e){var t=this.planes,r=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<i)return!1;return!0}intersectsBox(t){var r=this.planes;for(let e=0;e<6;e++){var i=r[e];if(_vector$7.x=(0<i.normal.x?t.max:t.min).x,_vector$7.y=(0<i.normal.y?t.max:t.min).y,_vector$7.z=(0<i.normal.z?t.max:t.min).z,i.distanceToPoint(_vector$7)<0)return!1}return!0}containsPoint(t){var r=this.planes;for(let e=0;e<6;e++)if(r[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function WebGLAnimation(){let r=null,e=!1,i=null,n=null;function a(e,t){i(e,t),n=r.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==i&&(n=r.requestAnimationFrame(a),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(e){i=e},setContext:function(e){r=e}}}function WebGLAttributes(s,e){const o=e.isWebGL2,l=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),l.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=l.get(e);t&&(s.deleteBuffer(t.buffer),l.delete(e))},update:function(e,t){var r,i,n,a;e.isGLBufferAttribute?(!(r=l.get(e))||r.version<e.version)&&l.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}):(e.isInterleavedBufferAttribute&&(e=e.data),void 0===(r=l.get(e))?l.set(e,function(e,t){var r=e.array,i=e.usage,n=s.createBuffer();s.bindBuffer(t,n),s.bufferData(t,r,i),e.onUploadCallback();let a=5126;return r instanceof Float32Array?a=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:r instanceof Int16Array?a=5122:r instanceof Uint32Array?a=5125:r instanceof Int32Array?a=5124:r instanceof Int8Array?a=5120:(r instanceof Uint8Array||r instanceof Uint8ClampedArray)&&(a=5121),{buffer:n,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,t)):r.version<e.version&&(i=r.buffer,t=t,a=(n=e).array,n=n.updateRange,s.bindBuffer(t,i),-1===n.count?s.bufferSubData(t,0,a):(o?s.bufferSubData(t,n.offset*a.BYTES_PER_ELEMENT,a,n.offset,n.count):s.bufferSubData(t,n.offset*a.BYTES_PER_ELEMENT,a.subarray(n.offset,n.offset+n.count)),n.count=-1),r.version=e.version))}}}class PlaneGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=e/2,a=t/2,s=Math.floor(r),o=Math.floor(i),l=s+1,c=o+1,h=e/s,u=t/o,d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*h-n;p.push(v,-g,0),m.push(0,0,1),f.push(e/s),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var _=e+l*t,y=e+l*(t+1),x=e+1+l*(t+1),b=e+1+l*t;d.push(_,y,b),d.push(y,x,b)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}static fromJSON(e){return new PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)}}var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotVH = saturate( dot( geometry.viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float NoH ) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float NoV, float NoL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( NoL + NoV - NoL * NoV ) ) );\n}\nvec3 BRDF_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in GeometricContext geometry ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenTint = sheenTint;\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenTint;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( material.roughness, directLight.direction, geometry, material.sheenTint );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment="#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = transmission.a;\n#endif",transmission_pars_fragment="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshnormal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshnormal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenTint;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,alphatest_pars_fragment:alphatest_pars_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normal_pars_fragment:normal_pars_fragment,normal_pars_vertex:normal_pars_vertex,normal_vertex:normal_vertex,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,output_fragment:output_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmission_fragment:transmission_fragment,transmission_pars_fragment:transmission_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshnormal_frag:meshnormal_frag,meshnormal_vert:meshnormal_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert},UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};function WebGLBackground(n,a,r,s,i){const o=new Color(0);let l=0,c,h,u=null,d=0,p=null;function m(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),l=t,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,m(o,l)},render:function(e,t){let r=!1,i=!0===t.isScene?t.background:null;i&&i.isTexture&&(i=a.get(i)),t=(t=n.xr).getSession&&t.getSession(),null===(i=t&&"additive"===t.environmentBlendMode?null:i)?m(o,l):i&&i.isColor&&(m(i,1),r=!0),(n.autoClear||r)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),i&&(i.isCubeTexture||i.mapping===CubeUVReflectionMapping)?(void 0===h&&((h=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),h.material.uniforms.envMap.value=i,h.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,u===i&&d===i.version&&p===n.toneMapping||(h.material.needsUpdate=!0,u=i,d=i.version,p=n.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null)):i&&i.isTexture&&(void 0===c&&((c=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(c)),!0===(c.material.uniforms.t2D.value=i).matrixAutoUpdate&&i.updateMatrix(),c.material.uniforms.uvTransform.value.copy(i.matrix),u===i&&d===i.version&&p===n.toneMapping||(c.material.needsUpdate=!0,u=i,d=i.version,p=n.toneMapping),e.unshift(c,c.geometry,c.material,0,0,null))}}}function WebGLBindingStates(y,x,b,M){const n=y.getParameter(34921),d=M.isWebGL2?null:x.get("OES_vertex_array_object"),p=M.isWebGL2||null!==d,m={},e=v(null);let f=e;function g(e){if(M.isWebGL2)return y.bindVertexArray(e);d.bindVertexArrayOES(e)}function a(e){if(M.isWebGL2)return y.deleteVertexArray(e);d.deleteVertexArrayOES(e)}function v(e){var t=[],r=[],i=[];for(let e=0;e<n;e++)t[e]=0,r[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:i,object:e,attributes:{},index:null}}function w(){var r=f.newAttributes;for(let e=0,t=r.length;e<t;e++)r[e]=0}function S(e){T(e,0)}function T(e,t){var r=f.newAttributes,i=f.enabledAttributes,n=f.attributeDivisors;r[e]=1,0===i[e]&&(y.enableVertexAttribArray(e),i[e]=1),n[e]!==t&&((M.isWebGL2?y:x.get("ANGLE_instanced_arrays"))[M.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),n[e]=t)}function E(){var r=f.newAttributes,i=f.enabledAttributes;for(let e=0,t=i.length;e<t;e++)i[e]!==r[e]&&(y.disableVertexAttribArray(e),i[e]=0)}function A(e,t,r,i,n,a){!0!==M.isWebGL2||5124!==r&&5125!==r?y.vertexAttribPointer(e,t,r,i,n,a):y.vertexAttribIPointer(e,t,r,n,a)}function s(){t(),f!==e&&g((f=e).object)}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,r,i,n){let a=!1;if(p){var s=function(e,t,r){r=!0===r.wireframe;let i=m[e.id];void 0===i&&(i={},m[e.id]=i);let n=i[t.id];void 0===n&&(n={},i[t.id]=n);let a=n[r];void 0===a&&(a=v(M.isWebGL2?y.createVertexArray():d.createVertexArrayOES()),n[r]=a);return a}(i,r,t);if(f!==s&&g((f=s).object),a=function(e,t){var r=f.attributes,i=e.attributes;let n=0;for(const o in i){var a=r[o],s=i[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;n++}return f.attributesNum!==n||f.index!==t}(i,n)){var s=n,o={},l=i.attributes;let e=0;for(const u in l){var c=l[u],h={};(h.attribute=c).data&&(h.data=c.data),o[u]=h,e++}f.attributes=o,f.attributesNum=e,f.index=s}}else{s=!0===t.wireframe;f.geometry===i.id&&f.program===r.id&&f.wireframe===s||(f.geometry=i.id,f.program=r.id,f.wireframe=s,a=!0)}!0===e.isInstancedMesh&&(a=!0),null!==n&&b.update(n,34963),a&&(function(e,t,r,i){if(!1===M.isWebGL2&&(e.isInstancedMesh||i.isInstancedBufferGeometry)&&null===x.get("ANGLE_instanced_arrays"))return;w();var n=i.attributes,a=r.getAttributes(),s=t.defaultAttributeValues;for(const _ in a){var o=a[_];if(0<=o.location){let t=n[_];if(void 0!==(t=void 0===t&&("instanceMatrix"===_&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===_)&&e.instanceColor?e.instanceColor:t)){var l=t.normalized,c=t.itemSize,h=b.get(t);if(void 0!==h){var u=h.buffer,d=h.type,p=h.bytesPerElement;if(t.isInterleavedBufferAttribute){var m=t.data,f=m.stride,g=t.offset;if(m&&m.isInstancedInterleavedBuffer){for(let e=0;e<o.locationSize;e++)T(o.location+e,m.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=m.meshPerAttribute*m.count)}else for(let e=0;e<o.locationSize;e++)S(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)A(o.location+e,c/o.locationSize,d,l,f*p,(g+c/o.locationSize*e)*p)}else{if(t.isInstancedBufferAttribute){for(let e=0;e<o.locationSize;e++)T(o.location+e,t.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<o.locationSize;e++)S(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)A(o.location+e,c/o.locationSize,d,l,c*p,c/o.locationSize*e*p)}}}else if(void 0!==s){var v=s[_];if(void 0!==v)switch(v.length){case 2:y.vertexAttrib2fv(o.location,v);break;case 3:y.vertexAttrib3fv(o.location,v);break;case 4:y.vertexAttrib4fv(o.location,v);break;default:y.vertexAttrib1fv(o.location,v)}}}}E()}(e,t,r,i),null!==n)&&y.bindBuffer(34963,b.get(n).buffer)},reset:s,resetDefaultState:t,dispose:function(){s();for(const r in m){var e=m[r];for(const i in e){var t=e[i];for(const n in t)a(t[n].object),delete t[n];delete e[i]}delete m[r]}},releaseStatesOfGeometry:function(e){if(void 0!==m[e.id]){var t=m[e.id];for(const i in t){var r=t[i];for(const n in r)a(r[n].object),delete r[n];delete t[i]}delete m[e.id]}},releaseStatesOfProgram:function(e){for(const i in m){var t=m[i];if(void 0!==t[e.id]){var r=t[e.id];for(const n in r)a(r[n].object),delete r[n];delete t[e.id]}}},initAttributes:w,enableAttribute:S,disableUnusedAttributes:E}}function WebGLBufferRenderer(a,s,o,e){const l=e.isWebGL2;let c;this.setMode=function(e){c=e},this.render=function(e,t){a.drawArrays(c,e,t),o.update(t,c,1)},this.renderInstances=function(r,i,n){if(0!==n){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,r,i,n),o.update(i,c,n)}}}function WebGLCapabilities(t,r,e){let i;function n(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=n(s),o=(o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o),a||r.has("WEBGL_draw_buffers")),e=!0===e.logarithmicDepthBuffer,l=t.getParameter(34930),c=t.getParameter(35660),h=t.getParameter(3379),u=t.getParameter(34076),d=t.getParameter(34921),p=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),g=0<c,v=a||r.has("OES_texture_float"),_=g&&v,y=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){var e;return i=void 0===i?!0===r.has("EXT_texture_filter_anisotropic")?(e=r.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0:i},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:e,maxTextures:l,maxVertexTextures:c,maxTextureSize:h,maxCubemapSize:u,maxAttributes:d,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:_,maxSamples:y}}function WebGLClipping(l){const o=this;let c=null,h=0,u=!1,d=!1;const p=new Plane,m=new Matrix3,f={value:null,needsUpdate:!1};function g(){f.value!==c&&(f.value=c,f.needsUpdate=0<h),o.numPlanes=h,o.numIntersection=0}function v(r,e,i,t){var n=null!==r?r.length:0;let a=null;if(0!==n){if(a=f.value,!0!==t||null===a){var t=i+4*n,s=e.matrixWorldInverse;m.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=i;e!==n;++e,t+=4)p.copy(r[e]).applyMatrix4(s,m),p.normal.toArray(a,t),a[t+3]=p.constant}f.value=a,f.needsUpdate=!0}return o.numPlanes=n,o.numIntersection=0,a}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){var i=0!==e.length||t||0!==h||u;return u=t,c=v(e,r,0),h=e.length,i},this.beginShadows=function(){d=!0,v(null)},this.endShadows=function(){d=!1,g()},this.setState=function(e,t,r){var i=e.clippingPlanes,n=e.clipIntersection,a=e.clipShadows,e=l.get(e);if(!u||null===i||0===i.length||d&&!a)d?v(null):g();else{var a=d?0:h,s=4*a,o=e.clippingState||null;f.value=o,o=v(i,t,s,r);for(let e=0;e!==s;++e)o[e]=c[e];e.clippingState=o,this.numIntersection=n?this.numPlanes:0,this.numPlanes+=a}}}function WebGLCubeMaps(i){let n=new WeakMap;function a(e,t){return t===EquirectangularReflectionMapping?e.mapping=CubeReflectionMapping:t===EquirectangularRefractionMapping&&(e.mapping=CubeRefractionMapping),e}function s(e){var e=e.target,t=(e.removeEventListener("dispose",s),n.get(e));void 0!==t&&(n.delete(e),t.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t,r=e.mapping;if(r===EquirectangularReflectionMapping||r===EquirectangularRefractionMapping)return n.has(e)?a(n.get(e).texture,e.mapping):(r=e.image)&&0<r.height?(t=i.getRenderTarget(),(r=new WebGLCubeRenderTarget(r.height/2)).fromEquirectangularTexture(i,e),n.set(e,r),i.setRenderTarget(t),e.addEventListener("dispose",s),a(r.texture,e.mapping)):null}return e},dispose:function(){n=new WeakMap}}}ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheenTint:{value:new Color(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new Color(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new Color(1,1,1)},specularTintMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};class OrthographicCamera extends Camera{constructor(e=-1,t=1,r=1,i=-1,n=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,i,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let n=r-e,a=r+e,s=i+t,o=i-t;null!==this.view&&this.view.enabled&&(r=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom,n+=r*this.view.offsetX,a=n+r*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height),this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){e=super.toJSON(e);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}OrthographicCamera.prototype.isOrthographicCamera=!0;class RawShaderMaterial extends ShaderMaterial{constructor(e){super(e),this.type="RawShaderMaterial"}}RawShaderMaterial.prototype.isRawShaderMaterial=!0;const LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,LOD_MAX),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6},_flatCamera=new OrthographicCamera,{_lodPlanes,_sizeLods,_sigmas}=_createPlanes(),_clearColor=new Color;let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_getBlurShader(MAX_SAMPLES),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,i=100){_oldTarget=this._renderer.getRenderTarget();var n=this._allocateTargets();return this._sceneToCubeUV(e,r,i,n),0<t&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=_getCubemapShader(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e){_oldTarget=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:!1,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(e)?e.encoding:RGBEEncoding,depthBuffer:!1},r=_createRenderTarget(t);return r.depthBuffer=!e,this._pingPongRenderTarget=_createRenderTarget(t),r}_compileMaterial(e){e=new Mesh(_lodPlanes[0],e);this._renderer.compile(e,_flatCamera)}_sceneToCubeUV(t,e,r,i){var n=new PerspectiveCamera(90,1,e,r),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,e=o.autoClear,r=o.outputEncoding,l=o.toneMapping,c=(o.getClearColor(_clearColor),o.toneMapping=NoToneMapping,o.outputEncoding=LinearEncoding,o.autoClear=!1,new MeshBasicMaterial({name:"PMREM.Background",side:BackSide,depthWrite:!1,depthTest:!1})),h=new Mesh(new BoxGeometry,c);let u=!1;var d=t.background;d?d.isColor&&(c.color.copy(d),t.background=null,u=!0):(c.color.copy(_clearColor),u=!0);for(let e=0;e<6;e++){var p=e%3;0==p?(n.up.set(0,a[e],0),n.lookAt(s[e],0,0)):1==p?(n.up.set(0,0,a[e]),n.lookAt(0,s[e],0)):(n.up.set(0,a[e],0),n.lookAt(0,0,s[e])),_setViewport(i,p*SIZE_MAX,2<e?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),o.setRenderTarget(i),u&&o.render(h,n),o.render(t,n)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=l,o.outputEncoding=r,o.autoClear=e,t.background=d}_textureToCubeUV(e,t){var r=this._renderer,i=(e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader()),e.isCubeTexture?this._cubemapShader:this._equirectShader),n=new Mesh(_lodPlanes[0],i),i=i.uniforms;(i.envMap.value=e).isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=ENCODINGS[e.encoding],i.outputEncoding.value=ENCODINGS[t.texture.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),r.setRenderTarget(t),r.render(n,_flatCamera)}_applyPMREM(t){var e=this._renderer,r=e.autoClear;e.autoClear=!1;for(let e=1;e<TOTAL_LODS;e++){var i=Math.sqrt(_sigmas[e]*_sigmas[e]-_sigmas[e-1]*_sigmas[e-1]),n=_axisDirections[(e-1)%_axisDirections.length];this._blur(t,e-1,e,i,n)}e.autoClear=r}_blur(e,t,r,i,n){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,i,"latitudinal",n),this._halfBlur(a,e,r,r,i,"longitudinal",n)}_halfBlur(e,t,r,i,n,a,s){var o=this._renderer,l=this._blurMaterial,c=("latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!"),new Mesh(_lodPlanes[i],l)),l=l.uniforms,h=_sizeLods[r]-1,h=isFinite(n)?Math.PI/(2*h):2*Math.PI/(2*MAX_SAMPLES-1),u=n/h,d=isFinite(n)?1+Math.floor(3*u):MAX_SAMPLES,p=(d>MAX_SAMPLES&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${d} samples when the maximum is set to `+MAX_SAMPLES),[]);let m=0;for(let e=0;e<MAX_SAMPLES;++e){const g=e/u;var f=Math.exp(-g*g/2);p.push(f),0==e?m+=f:e<d&&(m+=2*f)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;l.envMap.value=e.texture,l.samples.value=d,l.weights.value=p,l.latitudinal.value="latitudinal"===a,s&&(l.poleAxis.value=s),l.dTheta.value=h,l.mipInt.value=LOD_MAX-r,l.inputEncoding.value=ENCODINGS[e.texture.encoding],l.outputEncoding.value=ENCODINGS[e.texture.encoding];n=_sizeLods[i];const g=3*Math.max(0,SIZE_MAX-2*n);a=(0===i?0:2*SIZE_MAX)+2*n*(i>LOD_MAX-LOD_MIN?i-LOD_MAX+LOD_MIN:0);_setViewport(t,g,a,3*n,2*n),o.setRenderTarget(t),o.render(c,_flatCamera)}}function _isLDR(e){return void 0!==e&&e.type===UnsignedByteType&&(e.encoding===LinearEncoding||e.encoding===sRGBEncoding||e.encoding===GammaEncoding)}function _createPlanes(){var r=[],i=[],n=[];let a=LOD_MAX;for(let t=0;t<TOTAL_LODS;t++){var s=Math.pow(2,a);i.push(s);let e=1/s;t>LOD_MAX-LOD_MIN?e=EXTRA_LOD_SIGMA[t-LOD_MAX+LOD_MIN-1]:0==t&&(e=0),n.push(e);var s=1/(s-1),o=-s/2,s=1+s/2,l=[o,o,s,o,s,s,o,o,s,s,o,s],c=new Float32Array(108),h=new Float32Array(72),u=new Float32Array(36);for(let e=0;e<6;e++){var d=e%3*2/3-1,p=2<e?0:-1,d=(c.set([d,p,0,d+2/3,p,0,d+2/3,1+p,0,d,p,0,d+2/3,1+p,0,d,1+p,0],18*e),h.set(l,12*e),[e,e,e,e,e,e]);u.set(d,6*e)}o=new BufferGeometry;o.setAttribute("position",new BufferAttribute(c,3)),o.setAttribute("uv",new BufferAttribute(h,2)),o.setAttribute("faceIndex",new BufferAttribute(u,1)),r.push(o),a>LOD_MIN&&a--}return{_lodPlanes:r,_sizeLods:i,_sigmas:n}}function _createRenderTarget(e){e=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return e.texture.mapping=CubeUVReflectionMapping,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function _setViewport(e,t,r,i,n){e.viewport.set(t,r,i,n),e.scissor.set(t,r,i,n)}function _getBlurShader(e){var t=new Float32Array(e),r=new Vector3(0,1,0);return new RawShaderMaterial({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${_getEncodings()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getEquirectShader(){var e=new Vector2(1,1);return new RawShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${_getEncodings()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapShader(){return new RawShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${_getEncodings()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function _getEncodings(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function WebGLCubeUVMaps(n){let a=new WeakMap,s=null;function o(e){var e=e.target,t=(e.removeEventListener("dispose",o),a.get(e));void 0!==t&&(a.delete(e),t.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t,r=e.mapping,i=r===EquirectangularReflectionMapping||r===EquirectangularRefractionMapping,r=r===CubeReflectionMapping||r===CubeRefractionMapping;if(i||r)return a.has(e)?a.get(e).texture:(t=e.image,i&&t&&0<t.height||r&&t&&function(t){let r=0;for(let e=0;e<6;e++)void 0!==t[e]&&r++;return 6===r}(t)?(r=n.getRenderTarget(),null===s&&(s=new PMREMGenerator(n)),t=i?s.fromEquirectangular(e):s.fromCubemap(e),a.set(e,t),n.setRenderTarget(r),e.addEventListener("dispose",o),t.texture):null)}return e},dispose:function(){a=new WeakMap,null!==s&&(s.dispose(),s=null)}}}function WebGLExtensions(r){const i={};function n(e){if(void 0!==i[e])return i[e];let t;switch(e){case"WEBGL_depth_texture":t=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=r.getExtension(e)}return i[e]=t}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){var t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function WebGLGeometries(e,d,i,n){const a={},p=new WeakMap;function s(e){var t=e.target;null!==t.index&&d.remove(t.index);for(const r in t.attributes)d.remove(t.attributes[r]);t.removeEventListener("dispose",s),delete a[t.id];e=p.get(t);e&&(d.remove(e),p.delete(t)),n.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,i.memory.geometries--}function o(e){var r=[],i=e.index,t=e.attributes.position;let n=0;if(null!==i){var a=i.array;n=i.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];r.push(s,o,o,l,l,s)}}else{i=t.array;n=t.version;for(let e=0,t=i.length/3-1;e<t;e+=3){var c=e+0,h=e+1,u=e+2;r.push(c,h,h,u,u,c)}}t=new(65535<arrayMax(r)?Uint32BufferAttribute:Uint16BufferAttribute)(r,1),t.version=n,i=p.get(e);i&&d.remove(i),p.set(e,t)}return{get:function(e,t){return!0!==a[t.id]&&(t.addEventListener("dispose",s),a[t.id]=!0,i.memory.geometries++),t},update:function(e){var t=e.attributes;for(const n in t)d.update(t[n],34962);var r=e.morphAttributes;for(const a in r){var i=r[a];for(let e=0,t=i.length;e<t;e++)d.update(i[e],34962)}},getWireframeAttribute:function(e){var t,r=p.get(e);return(!r||null!==(t=e.index)&&r.version<t.version)&&o(e),p.get(e)}}}function WebGLIndexedBufferRenderer(a,s,o,e){const l=e.isWebGL2;let c;let h,u;this.setMode=function(e){c=e},this.setIndex=function(e){h=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(c,t,h,e*u),o.update(t,c,1)},this.renderInstances=function(r,i,n){if(0!==n){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,i,h,r*u,n),o.update(i,c,n)}}}function WebGLInfo(e){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(e,t,r){switch(i.calls++,t){case 4:i.triangles+=r*(e/3);break;case 1:i.lines+=r*(e/2);break;case 3:i.lines+=r*(e-1);break;case 2:i.lines+=r*e;break;case 0:i.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function numericalSort(e,t){return e[0]-t[0]}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(p){const m={},f=new Float32Array(8),g=[];for(let e=0;e<8;e++)g[e]=[e,0];return{update:function(e,t,r,i){var n=e.morphTargetInfluences,a=void 0===n?0:n.length;let s=m[t.id];if(void 0===s||s.length!==a){s=[];for(let e=0;e<a;e++)s[e]=[e,0];m[t.id]=s}for(let e=0;e<a;e++){var o=s[e];o[0]=e,o[1]=n[e]}s.sort(absNumericalSort);for(let e=0;e<8;e++)e<a&&s[e][1]?(g[e][0]=s[e][0],g[e][1]=s[e][1]):(g[e][0]=Number.MAX_SAFE_INTEGER,g[e][1]=0);g.sort(numericalSort);var l=t.morphAttributes.position,c=t.morphAttributes.normal;let h=0;for(let e=0;e<8;e++){var u=g[e],d=u[0],u=u[1];d!==Number.MAX_SAFE_INTEGER&&u?(l&&t.getAttribute("morphTarget"+e)!==l[d]&&t.setAttribute("morphTarget"+e,l[d]),c&&t.getAttribute("morphNormal"+e)!==c[d]&&t.setAttribute("morphNormal"+e,c[d]),f[e]=u,h+=u):(l&&!0===t.hasAttribute("morphTarget"+e)&&t.deleteAttribute("morphTarget"+e),c&&!0===t.hasAttribute("morphNormal"+e)&&t.deleteAttribute("morphNormal"+e),f[e]=0)}e=t.morphTargetsRelative?1:1-h,i.getUniforms().setValue(p,"morphTargetBaseInfluence",e),i.getUniforms().setValue(p,"morphTargetInfluences",f)}}}function WebGLObjects(e,i,n,a){let s=new WeakMap;function o(e){e=e.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(e){var t=a.render.frame,r=e.geometry,r=i.get(e,r);return s.get(r)!==t&&(i.update(r),s.set(r,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",o)&&e.addEventListener("dispose",o),n.update(e.instanceMatrix,34962),null!==e.instanceColor)&&n.update(e.instanceColor,34962),r},dispose:function(){s=new WeakMap}}}class DataTexture2DArray extends Texture{constructor(e=null,t=1,r=1,i=1){super(null),this.image={data:e,width:t,height:r,depth:i},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}DataTexture2DArray.prototype.isDataTexture2DArray=!0;class DataTexture3D extends Texture{constructor(e=null,t=1,r=1,i=1){super(null),this.image={data:e,width:t,height:r,depth:i},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}DataTexture3D.prototype.isDataTexture3D=!0;const emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(r,i,n){var e=r[0];if(e<=0||0<e)return r;var t=i*n;let a=arrayCacheF32[t];if(void 0===a&&(a=new Float32Array(t),arrayCacheF32[t]=a),0!==i){e.toArray(a,0);for(let e=1,t=0;e!==i;++e)t+=n,r[e].toArray(a,t)}return a}function arraysEqual(r,i){if(r.length!==i.length)return!1;for(let e=0,t=r.length;e<t;e++)if(r[e]!==i[e])return!1;return!0}function copyArray(r,i){for(let e=0,t=i.length;e<t;e++)r[e]=i[e]}function allocTexUnits(t,r){let i=arrayCacheI32[r];void 0===i&&(i=new Int32Array(r),arrayCacheI32[r]=i);for(let e=0;e!==r;++e)i[e]=t.allocateTextureUnit();return i}function setValueV1f(e,t){var r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function setValueV2f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y):arraysEqual(r,t)||(e.uniform2fv(this.addr,t),copyArray(r,t))}function setValueV3f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z):void 0!==t.r?r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b):arraysEqual(r,t)||(e.uniform3fv(this.addr,t),copyArray(r,t))}function setValueV4f(e,t){var r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w):arraysEqual(r,t)||(e.uniform4fv(this.addr,t),copyArray(r,t))}function setValueM2(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix2fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat2array.set(i),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(r,i))}function setValueM3(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix3fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat3array.set(i),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(r,i))}function setValueM4(e,t){var r=this.cache,i=t.elements;void 0===i?arraysEqual(r,t)||(e.uniformMatrix4fv(this.addr,!1,t),copyArray(r,t)):arraysEqual(r,i)||(mat4array.set(i),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(r,i))}function setValueV1i(e,t){var r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function setValueV2i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform2iv(this.addr,t),copyArray(r,t))}function setValueV3i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform3iv(this.addr,t),copyArray(r,t))}function setValueV4i(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform4iv(this.addr,t),copyArray(r,t))}function setValueV1ui(e,t){var r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function setValueV2ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform2uiv(this.addr,t),copyArray(r,t))}function setValueV3ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform3uiv(this.addr,t),copyArray(r,t))}function setValueV4ui(e,t){var r=this.cache;arraysEqual(r,t)||(e.uniform4uiv(this.addr,t),copyArray(r,t))}function setValueT1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.safeSetTexture2D(t||emptyTexture,n)}function setValueT3D1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTexture3D(t||emptyTexture3d,n)}function setValueT6(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.safeSetTextureCube(t||emptyCubeTexture,n)}function setValueT2DArray1(e,t,r){var i=this.cache,n=r.allocateTextureUnit();i[0]!==n&&(e.uniform1i(this.addr,n),i[0]=n),r.setTexture2DArray(t||emptyTexture2dArray,n)}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV2fArray(e,t){t=flatten(t,this.size,2);e.uniform2fv(this.addr,t)}function setValueV3fArray(e,t){t=flatten(t,this.size,3);e.uniform3fv(this.addr,t)}function setValueV4fArray(e,t){t=flatten(t,this.size,4);e.uniform4fv(this.addr,t)}function setValueM2Array(e,t){t=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function setValueM3Array(e,t){t=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function setValueM4Array(e,t){t=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV1uiArray(e,t){e.uniform1uiv(this.addr,t)}function setValueV2uiArray(e,t){e.uniform2uiv(this.addr,t)}function setValueV3uiArray(e,t){e.uniform3uiv(this.addr,t)}function setValueV4uiArray(e,t){e.uniform4uiv(this.addr,t)}function setValueT1Array(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.safeSetTexture2D(t[e]||emptyTexture,n[e])}function setValueT6Array(e,t,r){var i=t.length,n=allocTexUnits(r,i);e.uniform1iv(this.addr,n);for(let e=0;e!==i;++e)r.safeSetTextureCube(t[e]||emptyCubeTexture,n[e])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}PureArrayUniform.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)},StructuredUniform.prototype.setValue=function(r,i,n){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){var s=a[e];s.setValue(r,i[s.id],n)}};const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,r,i){var n=e.name,a=n.length;for(RePathPart.lastIndex=0;;){var s=RePathPart.exec(n),o=RePathPart.lastIndex;let t=s[1];var l="]"===s[2],s=s[3];if(l&&(t|=0),void 0===s||"["===s&&o+2===a){addUniform(i,new(void 0===s?SingleUniform:PureArrayUniform)(t,e,r));break}{let e=i.map[t];void 0===e&&addUniform(i,e=new StructuredUniform(t)),i=e}}}function WebGLUniforms(t,r){this.seq=[],this.map={};var i=t.getProgramParameter(r,35718);for(let e=0;e<i;++e){var n=t.getActiveUniform(r,e);parseUniform(n,t.getUniformLocation(r,n.name),this)}}function WebGLShader(e,t,r){t=e.createShader(t);return e.shaderSource(t,r),e.compileShader(t),t}WebGLUniforms.prototype.setValue=function(e,t,r,i){t=this.map[t];void 0!==t&&t.setValue(e,r,i)},WebGLUniforms.prototype.setOptional=function(e,t,r){t=t[r];void 0!==t&&this.setValue(e,r,t)},WebGLUniforms.upload=function(r,i,n,a){for(let e=0,t=i.length;e!==t;++e){var s=i[e],o=n[s.id];!1!==o.needsUpdate&&s.setValue(r,o.value,a)}},WebGLUniforms.seqWithValue=function(r,i){var n=[];for(let e=0,t=r.length;e!==t;++e){var a=r[e];a.id in i&&n.push(a)}return n};let programIdCount=0;function addLineNumbers(e){var t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD","( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function getShaderErrors(e,t,r){var i=e.getShaderParameter(t,35713),n=e.getShaderInfoLog(t).trim();return i&&""===n?"":r.toUpperCase()+"\n\n"+n+"\n\n"+addLineNumbers(e.getShaderSource(t))}function getTexelDecodingFunction(e,t){t=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function getTexelEncodingFunction(e,t){t=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function getToneMappingFunction(e,t){let r;switch(t){case LinearToneMapping:r="Linear";break;case ReinhardToneMapping:r="Reinhard";break;case CineonToneMapping:r="OptimizedCineon";break;case ACESFilmicToneMapping:r="ACESFilmic";break;case CustomToneMapping:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){var t=[];for(const i in e){var r=e[i];!1!==r&&t.push("#define "+i+" "+r)}return t.join("\n")}function fetchAttributeLocations(r,i){var n={},e=r.getProgramParameter(i,35721);for(let t=0;t<e;t++){var a=r.getActiveAttrib(i,t),s=a.name;let e=1;35674===a.type&&(e=2),35675===a.type&&(e=3),35676===a.type&&(e=4),n[s]={type:a.type,location:r.getAttribLocation(i,s),locationSize:e}}return n}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){var r=ShaderChunk[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(r)}const deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,r,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,r,i)}function loopReplacer(e,t,r,i){let n="";for(let e=parseInt(t);e<parseInt(r);e++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return n}function generatePrecision(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===PCFShadowMap?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===PCFSoftShadowMap?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===VSMShadowMap&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:t="ENVMAP_TYPE_CUBE_UV"}return t}function generateEnvMapModeDefine(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:t="ENVMAP_MODE_REFRACTION"}return t}function generateEnvMapBlendingDefine(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:t="ENVMAP_BLENDING_MIX";break;case AddOperation:t="ENVMAP_BLENDING_ADD"}return t}function WebGLProgram(e,t,r,i){const n=e.getContext();var a=r.defines,s=r.vertexShader,o=r.fragmentShader,l=generateShadowMapTypeDefine(r),c=generateEnvMapTypeDefine(r),h=generateEnvMapModeDefine(r),u=generateEnvMapBlendingDefine(r),d=0<e.gammaFactor?e.gammaFactor:1,p=r.isWebGL2?"":generateExtensions(r),a=generateDefines(a);const m=n.createProgram();let f,g,v=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(0<(f=[a].filter(filterEmptyLine).join("\n")).length&&(f+="\n"),0<(g=[p,a].filter(filterEmptyLine).join("\n")).length&&(g+="\n")):(f=[generatePrecision(r),"#define SHADER_NAME "+r.shaderName,a,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+h:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularTintMap?"#define USE_SPECULARTINTMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),g=[p,generatePrecision(r),"#define SHADER_NAME "+r.shaderName,a,"#define GAMMA_FACTOR "+d,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.envMap?"#define "+h:"",r.envMap?"#define "+u:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularTintMap?"#define USE_SPECULARTINTMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.sheenTint?"#define USE_SHEEN":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",r.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",r.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.format===RGBFormat?"#define OPAQUE":"",ShaderChunk.encodings_pars_fragment,r.map?getTexelDecodingFunction("mapTexelToLinear",r.mapEncoding):"",r.matcap?getTexelDecodingFunction("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?getTexelDecodingFunction("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?getTexelDecodingFunction("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.specularTintMap?getTexelDecodingFunction("specularTintMapTexelToLinear",r.specularTintMapEncoding):"",r.lightMap?getTexelDecodingFunction("lightMapTexelToLinear",r.lightMapEncoding):"",getTexelEncodingFunction("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),s=replaceClippingPlaneNums(replaceLightNums(resolveIncludes(s),r),r),o=replaceClippingPlaneNums(replaceLightNums(resolveIncludes(o),r),r),s=unrollLoops(s),o=unrollLoops(o),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(v="#version 300 es\n",f=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+f,g=["#define varying in",r.glslVersion===GLSL3?"":"out highp vec4 pc_fragColor;",r.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);p=v+f+s,a=v+g+o,d=WebGLShader(n,35633,p),c=WebGLShader(n,35632,a);if(n.attachShader(m,d),n.attachShader(m,c),void 0!==r.index0AttributeName?n.bindAttribLocation(m,0,r.index0AttributeName):!0===r.morphTargets&&n.bindAttribLocation(m,0,"position"),n.linkProgram(m),e.debug.checkShaderErrors){h=n.getProgramInfoLog(m).trim(),u=n.getShaderInfoLog(d).trim(),l=n.getShaderInfoLog(c).trim();let e=!0,t=!0;!1===n.getProgramParameter(m,35714)?(e=!1,s=getShaderErrors(n,d,"vertex"),o=getShaderErrors(n,c,"fragment"),console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+h+"\n"+s+"\n"+o)):""!==h?console.warn("THREE.WebGLProgram: Program Info Log:",h):""!==u&&""!==l||(t=!1),t&&(this.diagnostics={runnable:e,programLog:h,vertexShader:{log:u,prefix:f},fragmentShader:{log:l,prefix:g}})}n.deleteShader(d),n.deleteShader(c);let _;this.getUniforms=function(){return _=void 0===_?new WebGLUniforms(n,m):_};let y;return this.getAttributes=function(){return y=void 0===y?fetchAttributeLocations(n,m):y},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(m),this.program=void 0},this.name=r.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=m,this.vertexShader=d,this.fragmentShader=c,this}function WebGLPrograms(m,f,g,v,_,t,y){const a=[],x=_.isWebGL2,b=_.logarithmicDepthBuffer,M=_.floatVertexTextures,w=_.maxVertexUniforms,S=_.vertexTextures;let T=_.precision;const E={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},i=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheenTint","transmission","transmissionMap","thicknessMap"];function A(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):LinearEncoding}return{getParameters:function(e,t,r,i,n){var a,s=i.fog,i=e.isMeshStandardMaterial?i.environment:null,i=(e.isMeshStandardMaterial?g:f).get(e.envMap||i),o=E[e.type],l=n.isSkinnedMesh?(l=(l=n).skeleton.bones,M?1024:(a=w,a=Math.floor((a-20)/4),(a=Math.min(a,l.length))<l.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+l.length+" bones. This GPU supports "+a+"."),0):a)):0;null!==e.precision&&(T=_.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",T,"instead.");let c,h;h=(o?(a=ShaderLib[o],c=a.vertexShader,a):(c=e.vertexShader,e)).fragmentShader;var u=m.getRenderTarget(),d=0<e.alphaTest,p=0<e.clearcoat;return{isWebGL2:x,shaderID:o,shaderName:e.type,vertexShader:c,fragmentShader:h,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:T,instancing:!0===n.isInstancedMesh,instancingColor:!0===n.isInstancedMesh&&null!==n.instanceColor,supportsVertexTextures:S,outputEncoding:null!==u?A(u.texture):m.outputEncoding,map:!!e.map,mapEncoding:A(e.map),matcap:!!e.matcap,matcapEncoding:A(e.matcap),envMap:!!i,envMapMode:i&&i.mapping,envMapEncoding:A(i),envMapCubeUV:!!i&&(i.mapping===CubeUVReflectionMapping||i.mapping===CubeUVRefractionMapping),lightMap:!!e.lightMap,lightMapEncoding:A(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:A(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:e.normalMapType===TangentSpaceNormalMap,clearcoat:p,clearcoatMap:p&&!!e.clearcoatMap,clearcoatRoughnessMap:p&&!!e.clearcoatRoughnessMap,clearcoatNormalMap:p&&!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,specularIntensityMap:!!e.specularIntensityMap,specularTintMap:!!e.specularTintMap,specularTintMapEncoding:A(e.specularTintMap),alphaMap:!!e.alphaMap,alphaTest:d,gradientMap:!!e.gradientMap,sheenTint:!!e.sheenTint&&(0<e.sheenTint.r||0<e.sheenTint.g||0<e.sheenTint.b),transmission:0<e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:!!e.normalMap&&!!n.geometry&&!!n.geometry.attributes.tangent,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&!!n.geometry&&!!n.geometry.attributes.color&&4===n.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularTintMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||0<e.transmission||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularTintMap||!e.displacementMap),fog:!!s,useFog:e.fog,fogExp2:s&&s.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:b,skinning:!0===n.isSkinnedMesh&&0<l,maxBones:l,useVertexTexture:M,morphTargets:!!n.geometry&&!!n.geometry.morphAttributes.position,morphNormals:!!n.geometry&&!!n.geometry.morphAttributes.normal,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:y.numPlanes,numClipIntersection:y.numIntersection,format:e.format,dithering:e.dithering,shadowMapEnabled:m.shadowMap.enabled&&0<r.length,shadowMapType:m.shadowMap.type,toneMapping:e.toneMapped?m.toneMapping:NoToneMapping,physicallyCorrectLights:m.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,doubleSided:e.side===DoubleSide,flipSided:e.side===BackSide,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:x||v.has("EXT_frag_depth"),rendererExtensionDrawBuffers:x||v.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:x||v.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<i.length;e++)r.push(t[i[e]]);r.push(m.outputEncoding),r.push(m.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){var t=E[e.type];let r;return r=t?(t=ShaderLib[t],UniformsUtils.clone(t.uniforms)):e.uniforms},acquireProgram:function(e,r){let i;for(let e=0,t=a.length;e<t;e++){var n=a[e];if(n.cacheKey===r){++(i=n).usedTimes;break}}return void 0===i&&(i=new WebGLProgram(m,r,e,t),a.push(i)),i},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=a.indexOf(e),a[t]=a[a.length-1],a.pop(),e.destroy())},programs:a}}function WebGLProperties(){let i=new WeakMap;return{get:function(e){let t=i.get(e);return void 0===t&&(t={},i.set(e,t)),t},remove:function(e){i.delete(e)},update:function(e,t,r){i.get(e)[t]=r},dispose:function(){i=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(l){const c=[];let h=0;const s=[],o=[],u=[],d={id:-1};function p(e,t,r,i,n,a){let s=c[h];var o=l.get(r);return void 0===s?(s={id:e.id,object:e,geometry:t,material:r,program:o.program||d,groupOrder:i,renderOrder:e.renderOrder,z:n,group:a},c[h]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.program=o.program||d,s.groupOrder=i,s.renderOrder=e.renderOrder,s.z=n,s.group=a),h++,s}return{opaque:s,transmissive:o,transparent:u,init:function(){h=0,s.length=0,o.length=0,u.length=0},push:function(e,t,r,i,n,a){e=p(e,t,r,i,n,a),(0<r.transmission?o:!0===r.transparent?u:s).push(e)},unshift:function(e,t,r,i,n,a){e=p(e,t,r,i,n,a),(0<r.transmission?o:!0===r.transparent?u:s).unshift(e)},finish:function(){for(let e=h,t=c.length;e<t;e++){var r=c[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){1<s.length&&s.sort(e||painterSortStable),1<o.length&&o.sort(t||reversePainterSortStable),1<u.length&&u.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(i){let n=new WeakMap;return{get:function(e,t){let r;return!1===n.has(e)?(r=new WebGLRenderList(i),n.set(e,[r])):t>=n.get(e).length?(r=new WebGLRenderList(i),n.get(e).push(r)):r=n.get(e)[t],r},dispose:function(){n=new WeakMap}}}function UniformsCache(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Vector3,color:new Color};break;case"SpotLight":t={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":t={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return r[e.id]=t}}}function ShadowUniformsCache(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t}}}let nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(t,S){const T=new UniformsCache,E=ShadowUniformsCache(),A={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)A.probe.push(new Vector3);const p=new Vector3,m=new Matrix4,f=new Matrix4;return{setup:function(r,e){let i=0,n=0,a=0;for(let e=0;e<9;e++)A.probe[e].set(0,0,0);let s=0,o=0,l=0,c=0,h=0,u=0,d=0,p=0;r.sort(shadowCastingLightsFirst);var m=!0!==e?Math.PI:1;for(let e=0,t=r.length;e<t;e++){var f,g,v,_,y=r[e],x=y.color,b=y.intensity,M=y.distance,w=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)i+=x.r*b*m,n+=x.g*b*m,a+=x.b*b*m;else if(y.isLightProbe)for(let e=0;e<9;e++)A.probe[e].addScaledVector(y.sh.coefficients[e],b);else y.isDirectionalLight?((v=T.get(y)).color.copy(y.color).multiplyScalar(y.intensity*m),y.castShadow&&(f=y.shadow,(g=E.get(y)).shadowBias=f.bias,g.shadowNormalBias=f.normalBias,g.shadowRadius=f.radius,g.shadowMapSize=f.mapSize,A.directionalShadow[s]=g,A.directionalShadowMap[s]=w,A.directionalShadowMatrix[s]=y.shadow.matrix,u++),A.directional[s]=v,s++):y.isSpotLight?((f=T.get(y)).position.setFromMatrixPosition(y.matrixWorld),f.color.copy(x).multiplyScalar(b*m),f.distance=M,f.coneCos=Math.cos(y.angle),f.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),f.decay=y.decay,y.castShadow&&(g=y.shadow,(v=E.get(y)).shadowBias=g.bias,v.shadowNormalBias=g.normalBias,v.shadowRadius=g.radius,v.shadowMapSize=g.mapSize,A.spotShadow[l]=v,A.spotShadowMap[l]=w,A.spotShadowMatrix[l]=y.shadow.matrix,p++),A.spot[l]=f,l++):y.isRectAreaLight?((M=T.get(y)).color.copy(x).multiplyScalar(b),M.halfWidth.set(.5*y.width,0,0),M.halfHeight.set(0,.5*y.height,0),A.rectArea[c]=M,c++):y.isPointLight?((x=T.get(y)).color.copy(y.color).multiplyScalar(y.intensity*m),x.distance=y.distance,x.decay=y.decay,y.castShadow&&(M=y.shadow,(_=E.get(y)).shadowBias=M.bias,_.shadowNormalBias=M.normalBias,_.shadowRadius=M.radius,_.shadowMapSize=M.mapSize,_.shadowCameraNear=M.camera.near,_.shadowCameraFar=M.camera.far,A.pointShadow[o]=_,A.pointShadowMap[o]=w,A.pointShadowMatrix[o]=y.shadow.matrix,d++),A.point[o]=x,o++):y.isHemisphereLight&&((M=T.get(y)).skyColor.copy(y.color).multiplyScalar(b*m),M.groundColor.copy(y.groundColor).multiplyScalar(b*m),A.hemi[h]=M,h++)}0<c&&(S.isWebGL2||!0===t.has("OES_texture_float_linear")?(A.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,A.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(A.rectAreaLTC1=UniformsLib.LTC_HALF_1,A.rectAreaLTC2=UniformsLib.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),A.ambient[0]=i,A.ambient[1]=n,A.ambient[2]=a,(e=A.hash).directionalLength===s&&e.pointLength===o&&e.spotLength===l&&e.rectAreaLength===c&&e.hemiLength===h&&e.numDirectionalShadows===u&&e.numPointShadows===d&&e.numSpotShadows===p||(A.directional.length=s,A.spot.length=l,A.rectArea.length=c,A.point.length=o,A.hemi.length=h,A.directionalShadow.length=u,A.directionalShadowMap.length=u,A.pointShadow.length=d,A.pointShadowMap.length=d,A.spotShadow.length=p,A.spotShadowMap.length=p,A.directionalShadowMatrix.length=u,A.pointShadowMatrix.length=d,A.spotShadowMatrix.length=p,e.directionalLength=s,e.pointLength=o,e.spotLength=l,e.rectAreaLength=c,e.hemiLength=h,e.numDirectionalShadows=u,e.numPointShadows=d,e.numSpotShadows=p,A.version=nextVersion++)},setupView:function(r,e){let i=0,n=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=r.length;e<t;e++){var c,h,u,d=r[e];d.isDirectionalLight?((c=A.directional[i]).direction.setFromMatrixPosition(d.matrixWorld),p.setFromMatrixPosition(d.target.matrixWorld),c.direction.sub(p),c.direction.transformDirection(l),i++):d.isSpotLight?((c=A.spot[a]).position.setFromMatrixPosition(d.matrixWorld),c.position.applyMatrix4(l),c.direction.setFromMatrixPosition(d.matrixWorld),p.setFromMatrixPosition(d.target.matrixWorld),c.direction.sub(p),c.direction.transformDirection(l),a++):d.isRectAreaLight?((h=A.rectArea[s]).position.setFromMatrixPosition(d.matrixWorld),h.position.applyMatrix4(l),f.identity(),m.copy(d.matrixWorld),m.premultiply(l),f.extractRotation(m),h.halfWidth.set(.5*d.width,0,0),h.halfHeight.set(0,.5*d.height,0),h.halfWidth.applyMatrix4(f),h.halfHeight.applyMatrix4(f),s++):d.isPointLight?((h=A.point[n]).position.setFromMatrixPosition(d.matrixWorld),h.position.applyMatrix4(l),n++):d.isHemisphereLight&&((u=A.hemi[o]).direction.setFromMatrixPosition(d.matrixWorld),u.direction.transformDirection(l),u.direction.normalize(),o++)}},state:A}}function WebGLRenderState(e,t){const r=new WebGLLights(e,t),i=[],n=[];return{init:function(){i.length=0,n.length=0},state:{lightsArray:i,shadowsArray:n,lights:r},setupLights:function(e){r.setup(i,e)},setupLightsView:function(e){r.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){n.push(e)}}}function WebGLRenderStates(i,n){let a=new WeakMap;return{get:function(e,t=0){let r;return!1===a.has(e)?(r=new WebGLRenderState(i,n),a.set(e,[r])):t>=a.get(e).length?(r=new WebGLRenderState(i,n),a.get(e).push(r)):r=a.get(e)[t],r},dispose:function(){a=new WeakMap}}}class MeshDepthMaterial extends Material{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}MeshDepthMaterial.prototype.isMeshDepthMaterial=!0;class MeshDistanceMaterial extends Material{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0;var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function WebGLShadowMap(f,g,e){let v=new Frustum;const m=new Vector2,_=new Vector2,y=new Vector4,c=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),h=new MeshDistanceMaterial,u={},x=e.maxTextureSize,d={0:BackSide,1:FrontSide,2:DoubleSide},b=new ShaderMaterial({uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4},samples:{value:8}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),M=b.clone();M.defines.HORIZONTAL_PASS=1;e=new BufferGeometry;e.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new Mesh(e,b),S=this;function T(r,e,i,t,n,a,s){let o=null;r=!0===t.isPointLight?r.customDistanceMaterial:r.customDepthMaterial;if(o=void 0!==r?r:!0===t.isPointLight?h:c,f.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&0<i.alphaTest){var r=o.uuid,l=i.uuid;let e=u[r],t=(void 0===e&&(e={},u[r]=e),e[l]);void 0===t&&(t=o.clone(),e[l]=t),o=t}return o.visible=i.visible,o.wireframe=i.wireframe,s===VSMShadowMap?o.side=null!==i.shadowSide?i.shadowSide:i.side:o.side=null!==i.shadowSide?i.shadowSide:d[i.side],o.alphaMap=i.alphaMap,o.alphaTest=i.alphaTest,o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.displacementMap=i.displacementMap,o.displacementScale=i.displacementScale,o.displacementBias=i.displacementBias,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===t.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(t.matrixWorld),o.nearDistance=n,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(r,i,n){if(!1!==S.enabled&&(!1!==S.autoUpdate||!1!==S.needsUpdate)&&0!==r.length){var a,s,e=f.getRenderTarget(),t=f.getActiveCubeFace(),o=f.getActiveMipmapLevel(),l=f.state;l.setBlending(NoBlending),l.buffers.color.setClear(1,1,1,1),l.buffers.depth.setTest(!0),l.setScissorTest(!1);for(let e=0,t=r.length;e<t;e++){var c=r[e],h=c.shadow;if(void 0===h)console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");else if(!1!==h.autoUpdate||!1!==h.needsUpdate){m.copy(h.mapSize);var u=h.getFrameExtents(),d=(m.multiply(u),_.copy(h.mapSize),(m.x>x||m.y>x)&&(m.x>x&&(_.x=Math.floor(x/u.x),m.x=_.x*u.x,h.mapSize.x=_.x),m.y>x)&&(_.y=Math.floor(x/u.y),m.y=_.y*u.y,h.mapSize.y=_.y),null!==h.map||h.isPointLightShadow||this.type!==VSMShadowMap||(u={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat},h.map=new WebGLRenderTarget(m.x,m.y,u),h.map.texture.name=c.name+".shadowMap",h.mapPass=new WebGLRenderTarget(m.x,m.y,u),h.camera.updateProjectionMatrix()),null===h.map&&(u={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat},h.map=new WebGLRenderTarget(m.x,m.y,u),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()),f.setRenderTarget(h.map),f.clear(),h.getViewportCount());for(let e=0;e<d;e++){var p=h.getViewport(e);y.set(_.x*p.x,_.y*p.y,_.x*p.z,_.y*p.w),l.viewport(y),h.updateMatrices(c,e),v=h.getFrustum(),!function r(i,n,a,s,o){if(!1===i.visible)return;const e=i.layers.test(n.layers);if(e&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===VSMShadowMap)&&(!i.frustumCulled||v.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const c=g.update(i),h=i.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];if(p&&p.visible){const m=T(i,c,p,s,a.near,a.far,o);f.renderBufferDirect(a,null,c,m,i,d)}}}else if(h.visible){const t=T(i,c,h,s,a.near,a.far,o);f.renderBufferDirect(a,null,c,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)r(l[e],n,a,s,o)}(i,n,h.camera,c,this.type)}h.isPointLightShadow||this.type!==VSMShadowMap||(u=h,a=n,s=void 0,s=g.update(w),b.uniforms.shadow_pass.value=u.map.texture,b.uniforms.resolution.value=u.mapSize,b.uniforms.radius.value=u.radius,b.uniforms.samples.value=u.blurSamples,f.setRenderTarget(u.mapPass),f.clear(),f.renderBufferDirect(a,null,s,b,w,null),M.uniforms.shadow_pass.value=u.mapPass.texture,M.uniforms.resolution.value=u.mapSize,M.uniforms.radius.value=u.radius,M.uniforms.samples.value=u.blurSamples,f.setRenderTarget(u.map),f.clear(),f.renderBufferDirect(a,null,s,M,w,null)),h.needsUpdate=!1}}S.needsUpdate=!1,f.setRenderTarget(e,t,o)}}}function WebGLState(h,G,e){const r=e.isWebGL2;const i=new function(){let t=!1;const a=new Vector4;let r=null;const s=new Vector4(0,0,0,0);return{setMask:function(e){r===e||t||(h.colorMask(e,e,e,e),r=e)},setLocked:function(e){t=e},setClear:function(e,t,r,i,n){!0===n&&(e*=i,t*=i,r*=i),a.set(e,t,r,i),!1===s.equals(a)&&(h.clearColor(e,t,r,i),s.copy(a))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},n=new function(){let t=!1,r=null,i=null,n=null;return{setTest:function(e){(e?P:B)(2929)},setMask:function(e){r===e||t||(h.depthMask(e),r=e)},setFunc:function(e){if(i!==e){if(e)switch(e){case NeverDepth:h.depthFunc(512);break;case AlwaysDepth:h.depthFunc(519);break;case LessDepth:h.depthFunc(513);break;case LessEqualDepth:h.depthFunc(515);break;case EqualDepth:h.depthFunc(514);break;case GreaterEqualDepth:h.depthFunc(518);break;case GreaterDepth:h.depthFunc(516);break;case NotEqualDepth:h.depthFunc(517);break;default:h.depthFunc(515)}else h.depthFunc(515);i=e}},setLocked:function(e){t=e},setClear:function(e){n!==e&&(h.clearDepth(e),n=e)},reset:function(){t=!1,r=null,i=null,n=null}}},a=new function(){let t=!1,r=null,i=null,n=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(e){t||(e?P:B)(2960)},setMask:function(e){r===e||t||(h.stencilMask(e),r=e)},setFunc:function(e,t,r){i===e&&n===t&&a===r||(h.stencilFunc(e,t,r),i=e,n=t,a=r)},setOp:function(e,t,r){s===e&&o===t&&l===r||(h.stencilOp(e,t,r),s=e,o=t,l=r)},setLocked:function(e){t=e},setClear:function(e){c!==e&&(h.clearStencil(e),c=e)},reset:function(){t=!1,r=null,i=null,n=null,a=null,s=null,o=null,l=null,c=null}}};let t={},s=null,o={},l=null,c=!1,u=null,d=null,p=null,m=null,f=null,g=null,v=null,_=!1,y=null,x=null,b=null,M=null,w=null;const V=h.getParameter(35661);let S=!1,T=0;e=h.getParameter(7938);-1!==e.indexOf("WebGL")?(T=parseFloat(/^WebGL (\d)/.exec(e)[1]),S=1<=T):-1!==e.indexOf("OpenGL ES")&&(T=parseFloat(/^OpenGL ES (\d)/.exec(e)[1]),S=2<=T);let E=null,A={};var e=h.getParameter(3088),N=h.getParameter(2978);const L=(new Vector4).fromArray(e),C=(new Vector4).fromArray(N);function U(e,t,r){var i=new Uint8Array(4),n=h.createTexture();h.bindTexture(e,n),h.texParameteri(e,10241,9728),h.texParameteri(e,10240,9728);for(let e=0;e<r;e++)h.texImage2D(t+e,0,6408,1,1,0,6408,5121,i);return n}const R={};function P(e){!0!==t[e]&&(h.enable(e),t[e]=!0)}function B(e){!1!==t[e]&&(h.disable(e),t[e]=!1)}R[3553]=U(3553,3553,1),R[34067]=U(34067,34069,6),i.setClear(0,0,0,1),n.setClear(1),a.setClear(0),P(2929),n.setFunc(LessEqualDepth),O(!1),z(CullFaceBack),P(2884),F(NoBlending);const D={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779},I=(r?(D[MinEquation]=32775,D[MaxEquation]=32776):null!==(e=G.get("EXT_blend_minmax"))&&(D[MinEquation]=e.MIN_EXT,D[MaxEquation]=e.MAX_EXT),{[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773});function F(e,t,r,i,n,a,s,o){if(e===NoBlending)!0===c&&(B(3042),c=!1);else if(!1===c&&(P(3042),c=!0),e!==CustomBlending){if(e!==u||o!==_){if(d===AddEquation&&f===AddEquation||(h.blendEquation(32774),d=AddEquation,f=AddEquation),o)switch(e){case NormalBlending:h.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:h.blendFunc(1,1);break;case SubtractiveBlending:h.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:h.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case NormalBlending:h.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:h.blendFunc(770,1);break;case SubtractiveBlending:h.blendFunc(0,769);break;case MultiplyBlending:h.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}p=null,m=null,g=null,v=null,u=e,_=o}}else n=n||t,a=a||r,s=s||i,t===d&&n===f||(h.blendEquationSeparate(D[t],D[n]),d=t,f=n),r===p&&i===m&&a===g&&s===v||(h.blendFuncSeparate(I[r],I[i],I[a],I[s]),p=r,m=i,g=a,v=s),u=e,_=null}function O(e){y!==e&&(e?h.frontFace(2304):h.frontFace(2305),y=e)}function z(e){e!==CullFaceNone?(P(2884),e!==x&&(e===CullFaceBack?h.cullFace(1029):e===CullFaceFront?h.cullFace(1028):h.cullFace(1032))):B(2884),x=e}function H(e,t,r){e?(P(32823),M===t&&w===r||(h.polygonOffset(t,r),M=t,w=r)):B(32823)}function k(e){void 0===e&&(e=33984+V-1),E!==e&&(h.activeTexture(e),E=e)}return{buffers:{color:i,depth:n,stencil:a},enable:P,disable:B,bindFramebuffer:function(e,t){return null===t&&null!==s&&(t=s),o[e]!==t&&(h.bindFramebuffer(e,t),o[e]=t,r&&(36009===e&&(o[36160]=t),36160===e)&&(o[36009]=t),!0)},bindXRFramebuffer:function(e){e!==s&&(h.bindFramebuffer(36160,e),s=e)},useProgram:function(e){return l!==e&&(h.useProgram(e),l=e,!0)},setBlending:F,setMaterial:function(e,t){(e.side===DoubleSide?B:P)(2884);let r=e.side===BackSide;O(r=t?!r:r),e.blending===NormalBlending&&!1===e.transparent?F(NoBlending):F(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),n.setFunc(e.depthFunc),n.setTest(e.depthTest),n.setMask(e.depthWrite),i.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),H(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?P:B)(32926)},setFlipSided:O,setCullFace:z,setLineWidth:function(e){e!==b&&(S&&h.lineWidth(e),b=e)},setPolygonOffset:H,setScissorTest:function(e){(e?P:B)(3089)},activeTexture:k,bindTexture:function(e,t){null===E&&k();let r=A[E];void 0===r&&(r={type:void 0,texture:void 0},A[E]=r),r.type===e&&r.texture===t||(h.bindTexture(e,t||R[e]),r.type=e,r.texture=t)},unbindTexture:function(){var e=A[E];void 0!==e&&void 0!==e.type&&(h.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===L.equals(e)&&(h.scissor(e.x,e.y,e.z,e.w),L.copy(e))},viewport:function(e){!1===C.equals(e)&&(h.viewport(e.x,e.y,e.z,e.w),C.copy(e))},reset:function(){h.disable(3042),h.disable(2884),h.disable(2929),h.disable(32823),h.disable(3089),h.disable(2960),h.disable(32926),h.blendEquation(32774),h.blendFunc(1,0),h.blendFuncSeparate(1,0,1,0),h.colorMask(!0,!0,!0,!0),h.clearColor(0,0,0,0),h.depthMask(!0),h.depthFunc(513),h.clearDepth(1),h.stencilMask(4294967295),h.stencilFunc(519,0,4294967295),h.stencilOp(7680,7680,7680),h.clearStencil(0),h.cullFace(1029),h.frontFace(2305),h.polygonOffset(0,0),h.activeTexture(33984),h.bindFramebuffer(36160,null),!0===r&&(h.bindFramebuffer(36009,null),h.bindFramebuffer(36008,null)),h.useProgram(null),h.lineWidth(1),h.scissor(0,0,h.canvas.width,h.canvas.height),h.viewport(0,0,h.canvas.width,h.canvas.height),t={},E=null,A={},s=null,o={},l=null,c=!1,u=null,d=null,p=null,m=null,f=null,g=null,v=null,_=!1,y=null,x=null,b=null,M=null,w=null,L.set(0,0,h.canvas.width,h.canvas.height),C.set(0,0,h.canvas.width,h.canvas.height),i.reset(),n.reset(),a.reset()}}}function WebGLTextures(f,n,g,v,_,y,x){const b=_.isWebGL2,t=_.maxTextures,M=_.maxCubemapSize,h=_.maxTextureSize,V=_.maxSamples,a=new WeakMap;let s,r=!1;try{r="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function o(e,t){return r?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function w(e,t,r,i){let n=1;return(n=e.width>i||e.height>i?i/Math.max(e.width,e.height):n)<1||!0===t?"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?(t=(i=t?floorPowerOfTwo:Math.floor)(n*e.width),i=i(n*e.height),void 0===s&&(s=o(t,i)),(r=r?o(t,i):s).width=t,r.height=i,r.getContext("2d").drawImage(e,0,0,t,i),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+t+"x"+i+")."),r):("data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e):e}function S(e){return isPowerOfTwo(e.width)&&isPowerOfTwo(e.height)}function T(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function E(e,t,r,i,n=1){f.generateMipmap(e),v.get(t).__maxMipLevel=Math.log2(Math.max(r,i,n))}function A(e,t,r){if(!1===b)return t;if(null!==e){if(void 0!==f[e])return f[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let i=t;return 6403===t&&(5126===r&&(i=33326),5131===r&&(i=33325),5121===r)&&(i=33321),6407===t&&(5126===r&&(i=34837),5131===r&&(i=34843),5121===r)&&(i=32849),33325!==(i=6408===t&&(5126===r&&(i=34836),5131===r&&(i=34842),5121===r)?32856:i)&&33326!==i&&34842!==i&&34836!==i||n.get("EXT_color_buffer_float"),i}function i(e){return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?9728:9729}function l(e){var t,r,e=e.target;e.removeEventListener("dispose",l),t=e,void 0!==(r=v.get(t)).__webglInit&&(f.deleteTexture(r.__webglTexture),v.remove(t)),e.isVideoTexture&&a.delete(e),x.memory.textures--}function L(e){var e=e.target,r=(e.removeEventListener("dispose",L),e.texture),t=v.get(e),i=v.get(r);if(e){if(void 0!==i.__webglTexture&&(f.deleteTexture(i.__webglTexture),x.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)f.deleteFramebuffer(t.__webglFramebuffer[e]),t.__webglDepthbuffer&&f.deleteRenderbuffer(t.__webglDepthbuffer[e]);else f.deleteFramebuffer(t.__webglFramebuffer),t.__webglDepthbuffer&&f.deleteRenderbuffer(t.__webglDepthbuffer),t.__webglMultisampledFramebuffer&&f.deleteFramebuffer(t.__webglMultisampledFramebuffer),t.__webglColorRenderbuffer&&f.deleteRenderbuffer(t.__webglColorRenderbuffer),t.__webglDepthRenderbuffer&&f.deleteRenderbuffer(t.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,t=r.length;e<t;e++){var n=v.get(r[e]);n.__webglTexture&&(f.deleteTexture(n.__webglTexture),x.memory.textures--),v.remove(r[e])}v.remove(r),v.remove(e)}}let c=0;function u(e,t){var r,i=v.get(e);if(e.isVideoTexture&&(r=e,n=x.render.frame,a.get(r)!==n)&&(a.set(r,n),r.update()),0<e.version&&i.__version!==e.version){var n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void P(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}g.activeTexture(33984+t),g.bindTexture(3553,i.__webglTexture)}function d(e,t){var r=v.get(e);if(0<e.version&&r.__version!==e.version){var i=r,n=e,e=t;if(6===n.image.length){R(i,n),g.activeTexture(33984+e),g.bindTexture(34067,i.__webglTexture),f.pixelStorei(37440,n.flipY),f.pixelStorei(37441,n.premultiplyAlpha),f.pixelStorei(3317,n.unpackAlignment),f.pixelStorei(37443,0);var a=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),s=n.image[0]&&n.image[0].isDataTexture,o=[];for(let e=0;e<6;e++)o[e]=a||s?s?n.image[e].image:n.image[e]:w(n.image[e],!1,!0,M);var e=o[0],l=S(e)||b,c=y.convert(n.format),h=y.convert(n.type),u=A(n.internalFormat,c,h);C(34067,n,l);let r;if(a){for(let t=0;t<6;t++){r=o[t].mipmaps;for(let e=0;e<r.length;e++){var d=r[e];n.format!==RGBAFormat&&n.format!==RGBFormat?null!==c?g.compressedTexImage2D(34069+t,e,u,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g.texImage2D(34069+t,e,u,d.width,d.height,0,c,h,d.data)}}i.__maxMipLevel=r.length-1}else{r=n.mipmaps;for(let t=0;t<6;t++)if(s){g.texImage2D(34069+t,0,u,o[t].width,o[t].height,0,c,h,o[t].data);for(let e=0;e<r.length;e++){var p=r[e].image[t].image;g.texImage2D(34069+t,e+1,u,p.width,p.height,0,c,h,p.data)}}else{g.texImage2D(34069+t,0,u,c,h,o[t]);for(let e=0;e<r.length;e++){var m=r[e];g.texImage2D(34069+t,e+1,u,c,h,m.image[t])}}i.__maxMipLevel=r.length}T(n,l)&&E(34067,n,e.width,e.height),i.__version=n.version,n.onUpdate&&n.onUpdate(n)}}else g.activeTexture(33984+t),g.bindTexture(34067,r.__webglTexture)}const p={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},m={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function C(e,t,r){r?(f.texParameteri(e,10242,p[t.wrapS]),f.texParameteri(e,10243,p[t.wrapT]),32879!==e&&35866!==e||f.texParameteri(e,32882,p[t.wrapR]),f.texParameteri(e,10240,m[t.magFilter]),f.texParameteri(e,10241,m[t.minFilter])):(f.texParameteri(e,10242,33071),f.texParameteri(e,10243,33071),32879!==e&&35866!==e||f.texParameteri(e,32882,33071),t.wrapS===ClampToEdgeWrapping&&t.wrapT===ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),f.texParameteri(e,10240,i(t.magFilter)),f.texParameteri(e,10241,i(t.minFilter)),t.minFilter!==NearestFilter&&t.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")&&(r=n.get("EXT_texture_filter_anisotropic"),t.type===FloatType&&!1===n.has("OES_texture_float_linear")||!1===b&&t.type===HalfFloatType&&!1===n.has("OES_texture_half_float_linear")||(1<t.anisotropy||v.get(t).__currentAnisotropy)&&(f.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,_.getMaxAnisotropy())),v.get(t).__currentAnisotropy=t.anisotropy))}function R(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",l),e.__webglTexture=f.createTexture(),x.memory.textures++)}function P(e,r,t){let i=3553;r.isDataTexture2DArray&&(i=35866),r.isDataTexture3D&&(i=32879),R(e,r),g.activeTexture(33984+t),g.bindTexture(i,e.__webglTexture),f.pixelStorei(37440,r.flipY),f.pixelStorei(37441,r.premultiplyAlpha),f.pixelStorei(3317,r.unpackAlignment),f.pixelStorei(37443,0);t=r;var t=!b&&(t.wrapS!==ClampToEdgeWrapping||t.wrapT!==ClampToEdgeWrapping||t.minFilter!==NearestFilter&&t.minFilter!==LinearFilter)&&!1===S(r.image),t=w(r.image,t,!1,h),n=S(t)||b,a=y.convert(r.format);let s=y.convert(r.type),o=A(r.internalFormat,a,s);C(i,r,n);let l;var c=r.mipmaps;if(r.isDepthTexture)o=6402,b?o=r.type===FloatType?36012:r.type===UnsignedIntType?33190:r.type===UnsignedInt248Type?35056:33189:r.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===DepthFormat&&6402===o&&r.type!==UnsignedShortType&&r.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=UnsignedShortType,s=y.convert(r.type)),r.format===DepthStencilFormat&&6402===o&&(o=34041,r.type!==UnsignedInt248Type)&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=UnsignedInt248Type,s=y.convert(r.type)),g.texImage2D(3553,0,o,t.width,t.height,0,a,s,null);else if(r.isDataTexture)if(0<c.length&&n){for(let e=0,t=c.length;e<t;e++)l=c[e],g.texImage2D(3553,e,o,l.width,l.height,0,a,s,l.data);r.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else g.texImage2D(3553,0,o,t.width,t.height,0,a,s,t.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let e=0,t=c.length;e<t;e++)l=c[e],r.format!==RGBAFormat&&r.format!==RGBFormat?null!==a?g.compressedTexImage2D(3553,e,o,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):g.texImage2D(3553,e,o,l.width,l.height,0,a,s,l.data);e.__maxMipLevel=c.length-1}else if(r.isDataTexture2DArray)g.texImage3D(35866,0,o,t.width,t.height,t.depth,0,a,s,t.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)g.texImage3D(32879,0,o,t.width,t.height,t.depth,0,a,s,t.data),e.__maxMipLevel=0;else if(0<c.length&&n){for(let e=0,t=c.length;e<t;e++)l=c[e],g.texImage2D(3553,e,o,a,s,l);r.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else g.texImage2D(3553,0,o,a,s,t),e.__maxMipLevel=0;T(r,n)&&E(i,r,t.width,t.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function B(e,t,r,i,n){var a=y.convert(r.format),s=y.convert(r.type),o=A(r.internalFormat,a,s);32879===n||35866===n?g.texImage3D(n,0,o,t.width,t.height,t.depth,0,a,s,null):g.texImage2D(n,0,o,t.width,t.height,0,a,s,null),g.bindFramebuffer(36160,e),f.framebufferTexture2D(36160,i,n,v.get(r).__webglTexture,0),g.bindFramebuffer(36160,null)}function D(t,r,i){if(f.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let e=33189;i?((n=r.depthTexture)&&n.isDepthTexture&&(n.type===FloatType?e=36012:n.type===UnsignedIntType&&(e=33190)),n=I(r),f.renderbufferStorageMultisample(36161,n,e,r.width,r.height)):f.renderbufferStorage(36161,e,r.width,r.height),f.framebufferRenderbuffer(36160,36096,36161,t)}else{var e,n;r.depthBuffer&&r.stencilBuffer?(i?(n=I(r),f.renderbufferStorageMultisample(36161,n,35056,r.width,r.height)):f.renderbufferStorage(36161,34041,r.width,r.height),f.framebufferRenderbuffer(36160,33306,36161,t)):(n=!0===r.isWebGLMultipleRenderTargets?r.texture[0]:r.texture,t=y.convert(n.format),e=y.convert(n.type),n=A(n.internalFormat,t,e),i?(t=I(r),f.renderbufferStorageMultisample(36161,t,n,r.width,r.height)):f.renderbufferStorage(36161,n,r.width,r.height))}f.bindRenderbuffer(36161,null)}function N(t){var r=v.get(t),e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(e)throw new Error("target.depthTexture not supported in Cube render targets");var i=r.__webglFramebuffer,n=t;if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(g.bindFramebuffer(36160,i),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(v.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),u(n.depthTexture,0),i=v.get(n.depthTexture).__webglTexture,n.depthTexture.format===DepthFormat)f.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==DepthStencilFormat)throw new Error("Unknown depthTexture format");f.framebufferTexture2D(36160,33306,3553,i,0)}}else if(e){r.__webglDepthbuffer=[];for(let e=0;e<6;e++)g.bindFramebuffer(36160,r.__webglFramebuffer[e]),r.__webglDepthbuffer[e]=f.createRenderbuffer(),D(r.__webglDepthbuffer[e],t,!1)}else g.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=f.createRenderbuffer(),D(r.__webglDepthbuffer,t,!1);g.bindFramebuffer(36160,null)}function I(e){return b&&e.isWebGLMultisampleRenderTarget?Math.min(V,e.samples):0}let F=!1,G=!1;this.allocateTextureUnit=function(){var e=c;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),c+=1,e},this.resetTextureUnits=function(){c=0},this.setTexture2D=u,this.setTexture2DArray=function(e,t){var r=v.get(e);0<e.version&&r.__version!==e.version?P(r,e,t):(g.activeTexture(33984+t),g.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){var r=v.get(e);0<e.version&&r.__version!==e.version?P(r,e,t):(g.activeTexture(33984+t),g.bindTexture(32879,r.__webglTexture))},this.setTextureCube=d,this.setupRenderTarget=function(r){var t,i=r.texture,n=v.get(r),a=v.get(i),e=(r.addEventListener("dispose",L),!0!==r.isWebGLMultipleRenderTargets&&(a.__webglTexture=f.createTexture(),a.__version=i.version,x.memory.textures++),!0===r.isWebGLCubeRenderTarget),s=!0===r.isWebGLMultipleRenderTargets,o=!0===r.isWebGLMultisampleRenderTarget,l=i.isDataTexture3D||i.isDataTexture2DArray,c=S(r)||b;if(!b||i.format!==RGBFormat||i.type!==FloatType&&i.type!==HalfFloatType||(i.format=RGBAFormat,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),e){n.__webglFramebuffer=[];for(let e=0;e<6;e++)n.__webglFramebuffer[e]=f.createFramebuffer()}else if(n.__webglFramebuffer=f.createFramebuffer(),s)if(_.drawBuffers){var h=r.texture;for(let e=0,t=h.length;e<t;e++){var u=v.get(h[e]);void 0===u.__webglTexture&&(u.__webglTexture=f.createTexture(),x.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else o&&(b?(n.__webglMultisampledFramebuffer=f.createFramebuffer(),n.__webglColorRenderbuffer=f.createRenderbuffer(),f.bindRenderbuffer(36161,n.__webglColorRenderbuffer),o=y.convert(i.format),t=y.convert(i.type),o=A(i.internalFormat,o,t),t=I(r),f.renderbufferStorageMultisample(36161,t,o,r.width,r.height),g.bindFramebuffer(36160,n.__webglMultisampledFramebuffer),f.framebufferRenderbuffer(36160,36064,36161,n.__webglColorRenderbuffer),f.bindRenderbuffer(36161,null),r.depthBuffer&&(n.__webglDepthRenderbuffer=f.createRenderbuffer(),D(n.__webglDepthRenderbuffer,r,!0)),g.bindFramebuffer(36160,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(e){g.bindTexture(34067,a.__webglTexture),C(34067,i,c);for(let e=0;e<6;e++)B(n.__webglFramebuffer[e],r,i,36064,34069+e);T(i,c)&&E(34067,i,r.width,r.height)}else if(s){var d=r.texture;for(let e=0,t=d.length;e<t;e++){var p=d[e],m=v.get(p);g.bindTexture(3553,m.__webglTexture),C(3553,p,c),B(n.__webglFramebuffer,r,p,36064+e,3553),T(p,c)&&E(3553,p,r.width,r.height)}}else{let e=3553;l&&(b?(t=i.isDataTexture3D,e=t?32879:35866):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),g.bindTexture(e,a.__webglTexture),C(e,i,c),B(n.__webglFramebuffer,r,i,36064,e),T(i,c)&&E(e,i,r.width,r.height,r.depth)}g.unbindTexture(),r.depthBuffer&&N(r)},this.updateRenderTargetMipmap=function(r){var i=S(r)||b,n=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let e=0,t=n.length;e<t;e++){var a,s,o=n[e];T(o,i)&&(a=r.isWebGLCubeRenderTarget?34067:3553,s=v.get(o).__webglTexture,g.bindTexture(a,s),E(a,o,r.width,r.height),g.unbindTexture())}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(b){var r=t.width,i=t.height;let e=16384;t.depthBuffer&&(e|=256),t.stencilBuffer&&(e|=1024);t=v.get(t);g.bindFramebuffer(36008,t.__webglMultisampledFramebuffer),g.bindFramebuffer(36009,t.__webglFramebuffer),f.blitFramebuffer(0,0,r,i,0,0,r,i,e,9728),g.bindFramebuffer(36008,null),g.bindFramebuffer(36009,t.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),u(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===G&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),G=!0),e=e.texture),d(e,t)}}function WebGLUtils(e,r,t){const i=t.isWebGL2;return{convert:function(e){let t;if(e===UnsignedByteType)return 5121;if(e===UnsignedShort4444Type)return 32819;if(e===UnsignedShort5551Type)return 32820;if(e===UnsignedShort565Type)return 33635;if(e===ByteType)return 5120;if(e===ShortType)return 5122;if(e===UnsignedShortType)return 5123;if(e===IntType)return 5124;if(e===UnsignedIntType)return 5125;if(e===FloatType)return 5126;if(e===HalfFloatType)return i?5131:null!==(t=r.get("OES_texture_half_float"))?t.HALF_FLOAT_OES:null;if(e===AlphaFormat)return 6406;if(e===RGBFormat)return 6407;if(e===RGBAFormat)return 6408;if(e===LuminanceFormat)return 6409;if(e===LuminanceAlphaFormat)return 6410;if(e===DepthFormat)return 6402;if(e===DepthStencilFormat)return 34041;if(e===RedFormat)return 6403;if(e===RedIntegerFormat)return 36244;if(e===RGFormat)return 33319;if(e===RGIntegerFormat)return 33320;if(e===RGBIntegerFormat)return 36248;if(e===RGBAIntegerFormat)return 36249;if(e===RGB_S3TC_DXT1_Format||e===RGBA_S3TC_DXT1_Format||e===RGBA_S3TC_DXT3_Format||e===RGBA_S3TC_DXT5_Format){if(null===(t=r.get("WEBGL_compressed_texture_s3tc")))return null;if(e===RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===RGB_PVRTC_4BPPV1_Format||e===RGB_PVRTC_2BPPV1_Format||e===RGBA_PVRTC_4BPPV1_Format||e===RGBA_PVRTC_2BPPV1_Format){if(null===(t=r.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===RGB_ETC1_Format)return null!==(t=r.get("WEBGL_compressed_texture_etc1"))?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===RGB_ETC2_Format||e===RGBA_ETC2_EAC_Format)&&null!==(t=r.get("WEBGL_compressed_texture_etc"))){if(e===RGB_ETC2_Format)return t.COMPRESSED_RGB8_ETC2;if(e===RGBA_ETC2_EAC_Format)return t.COMPRESSED_RGBA8_ETC2_EAC}return e===RGBA_ASTC_4x4_Format||e===RGBA_ASTC_5x4_Format||e===RGBA_ASTC_5x5_Format||e===RGBA_ASTC_6x5_Format||e===RGBA_ASTC_6x6_Format||e===RGBA_ASTC_8x5_Format||e===RGBA_ASTC_8x6_Format||e===RGBA_ASTC_8x8_Format||e===RGBA_ASTC_10x5_Format||e===RGBA_ASTC_10x6_Format||e===RGBA_ASTC_10x8_Format||e===RGBA_ASTC_10x10_Format||e===RGBA_ASTC_12x10_Format||e===RGBA_ASTC_12x12_Format||e===SRGB8_ALPHA8_ASTC_4x4_Format||e===SRGB8_ALPHA8_ASTC_5x4_Format||e===SRGB8_ALPHA8_ASTC_5x5_Format||e===SRGB8_ALPHA8_ASTC_6x5_Format||e===SRGB8_ALPHA8_ASTC_6x6_Format||e===SRGB8_ALPHA8_ASTC_8x5_Format||e===SRGB8_ALPHA8_ASTC_8x6_Format||e===SRGB8_ALPHA8_ASTC_8x8_Format||e===SRGB8_ALPHA8_ASTC_10x5_Format||e===SRGB8_ALPHA8_ASTC_10x6_Format||e===SRGB8_ALPHA8_ASTC_10x8_Format||e===SRGB8_ALPHA8_ASTC_10x10_Format||e===SRGB8_ALPHA8_ASTC_12x10_Format||e===SRGB8_ALPHA8_ASTC_12x12_Format?null!==(t=r.get("WEBGL_compressed_texture_astc"))?e:null:e===RGBA_BPTC_Format?null!==(t=r.get("EXT_texture_compression_bptc"))?e:null:e===UnsignedInt248Type?i?34042:null!==(t=r.get("WEBGL_depth_texture"))?t.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}class ArrayCamera extends PerspectiveCamera{constructor(e=[]){super(),this.cameras=e}}ArrayCamera.prototype.isArrayCamera=!0;class Group extends Object3D{constructor(){super(),this.type="Group"}}Group.prototype.isGroup=!0;const _moveEvent={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let i=null,n=null,a=null;var s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&null!==(i=t.getPose(e.targetRaySpace,r))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent)),l&&e.hand){a=!0;for(const p of e.hand.values()){var c=t.getJointPose(p,r),h=(void 0===l.joints[p.jointName]&&((h=new Group).matrixAutoUpdate=!1,h.visible=!1,l.joints[p.jointName]=h,l.add(h)),l.joints[p.jointName]);null!==c&&(h.matrix.fromArray(c.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.jointRadius=c.radius),h.visible=null!==c}var u=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],u=u.position.distanceTo(d.position);l.inputState.pinching&&.025<u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&u<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,r))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1);return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class WebXRManager extends EventDispatcher{constructor(e,c){super();const i=this,h=e.state;let m=null,n=1,u=null,a="local-floor",d=null,p=null,f=null,g=null,v=null,_=!1,y=null,s=null,o=null,x=null,b=null,M=null;const w=[],l=new Map,S=new PerspectiveCamera,T=(S.layers.enable(1),S.viewport=new Vector4,new PerspectiveCamera),E=(T.layers.enable(2),T.viewport=new Vector4,[S,T]),A=new ArrayCamera;A.layers.enable(1),A.layers.enable(2);let L=null,C=null;function R(e){var t=l.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function P(){l.forEach(function(e,t){e.disconnect(t)}),l.clear(),L=null,C=null,h.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),f&&c.deleteFramebuffer(f),y&&c.deleteFramebuffer(y),s&&c.deleteRenderbuffer(s),o&&c.deleteRenderbuffer(o),f=null,y=null,s=null,o=null,v=null,g=null,p=null,m=null,V.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function B(t){var r=m.inputSources;for(let e=0;e<w.length;e++)l.set(r[e],w[e]);for(let e=0;e<t.removed.length;e++){var i=t.removed[e],n=l.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),l.delete(i))}for(let e=0;e<t.added.length;e++){var a=t.added[e],s=l.get(a);s&&s.dispatchEvent({type:"connected",data:a})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=w[e];return void 0===t&&(t=new WebXRController,w[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=w[e];return void 0===t&&(t=new WebXRController,w[e]=t),t.getGripSpace()},this.getHand=function(e){let t=w[e];return void 0===t&&(t=new WebXRController,w[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){n=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u},this.getBaseLayer=function(){return null!==g?g:v},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return m},this.setSession=async function(t){if(null!==(m=t)){m.addEventListener("select",R),m.addEventListener("selectstart",R),m.addEventListener("selectend",R),m.addEventListener("squeeze",R),m.addEventListener("squeezestart",R),m.addEventListener("squeezeend",R),m.addEventListener("end",P),m.addEventListener("inputsourceschange",B);t=c.getContextAttributes();if(!0!==t.xrCompatible&&await c.makeXRCompatible(),void 0===m.renderState.layers){var r={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:n};v=new XRWebGLLayer(m,c,r),m.updateRenderState({baseLayer:v})}else if(c instanceof WebGLRenderingContext){r={antialias:!0,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:n};v=new XRWebGLLayer(m,c,r),m.updateRenderState({layers:[v]})}else{_=t.antialias;let e=null;t.depth&&(M=256,t.stencil&&(M|=1024),b=t.stencil?33306:36096,e=t.stencil?35056:33190);r={colorFormat:t.alpha?32856:32849,depthFormat:e,scaleFactor:n};p=new XRWebGLBinding(m,c),g=p.createProjectionLayer(r),f=c.createFramebuffer(),m.updateRenderState({layers:[g]}),_&&(y=c.createFramebuffer(),s=c.createRenderbuffer(),c.bindRenderbuffer(36161,s),c.renderbufferStorageMultisample(36161,4,32856,g.textureWidth,g.textureHeight),h.bindFramebuffer(36160,y),c.framebufferRenderbuffer(36160,36064,36161,s),c.bindRenderbuffer(36161,null),null!==e&&(o=c.createRenderbuffer(),c.bindRenderbuffer(36161,o),c.renderbufferStorageMultisample(36161,4,e,g.textureWidth,g.textureHeight),c.framebufferRenderbuffer(36160,b,36161,o),c.bindRenderbuffer(36161,null)),h.bindFramebuffer(36160,null))}u=await m.requestReferenceSpace(a),V.setContext(m),V.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const D=new Vector3,I=new Vector3;function F(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==m){A.near=T.near=S.near=e.near,A.far=T.far=S.far=e.far,L===A.near&&C===A.far||(m.updateRenderState({depthNear:A.near,depthFar:A.far}),L=A.near,C=A.far);var t=e.parent,r=A.cameras;F(A,t);for(let e=0;e<r.length;e++)F(r[e],t);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),e.position.copy(A.position),e.quaternion.copy(A.quaternion),e.scale.copy(A.scale),e.matrix.copy(A.matrix),e.matrixWorld.copy(A.matrixWorld);var i,n,a,s,o,l,c,h,u,d,p=e.children;for(let e=0,t=p.length;e<t;e++)p[e].updateMatrixWorld(!0);2===r.length?(e=A,i=S,n=T,D.setFromMatrixPosition(i.matrixWorld),I.setFromMatrixPosition(n.matrixWorld),a=D.distanceTo(I),s=i.projectionMatrix.elements,n=n.projectionMatrix.elements,o=s[14]/(s[10]-1),l=s[14]/(s[10]+1),c=(s[9]+1)/s[5],h=(s[9]-1)/s[5],s=(s[8]-1)/s[0],n=(n[8]+1)/n[0],u=o*s,d=o*n,s=(n=a/(n-s))*-s,i.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(s),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),i=o+n,o=l+n,e.projectionMatrix.makePerspective(u-s,a-s+d,c*l/o*i,h*l/o*i,i,o)):A.projectionMatrix.copy(S.projectionMatrix)}},this.getCamera=function(){return A},this.getFoveation=function(){return null!==g?g.fixedFoveation:null!==v?v.fixedFoveation:void 0},this.setFoveation=function(e){null!==g&&(g.fixedFoveation=e),null!==v&&void 0!==v.fixedFoveation&&(v.fixedFoveation=e)};let G=null;const V=new WebGLAnimation;V.setAnimationLoop(function(e,t){if(d=t.getViewerPose(u),x=t,null!==d){var i=d.views;null!==v&&h.bindXRFramebuffer(v.framebuffer);let r=!1;i.length!==A.cameras.length&&(A.cameras.length=0,r=!0);for(let t=0;t<i.length;t++){var n=i[t];let e=null;e=null!==v?v.getViewport(n):(a=p.getViewSubImage(g,n),h.bindXRFramebuffer(f),void 0!==a.depthStencilTexture&&c.framebufferTexture2D(36160,b,3553,a.depthStencilTexture,0),c.framebufferTexture2D(36160,36064,3553,a.colorTexture,0),a.viewport);var a=E[t];a.matrix.fromArray(n.transform.matrix),a.projectionMatrix.fromArray(n.projectionMatrix),a.viewport.set(e.x,e.y,e.width,e.height),0===t&&A.matrix.copy(a.matrix),!0===r&&A.cameras.push(a)}_&&(h.bindXRFramebuffer(y),null!==M)&&c.clear(M)}var r,s=m.inputSources;for(let e=0;e<w.length;e++){var o=w[e],l=s[e];o.update(l,t,u)}G&&G(e,t),_&&(e=g.textureWidth,r=g.textureHeight,h.bindFramebuffer(36008,y),h.bindFramebuffer(36009,f),c.invalidateFramebuffer(36008,[b]),c.invalidateFramebuffer(36009,[b]),c.blitFramebuffer(0,0,e,r,0,0,e,r,16384,9728),c.invalidateFramebuffer(36008,[36064]),h.bindFramebuffer(36008,null),h.bindFramebuffer(36009,null),h.bindFramebuffer(36160,y)),x=null}),this.setAnimationLoop=function(e){G=e},this.dispose=function(){}}}function WebGLMaterials(a){function d(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);var r=a.get(t).envMap;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=t.reflectivity,e.ior.value=t.ior,e.refractionRatio.value=t.refractionRatio,void 0!==(r=a.get(r).__maxMipLevel))&&(e.maxMipLevel.value=r),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap?i=t.emissiveMap:t.clearcoatMap?i=t.clearcoatMap:t.clearcoatNormalMap?i=t.clearcoatNormalMap:t.clearcoatRoughnessMap?i=t.clearcoatRoughnessMap:t.specularIntensityMap?i=t.specularIntensityMap:t.specularTintMap?i=t.specularTintMap:t.transmissionMap?i=t.transmissionMap:t.thicknessMap&&(i=t.thicknessMap),void 0!==i&&(!0===(i=i.isWebGLRenderTarget?i.texture:i).matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix));let n;t.aoMap?n=t.aoMap:t.lightMap&&(n=t.lightMap),void 0!==n&&(!0===(n=n.isWebGLRenderTarget?n.texture:n).matrixAutoUpdate&&n.updateMatrix(),e.uv2Transform.value.copy(n.matrix))}function p(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide)&&(e.bumpScale.value*=-1),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide)&&e.normalScale.value.negate(),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(t,r,i,n,a){if(r.isMeshBasicMaterial)d(t,r);else if(r.isMeshLambertMaterial)d(t,r),h=t,(u=r).emissiveMap&&(h.emissiveMap.value=u.emissiveMap);else if(r.isMeshToonMaterial){d(t,r);h=t,u=r;u.gradientMap&&(h.gradientMap.value=u.gradientMap),u.emissiveMap&&(h.emissiveMap.value=u.emissiveMap),u.bumpMap&&(h.bumpMap.value=u.bumpMap,h.bumpScale.value=u.bumpScale,u.side===BackSide)&&(h.bumpScale.value*=-1),u.normalMap&&(h.normalMap.value=u.normalMap,h.normalScale.value.copy(u.normalScale),u.side===BackSide)&&h.normalScale.value.negate(),u.displacementMap&&(h.displacementMap.value=u.displacementMap,h.displacementScale.value=u.displacementScale,h.displacementBias.value=u.displacementBias)}else if(r.isMeshPhongMaterial){d(t,r);var e=t,s=r;e.specular.value.copy(s.specular),e.shininess.value=Math.max(s.shininess,1e-4),s.emissiveMap&&(e.emissiveMap.value=s.emissiveMap),s.bumpMap&&(e.bumpMap.value=s.bumpMap,e.bumpScale.value=s.bumpScale,s.side===BackSide)&&(e.bumpScale.value*=-1),s.normalMap&&(e.normalMap.value=s.normalMap,e.normalScale.value.copy(s.normalScale),s.side===BackSide)&&e.normalScale.value.negate(),s.displacementMap&&(e.displacementMap.value=s.displacementMap,e.displacementScale.value=s.displacementScale,e.displacementBias.value=s.displacementBias)}else if(r.isMeshStandardMaterial)d(t,r),r.isMeshPhysicalMaterial?(e=a,p(s=t,a=r),s.ior.value=a.ior,a.sheenTint&&s.sheenTint.value.copy(a.sheenTint),0<a.clearcoat&&(s.clearcoat.value=a.clearcoat,s.clearcoatRoughness.value=a.clearcoatRoughness,a.clearcoatMap&&(s.clearcoatMap.value=a.clearcoatMap),a.clearcoatRoughnessMap&&(s.clearcoatRoughnessMap.value=a.clearcoatRoughnessMap),a.clearcoatNormalMap)&&(s.clearcoatNormalScale.value.copy(a.clearcoatNormalScale),s.clearcoatNormalMap.value=a.clearcoatNormalMap,a.side===BackSide)&&s.clearcoatNormalScale.value.negate(),0<a.transmission&&(s.transmission.value=a.transmission,s.transmissionSamplerMap.value=e.texture,s.transmissionSamplerSize.value.set(e.width,e.height),a.transmissionMap&&(s.transmissionMap.value=a.transmissionMap),s.thickness.value=a.thickness,a.thicknessMap&&(s.thicknessMap.value=a.thicknessMap),s.attenuationDistance.value=a.attenuationDistance,s.attenuationTint.value.copy(a.attenuationTint)),s.specularIntensity.value=a.specularIntensity,s.specularTint.value.copy(a.specularTint),a.specularIntensityMap&&(s.specularIntensityMap.value=a.specularIntensityMap),a.specularTintMap&&(s.specularTintMap.value=a.specularTintMap)):p(t,r);else if(r.isMeshMatcapMaterial){d(t,r);var a=t,o=r;o.matcap&&(a.matcap.value=o.matcap),o.bumpMap&&(a.bumpMap.value=o.bumpMap,a.bumpScale.value=o.bumpScale,o.side===BackSide)&&(a.bumpScale.value*=-1),o.normalMap&&(a.normalMap.value=o.normalMap,a.normalScale.value.copy(o.normalScale),o.side===BackSide)&&a.normalScale.value.negate(),o.displacementMap&&(a.displacementMap.value=o.displacementMap,a.displacementScale.value=o.displacementScale,a.displacementBias.value=o.displacementBias)}else if(r.isMeshDepthMaterial)d(t,r),a=t,(o=r).displacementMap&&(a.displacementMap.value=o.displacementMap,a.displacementScale.value=o.displacementScale,a.displacementBias.value=o.displacementBias);else if(r.isMeshDistanceMaterial){d(t,r);var a=t,l=r;l.displacementMap&&(a.displacementMap.value=l.displacementMap,a.displacementScale.value=l.displacementScale,a.displacementBias.value=l.displacementBias),a.referencePosition.value.copy(l.referencePosition),a.nearDistance.value=l.nearDistance,a.farDistance.value=l.farDistance}else if(r.isMeshNormalMaterial){d(t,r);a=t,l=r;l.bumpMap&&(a.bumpMap.value=l.bumpMap,a.bumpScale.value=l.bumpScale,l.side===BackSide)&&(a.bumpScale.value*=-1),l.normalMap&&(a.normalMap.value=l.normalMap,a.normalScale.value.copy(l.normalScale),l.side===BackSide)&&a.normalScale.value.negate(),l.displacementMap&&(a.displacementMap.value=l.displacementMap,a.displacementScale.value=l.displacementScale,a.displacementBias.value=l.displacementBias)}else if(r.isLineBasicMaterial)a=r,(c=t).diffuse.value.copy(a.color),c.opacity.value=a.opacity,r.isLineDashedMaterial&&(c=r,(a=t).dashSize.value=c.dashSize,a.totalSize.value=c.dashSize+c.gapSize,a.scale.value=c.scale);else if(r.isPointsMaterial){a=t;c=r;a.diffuse.value.copy(c.color),a.opacity.value=c.opacity,a.size.value=c.size*i,a.scale.value=.5*n,c.map&&(a.map.value=c.map);c.alphaMap&&(a.alphaMap.value=c.alphaMap);0<c.alphaTest&&(a.alphaTest.value=c.alphaTest);let e;c.map?e=c.map:c.alphaMap&&(e=c.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),a.uvTransform.value.copy(e.matrix))}else if(r.isSpriteMaterial){i=t;n=r;i.diffuse.value.copy(n.color),i.opacity.value=n.opacity,i.rotation.value=n.rotation,n.map&&(i.map.value=n.map);n.alphaMap&&(i.alphaMap.value=n.alphaMap);0<n.alphaTest&&(i.alphaTest.value=n.alphaTest);let e;n.map?e=n.map:n.alphaMap&&(e=n.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),i.uvTransform.value.copy(e.matrix))}else r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1);var c,h,u}}}function createCanvasElement(){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}function WebGLRenderer(e={}){const n=void 0!==e.canvas?e.canvas:createCanvasElement(),r=void 0!==e.context?e.context:null,V=void 0!==e.alpha&&e.alpha,N=void 0===e.depth||e.depth,U=void 0===e.stencil||e.stencil,O=void 0!==e.antialias&&e.antialias,z=void 0===e.premultipliedAlpha||e.premultipliedAlpha,H=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,k=void 0!==e.powerPreference?e.powerPreference:"default",W=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let m=null,y=null;const a=[],s=[],x=(this.domElement=n,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=NoToneMapping,this.toneMappingExposure=1,this);let j=!1,q=0,$=0,b=null,M=-1,w=null;const u=new Vector4,X=new Vector4;let Y=null,i=n.width,S=n.height,T=1,Z=null,J=null;const o=new Vector4(0,0,i,S),l=new Vector4(0,0,i,S);let Q=!1;const c=[],K=new Frustum;let ee=!1,te=!1,E=null;const re=new Matrix4,A=new Vector3,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return null===b?T:1}let L=r;function ae(t,r){for(let e=0;e<t.length;e++){var i=t[e],i=n.getContext(i,r);if(null!==i)return i}return null}try{var se={alpha:V,depth:N,stencil:U,antialias:O,premultipliedAlpha:z,preserveDrawingBuffer:H,powerPreference:k,failIfMajorPerformanceCaveat:W};if(n.addEventListener("webglcontextlost",_e,!1),n.addEventListener("webglcontextrestored",ye,!1),null===L){var oe=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&oe.shift(),null===(L=ae(oe,se)))throw ae(oe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===L.getShaderPrecisionFormat&&(L.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let d,C,R,f,P,B,D,le,ce,he,g,h,ue,de,pe,I,p,v,me,fe,ge,_,F;function ve(){d=new WebGLExtensions(L),C=new WebGLCapabilities(L,d,e),d.init(C),_=new WebGLUtils(L,d,C),R=new WebGLState(L,d,C),c[0]=1029,f=new WebGLInfo(L),P=new WebGLProperties,B=new WebGLTextures(L,d,R,P,C,_,f),D=new WebGLCubeMaps(x),le=new WebGLCubeUVMaps(x),ce=new WebGLAttributes(L,C),F=new WebGLBindingStates(L,d,ce,C),he=new WebGLGeometries(L,ce,f,F),g=new WebGLObjects(L,he,ce,f),me=new WebGLMorphtargets(L),I=new WebGLClipping(P),h=new WebGLPrograms(x,D,le,d,C,F,I),ue=new WebGLMaterials(P),de=new WebGLRenderLists(P),pe=new WebGLRenderStates(d,C),v=new WebGLBackground(x,D,R,g,z),p=new WebGLShadowMap(x,g,C),fe=new WebGLBufferRenderer(L,d,f,C),ge=new WebGLIndexedBufferRenderer(L,d,f,C),f.programs=h.programs,x.capabilities=C,x.extensions=d,x.properties=P,x.renderLists=de,x.shadowMap=p,x.state=R,x.info=f}ve();const G=new WebXRManager(x,L);function _e(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),j=!0}function ye(){console.log("THREE.WebGLRenderer: Context Restored."),j=!1;var e=f.autoReset,t=p.enabled,r=p.autoUpdate,i=p.needsUpdate,n=p.type;ve(),f.autoReset=e,p.enabled=t,p.autoUpdate=r,p.needsUpdate=i,p.type=n}function xe(e){var e=e.target,t=(e.removeEventListener("dispose",xe),e=e);void 0!==(t=P.get(t).programs)&&t.forEach(function(e){h.releaseProgram(e)}),P.remove(e)}this.xr=G,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){var e=d.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=d.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return T},this.setPixelRatio=function(e){void 0!==e&&(T=e,this.setSize(i,S,!1))},this.getSize=function(e){return e.set(i,S)},this.setSize=function(e,t,r){G.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(i=e,S=t,n.width=Math.floor(e*T),n.height=Math.floor(t*T),!1!==r&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(i*T,S*T).floor()},this.setDrawingBufferSize=function(e,t,r){i=e,S=t,T=r,n.width=Math.floor(e*r),n.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(u)},this.getViewport=function(e){return e.copy(o)},this.setViewport=function(e,t,r,i){e.isVector4?o.set(e.x,e.y,e.z,e.w):o.set(e,t,r,i),R.viewport(u.copy(o).multiplyScalar(T).floor())},this.getScissor=function(e){return e.copy(l)},this.setScissor=function(e,t,r,i){e.isVector4?l.set(e.x,e.y,e.z,e.w):l.set(e,t,r,i),R.scissor(X.copy(l).multiplyScalar(T).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(e){R.setScissorTest(Q=e)},this.setOpaqueSort=function(e){Z=e},this.setTransparentSort=function(e){J=e},this.getClearColor=function(e){return e.copy(v.getClearColor())},this.setClearColor=function(){v.setClearColor.apply(v,arguments)},this.getClearAlpha=function(){return v.getClearAlpha()},this.setClearAlpha=function(){v.setClearAlpha.apply(v,arguments)},this.clear=function(e,t,r){let i=0;void 0!==e&&!e||(i|=16384),void 0!==t&&!t||(i|=256),void 0!==r&&!r||(i|=1024),L.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",_e,!1),n.removeEventListener("webglcontextrestored",ye,!1),de.dispose(),pe.dispose(),P.dispose(),D.dispose(),le.dispose(),g.dispose(),F.dispose(),G.dispose(),G.removeEventListener("sessionstart",Me),G.removeEventListener("sessionend",we),E&&(E.dispose(),E=null),t.stop()},this.renderBufferImmediate=function(e,t){F.initAttributes();var r=P.get(e),t=(e.hasPositions&&!r.position&&(r.position=L.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=L.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=L.createBuffer()),e.hasColors&&!r.color&&(r.color=L.createBuffer()),t.getAttributes());e.hasPositions&&(L.bindBuffer(34962,r.position),L.bufferData(34962,e.positionArray,35048),F.enableAttribute(t.position.location),L.vertexAttribPointer(t.position.location,3,5126,!1,0,0)),e.hasNormals&&(L.bindBuffer(34962,r.normal),L.bufferData(34962,e.normalArray,35048),F.enableAttribute(t.normal.location),L.vertexAttribPointer(t.normal.location,3,5126,!1,0,0)),e.hasUvs&&(L.bindBuffer(34962,r.uv),L.bufferData(34962,e.uvArray,35048),F.enableAttribute(t.uv.location),L.vertexAttribPointer(t.uv.location,2,5126,!1,0,0)),e.hasColors&&(L.bindBuffer(34962,r.color),L.bufferData(34962,e.colorArray,35048),F.enableAttribute(t.color.location),L.vertexAttribPointer(t.color.location,3,5126,!1,0,0)),F.disableUnusedAttributes(),L.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,a){null===t&&(t=ie);var s=n.isMesh&&n.matrixWorld.determinant()<0,e=Le(e,t,i,n);R.setMaterial(i,s);let o=r.index;t=r.attributes.position;if(null===o){if(void 0===t||0===t.count)return}else if(0===o.count)return;let l=1,c=(!0===i.wireframe&&(o=he.getWireframeAttribute(r),l=2),void 0===r.morphAttributes.position&&void 0===r.morphAttributes.normal||me.update(n,r,i,e),F.setup(n,i,e,r,o),fe);null!==o&&(s=ce.get(o),(c=ge).setIndex(s));var e=(null!==o?o:t).count,s=r.drawRange.start*l,t=r.drawRange.count*l,h=null!==a?a.start*l:0,a=null!==a?a.count*l:1/0,u=Math.max(s,h),e=Math.min(e,s+t,h+a)-1,s=Math.max(0,e-u+1);if(0!==s){if(n.isMesh)!0===i.wireframe?(R.setLineWidth(i.wireframeLinewidth*ne()),c.setMode(1)):c.setMode(4);else if(n.isLine){let e=i.linewidth;void 0===e&&(e=1),R.setLineWidth(e*ne()),n.isLineSegments?c.setMode(1):n.isLineLoop?c.setMode(2):c.setMode(3)}else n.isPoints?c.setMode(0):n.isSprite&&c.setMode(4);n.isInstancedMesh?c.renderInstances(u,s,n.count):r.isInstancedBufferGeometry?(t=Math.min(r.instanceCount,r._maxInstanceCount),c.renderInstances(u,s,t)):c.render(u,s)}},this.compile=function(i,t){(y=pe.get(i)).init(),s.push(y),i.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(y.pushLight(e),e.castShadow)&&y.pushShadow(e)}),y.setupLights(x.physicallyCorrectLights),i.traverse(function(t){var r=t.material;if(r)if(Array.isArray(r))for(let e=0;e<r.length;e++)Ee(r[e],i,t);else Ee(r,i,t)}),s.pop(),y=null};let be=null;function Me(){t.stop()}function we(){t.start()}const t=new WebGLAnimation;function Se(e,t,r,i){var n,a,s,o,l,c=e.opaque,h=e.transmissive,e=e.transparent;y.setupLightsView(r),0<h.length&&(n=c,a=t,s=r,null===E&&(o=!0===O&&!0===C.isWebGL2?WebGLMultisampleRenderTarget:WebGLRenderTarget,E=new o(1024,1024,{generateMipmaps:!0,type:null!==_.convert(HalfFloatType)?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping})),o=x.getRenderTarget(),x.setRenderTarget(E),x.clear(),l=x.toneMapping,x.toneMapping=NoToneMapping,Te(n,a,s),x.toneMapping=l,B.updateMultisampleRenderTarget(E),B.updateRenderTargetMipmap(E),x.setRenderTarget(o)),i&&R.viewport(u.copy(i)),0<c.length&&Te(c,t,r),0<h.length&&Te(h,t,r),0<e.length&&Te(e,t,r)}function Te(r,i,n){var a=!0===i.isScene?i.overrideMaterial:null;for(let e=0,t=r.length;e<t;e++){var s,o,l,c,h,u,d,p=r[e],m=p.object,f=p.geometry,g=null===a?p.material:a,p=p.group;m.layers.test(n.layers)&&(d=u=h=c=l=o=s=void 0,o=i,l=n,c=f,h=g,u=p,(s=m).onBeforeRender(x,o,l,c,h,u),s.modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),s.isImmediateRenderObject?(d=Le(l,o,h,s),R.setMaterial(h),F.reset(),function(e,t){e.render(function(e){x.renderBufferImmediate(e,t)})}(s,d)):!0===h.transparent&&h.side===DoubleSide?(h.side=BackSide,h.needsUpdate=!0,x.renderBufferDirect(l,o,c,h,s,u),h.side=FrontSide,h.needsUpdate=!0,x.renderBufferDirect(l,o,c,h,s,u),h.side=DoubleSide):x.renderBufferDirect(l,o,c,h,s,u),s.onAfterRender(x,o,l,c,h,u))}}function Ee(e,t,r){!0!==t.isScene&&(t=ie);var i=P.get(e),n=y.state.lights,a=y.state.shadowsArray,s=n.state.version,a=h.getParameters(e,n.state,a,t,r),r=h.getProgramCacheKey(a);let o=i.programs,l=(i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?le:D).get(e.envMap||i.environment),void 0===o&&(e.addEventListener("dispose",xe),o=new Map,i.programs=o),o.get(r));if(void 0!==l){if(i.currentProgram===l&&i.lightsStateVersion===s)return Ae(e,a),l}else a.uniforms=h.getUniforms(e),e.onBuild(a,x),e.onBeforeCompile(a,x),l=h.acquireProgram(a,r),o.set(r,l),i.uniforms=a.uniforms;t=i.uniforms,(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(t.clippingPlanes=I.uniform),Ae(e,a),i.needsLights=(r=e).isMeshLambertMaterial||r.isMeshToonMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.isShadowMaterial||r.isShaderMaterial&&!0===r.lights,i.lightsStateVersion=s,i.needsLights&&(t.ambientLightColor.value=n.state.ambient,t.lightProbe.value=n.state.probe,t.directionalLights.value=n.state.directional,t.directionalLightShadows.value=n.state.directionalShadow,t.spotLights.value=n.state.spot,t.spotLightShadows.value=n.state.spotShadow,t.rectAreaLights.value=n.state.rectArea,t.ltc_1.value=n.state.rectAreaLTC1,t.ltc_2.value=n.state.rectAreaLTC2,t.pointLights.value=n.state.point,t.pointLightShadows.value=n.state.pointShadow,t.hemisphereLights.value=n.state.hemi,t.directionalShadowMap.value=n.state.directionalShadowMap,t.directionalShadowMatrix.value=n.state.directionalShadowMatrix,t.spotShadowMap.value=n.state.spotShadowMap,t.spotShadowMatrix.value=n.state.spotShadowMatrix,t.pointShadowMap.value=n.state.pointShadowMap,t.pointShadowMatrix.value=n.state.pointShadowMatrix),a=l.getUniforms(),e=WebGLUniforms.seqWithValue(a.seq,t);return i.currentProgram=l,i.uniformsList=e,l}function Ae(e,t){e=P.get(e);e.outputEncoding=t.outputEncoding,e.instancing=t.instancing,e.skinning=t.skinning,e.morphTargets=t.morphTargets,e.morphNormals=t.morphNormals,e.numClippingPlanes=t.numClippingPlanes,e.numIntersection=t.numClipIntersection,e.vertexAlphas=t.vertexAlphas,e.vertexTangents=t.vertexTangents}function Le(e,t,r,i){!0!==t.isScene&&(t=ie),B.resetTextureUnits();var n=t.fog,a=r.isMeshStandardMaterial?t.environment:null,s=null===b?x.outputEncoding:b.texture.encoding,a=(r.isMeshStandardMaterial?le:D).get(r.envMap||a),o=!0===r.vertexColors&&!!i.geometry&&!!i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=!!i.geometry&&!!i.geometry.attributes.tangent,c=!!i.geometry&&!!i.geometry.morphAttributes.position,h=!!i.geometry&&!!i.geometry.morphAttributes.normal,u=P.get(r),d=y.state.lights;!0!==ee||!0!==te&&e===w||(_=e===w&&r.id===M,I.setState(r,e,_));let p=!1,m=(r.version===u.__version?(u.needsLights&&u.lightsStateVersion!==d.state.version||u.outputEncoding!==s||i.isInstancedMesh&&!1===u.instancing||!i.isInstancedMesh&&!0===u.instancing||i.isSkinnedMesh&&!1===u.skinning||!i.isSkinnedMesh&&!0===u.skinning||u.envMap!==a||r.fog&&u.fog!==n||void 0!==u.numClippingPlanes&&(u.numClippingPlanes!==I.numPlanes||u.numIntersection!==I.numIntersection)||u.vertexAlphas!==o||u.vertexTangents!==l||u.morphTargets!==c||u.morphNormals!==h)&&(p=!0):(p=!0,u.__version=r.version),u.currentProgram),f=!1,g=!1,v=!1;var _=(m=!0===p?Ee(r,t,i):m).getUniforms(),d=u.uniforms;return R.useProgram(m.program)&&(f=!0,g=!0,v=!0),r.id!==M&&(M=r.id,g=!0),(f||w!==e)&&(_.setValue(L,"projectionMatrix",e.projectionMatrix),C.logarithmicDepthBuffer&&_.setValue(L,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),w!==e&&(w=e,g=!0,v=!0),(r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap)&&void 0!==(s=_.map.cameraPosition)&&s.setValue(L,A.setFromMatrixPosition(e.matrixWorld)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&_.setValue(L,"isOrthographic",!0===e.isOrthographicCamera),r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&_.setValue(L,"viewMatrix",e.matrixWorldInverse),i.isSkinnedMesh&&(_.setOptional(L,i,"bindMatrix"),_.setOptional(L,i,"bindMatrixInverse"),a=i.skeleton)&&(C.floatVertexTextures?(null===a.boneTexture&&a.computeBoneTexture(),_.setValue(L,"boneTexture",a.boneTexture,B),_.setValue(L,"boneTextureSize",a.boneTextureSize)):_.setOptional(L,a,"boneMatrices")),!g&&u.receiveShadow===i.receiveShadow||(u.receiveShadow=i.receiveShadow,_.setValue(L,"receiveShadow",i.receiveShadow)),g&&(_.setValue(L,"toneMappingExposure",x.toneMappingExposure),u.needsLights&&(o=d,l=v,o.ambientLightColor.needsUpdate=l,o.lightProbe.needsUpdate=l,o.directionalLights.needsUpdate=l,o.directionalLightShadows.needsUpdate=l,o.pointLights.needsUpdate=l,o.pointLightShadows.needsUpdate=l,o.spotLights.needsUpdate=l,o.spotLightShadows.needsUpdate=l,o.rectAreaLights.needsUpdate=l,o.hemisphereLights.needsUpdate=l),n&&r.fog&&ue.refreshFogUniforms(d,n),ue.refreshMaterialUniforms(d,r,T,S,E),WebGLUniforms.upload(L,u.uniformsList,d,B)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(WebGLUniforms.upload(L,u.uniformsList,d,B),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&_.setValue(L,"center",i.center),_.setValue(L,"modelViewMatrix",i.modelViewMatrix),_.setValue(L,"normalMatrix",i.normalMatrix),_.setValue(L,"modelMatrix",i.matrixWorld),m}t.setAnimationLoop(function(e){be&&be(e)}),"undefined"!=typeof window&&t.setContext(window),this.setAnimationLoop=function(e){be=e,G.setAnimationLoop(e),null===e?t.stop():t.start()},G.addEventListener("sessionstart",Me),G.addEventListener("sessionend",we),this.render=function(r,e){if(void 0!==e&&!0!==e.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!0!==j){!0===r.autoUpdate&&r.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===G.enabled&&!0===G.isPresenting&&(!0===G.cameraAutoUpdate&&G.updateCamera(e),e=G.getCamera()),!0===r.isScene&&r.onBeforeRender(x,r,e,b),(y=pe.get(r,s.length)).init(),s.push(y),re.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),K.setFromProjectionMatrix(re),te=this.localClippingEnabled,ee=I.init(this.clippingPlanes,te,e),(m=de.get(r,a.length)).init(),a.push(m),!function r(i,n,a,s){if(!1===i.visible)return;const e=i.layers.test(n.layers);if(e)if(i.isGroup)a=i.renderOrder;else if(i.isLOD)!0===i.autoUpdate&&i.update(n);else if(i.isLight)y.pushLight(i),i.castShadow&&y.pushShadow(i);else if(i.isSprite){if(!i.frustumCulled||K.intersectsSprite(i)){s&&A.setFromMatrixPosition(i.matrixWorld).applyMatrix4(re);const t=g.update(i),l=i.material;l.visible&&m.push(i,t,l,a,A.z,null)}}else if(i.isImmediateRenderObject)s&&A.setFromMatrixPosition(i.matrixWorld).applyMatrix4(re),m.push(i,null,i.material,a,A.z,null);else if((i.isMesh||i.isLine||i.isPoints)&&(i.isSkinnedMesh&&i.skeleton.frame!==f.render.frame&&(i.skeleton.update(),i.skeleton.frame=f.render.frame),!i.frustumCulled||K.intersectsObject(i))){s&&A.setFromMatrixPosition(i.matrixWorld).applyMatrix4(re);const c=g.update(i),h=i.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];p&&p.visible&&m.push(i,c,p,a,A.z,d)}}else h.visible&&m.push(i,c,h,a,A.z,null)}const o=i.children;for(let e=0,t=o.length;e<t;e++)r(o[e],n,a,s)}(r,e,0,x.sortObjects),m.finish(),!0===x.sortObjects&&m.sort(Z,J),!0===ee&&I.beginShadows();var t=y.state.shadowsArray;if(p.render(t,r,e),!0===ee&&I.endShadows(),!0===this.info.autoReset&&this.info.reset(),v.render(m,r),y.setupLights(x.physicallyCorrectLights),e.isArrayCamera){var i=e.cameras;for(let e=0,t=i.length;e<t;e++){var n=i[e];Se(m,r,n,n.viewport)}}else Se(m,r,e);null!==b&&(B.updateMultisampleRenderTarget(b),B.updateRenderTargetMipmap(b)),!0===r.isScene&&r.onAfterRender(x,r,e),R.buffers.depth.setTest(!0),R.buffers.depth.setMask(!0),R.buffers.color.setMask(!0),R.setPolygonOffset(!1),F.resetDefaultState(),M=-1,w=null,s.pop(),y=0<s.length?s[s.length-1]:null,a.pop(),m=0<a.length?a[a.length-1]:null}},this.getActiveCubeFace=function(){return q},this.getActiveMipmapLevel=function(){return $},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,r=0){b=t,q=e,$=r,t&&void 0===P.get(t).__webglFramebuffer&&B.setupRenderTarget(t);let i=null,n=!1,a=!1;Y=t?(((s=t.texture).isDataTexture3D||s.isDataTexture2DArray)&&(a=!0),s=P.get(t).__webglFramebuffer,t.isWebGLCubeRenderTarget?(i=s[e],n=!0):i=t.isWebGLMultisampleRenderTarget?P.get(t).__webglMultisampledFramebuffer:s,u.copy(t.viewport),X.copy(t.scissor),t.scissorTest):(u.copy(o).multiplyScalar(T).floor(),X.copy(l).multiplyScalar(T).floor(),Q);var s=R.bindFramebuffer(36160,i);if(s&&C.drawBuffers){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const B=t.texture;if(c.length!==B.length||36064!==c[0]){for(let e=0,t=B.length;e<t;e++)c[e]=36064+e;c.length=B.length,e=!0}}else 1===c.length&&36064===c[0]||(c[0]=36064,c.length=1,e=!0);else 1===c.length&&1029===c[0]||(c[0]=1029,c.length=1,e=!0);e&&(C.isWebGL2?L.drawBuffers(c):d.get("WEBGL_draw_buffers").drawBuffersWEBGL(c))}R.viewport(u),R.scissor(X),R.setScissorTest(Y),n?(s=P.get(t.texture),L.framebufferTexture2D(36160,36064,34069+e,s.__webglTexture,r)):a&&(s=P.get(t.texture),t=e||0,L.framebufferTextureLayer(36160,36064,s.__webglTexture,r||0,t)),M=-1},this.readRenderTargetPixels=function(t,r,i,n,a,s,o){if(t&&t.isWebGLRenderTarget){let e=P.get(t).__webglFramebuffer;if(e=t.isWebGLCubeRenderTarget&&void 0!==o?e[o]:e){R.bindFramebuffer(36160,e);try{var l,c=t.texture,h=c.format,u=c.type;h!==RGBAFormat&&_.convert(h)!==L.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):(l=u===HalfFloatType&&(d.has("EXT_color_buffer_half_float")||C.isWebGL2&&d.has("EXT_color_buffer_float")),u===UnsignedByteType||_.convert(u)===L.getParameter(35738)||u===FloatType&&(C.isWebGL2||d.has("OES_texture_float")||d.has("WEBGL_color_buffer_float"))||l?36053===L.checkFramebufferStatus(36160)?0<=r&&r<=t.width-n&&0<=i&&i<=t.height-a&&L.readPixels(r,i,n,a,_.convert(h),_.convert(u),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."))}finally{const e=null!==b?P.get(b).__webglFramebuffer:null;R.bindFramebuffer(36160,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,r=0){var i=Math.pow(2,-r),n=Math.floor(t.image.width*i),i=Math.floor(t.image.height*i);let a=_.convert(t.format);C.isWebGL2&&6408===(a=6407===a?32849:a)&&(a=32856),B.setTexture2D(t,0),L.copyTexImage2D(3553,r,a,e.x,e.y,n,i,0),R.unbindTexture()},this.copyTextureToTexture=function(e,t,r,i=0){var n=t.image.width,a=t.image.height,s=_.convert(r.format),o=_.convert(r.type);B.setTexture2D(r,0),L.pixelStorei(37440,r.flipY),L.pixelStorei(37441,r.premultiplyAlpha),L.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?L.texSubImage2D(3553,i,e.x,e.y,n,a,s,o,t.image.data):t.isCompressedTexture?L.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):L.texSubImage2D(3553,i,e.x,e.y,s,o,t.image),0===i&&r.generateMipmaps&&L.generateMipmap(3553),R.unbindTexture()},this.copyTextureToTexture3D=function(t,r,i,n,a=0){if(x.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var s=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,l=t.max.z-t.min.z+1,c=_.convert(n.format),h=_.convert(n.type);let e;if(n.isDataTexture3D)B.setTexture3D(n,0),e=32879;else{if(!n.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");B.setTexture2DArray(n,0),e=35866}L.pixelStorei(37440,n.flipY),L.pixelStorei(37441,n.premultiplyAlpha),L.pixelStorei(3317,n.unpackAlignment);var u=L.getParameter(3314),d=L.getParameter(32878),p=L.getParameter(3316),m=L.getParameter(3315),f=L.getParameter(32877),g=i.isCompressedTexture?i.mipmaps[0]:i.image;L.pixelStorei(3314,g.width),L.pixelStorei(32878,g.height),L.pixelStorei(3316,t.min.x),L.pixelStorei(3315,t.min.y),L.pixelStorei(32877,t.min.z),i.isDataTexture||i.isDataTexture3D?L.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,c,h,g.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),L.compressedTexSubImage3D(e,a,r.x,r.y,r.z,s,o,l,c,g.data)):L.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,c,h,g),L.pixelStorei(3314,u),L.pixelStorei(32878,d),L.pixelStorei(3316,p),L.pixelStorei(3315,m),L.pixelStorei(32877,f),0===a&&n.generateMipmaps&&L.generateMipmap(e),R.unbindTexture()}},this.initTexture=function(e){B.setTexture2D(e,0),R.unbindTexture()},this.resetState=function(){q=0,$=0,b=null,R.reset(),F.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=!0;class FogExp2{constructor(e,t=25e-5){this.name="",this.color=new Color(e),this.density=t}clone(){return new FogExp2(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}FogExp2.prototype.isFogExp2=!0;class Fog{constructor(e,t=1,r=1e3){this.name="",this.color=new Color(e),this.near=t,this.far=r}clone(){return new Fog(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Fog.prototype.isFog=!0;class Scene extends Object3D{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){e=super.toJSON(e);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}Scene.prototype.isScene=!0;class InterleavedBuffer{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=generateUUID()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(r,i,n){r*=this.stride,n*=i.stride;for(let e=0,t=this.stride;e<t;e++)this.array[r+e]=i.array[n+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),e=new this.constructor(e,this.stride);return e.setUsage(this.usage),e}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}InterleavedBuffer.prototype.isInterleavedBuffer=!0;const _vector$6=new Vector3;class InterleavedBufferAttribute{constructor(e,t,r,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(r){for(let e=0,t=this.data.count;e<t;e++)_vector$6.x=this.getX(e),_vector$6.y=this.getY(e),_vector$6.z=this.getZ(e),_vector$6.applyMatrix4(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)_vector$6.x=this.getX(e),_vector$6.y=this.getY(e),_vector$6.z=this.getZ(e),_vector$6.applyNormalMatrix(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)_vector$6.x=this.getX(e),_vector$6.y=this.getY(e),_vector$6.z=this.getZ(e),_vector$6.transformDirection(r),this.setXYZ(e,_vector$6.x,_vector$6.y,_vector$6.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=i,this}setXYZW(e,t,r,i,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=i,this.data.array[e+3]=n,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");var t=[];for(let e=0;e<this.count;e++){var r=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[r+e])}return new BufferAttribute(new this.array.constructor(t),this.itemSize,this.normalized)}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");var t=[];for(let e=0;e<this.count;e++){var r=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[r+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute=!0;class SpriteMaterial extends Material{constructor(e){super(),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}SpriteMaterial.prototype.isSpriteMaterial=!0;let _geometry;const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2;class Sprite extends Object3D{constructor(e){var t;super(),this.type="Sprite",void 0===_geometry&&(_geometry=new BufferGeometry,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new InterleavedBuffer(t,5),_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(t,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(t,2,3,!1))),this.geometry=_geometry,this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);var r=this.material.rotation;let i,n;0!==r&&(n=Math.cos(r),i=Math.sin(r));var r=this.center,a=(transformVertex(_vA.set(-.5,-.5,0),_mvPosition,r,_worldScale,i,n),transformVertex(_vB.set(.5,-.5,0),_mvPosition,r,_worldScale,i,n),transformVertex(_vC.set(.5,.5,0),_mvPosition,r,_worldScale,i,n),_uvA.set(0,0),_uvB.set(1,0),_uvC.set(1,1),e.ray.intersectTriangle(_vA,_vB,_vC,!1,_intersectPoint));null===a&&(transformVertex(_vB.set(-.5,.5,0),_mvPosition,r,_worldScale,i,n),_uvB.set(0,1),null===(a=e.ray.intersectTriangle(_vA,_vC,_vB,!1,_intersectPoint)))||(r=e.ray.origin.distanceTo(_intersectPoint))<e.near||r>e.far||t.push({distance:r,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function transformVertex(e,t,r,i,n,a){_alignedPosition.subVectors(e,r).addScalar(.5).multiply(i),void 0!==n?(_rotatedPosition.x=a*_alignedPosition.x-n*_alignedPosition.y,_rotatedPosition.y=n*_alignedPosition.x+a*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}Sprite.prototype.isSprite=!0;const _v1$2=new Vector3,_v2$1=new Vector3;class LOD extends Object3D{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var r=e.levels;for(let e=0,t=r.length;e<t;e++){var i=r[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);var r=this.levels;let i;for(i=0;i<r.length&&!(t<r[i].distance);i++);return r.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(r){var i=this.levels;if(0<i.length){let e,t;for(e=1,t=i.length;e<t&&!(r<i[e].distance);e++);return i[e-1].object}return null}raycast(e,t){var r;0<this.levels.length&&(_v1$2.setFromMatrixPosition(this.matrixWorld),r=e.ray.origin.distanceTo(_v1$2),this.getObjectForDistance(r).raycast(e,t))}update(r){var i=this.levels;if(1<i.length){_v1$2.setFromMatrixPosition(r.matrixWorld),_v2$1.setFromMatrixPosition(this.matrixWorld);var n=_v1$2.distanceTo(_v2$1)/r.zoom;i[0].object.visible=!0;let e,t;for(e=1,t=i.length;e<t&&n>=i[e].distance;e++)i[e-1].object.visible=!1,i[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)i[e].object.visible=!1}}toJSON(e){var r=super.toJSON(e),i=(!1===this.autoUpdate&&(r.object.autoUpdate=!1),r.object.levels=[],this.levels);for(let e=0,t=i.length;e<t;e++){var n=i[e];r.object.levels.push({object:n.object.uuid,distance:n.distance})}return r}}const _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector$5=new Vector3,_matrix=new Matrix4;class SkinnedMesh extends Mesh{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){var r=new Vector4,i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){r.x=i.getX(e),r.y=i.getY(e),r.z=i.getZ(e),r.w=i.getW(e);var n=1/r.manhattanLength();n!=1/0?r.multiplyScalar(n):r.set(1,0,0,0),i.setXYZW(e,r.x,r.y,r.z,r.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var r=this.skeleton,i=this.geometry;_skinIndex.fromBufferAttribute(i.attributes.skinIndex,e),_skinWeight.fromBufferAttribute(i.attributes.skinWeight,e),_basePosition.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var n,a=_skinWeight.getComponent(e);0!==a&&(n=_skinIndex.getComponent(e),_matrix.multiplyMatrices(r.bones[n].matrixWorld,r.boneInverses[n]),t.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),a))}return t.applyMatrix4(this.bindMatrixInverse)}}SkinnedMesh.prototype.isSkinnedMesh=!0;class Bone extends Object3D{constructor(){super(),this.type="Bone"}}Bone.prototype.isBone=!0;class DataTexture extends Texture{constructor(e=null,t=1,r=1,i,n,a,s,o,l=NearestFilter,c=NearestFilter,h,u){super(null,a,s,o,l,c,i,n,h,u),this.image={data:e,width:t,height:r},this.magFilter=l,this.minFilter=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}DataTexture.prototype.isDataTexture=!0;const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;class Skeleton{constructor(e=[],t=[]){this.uuid=generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Matrix4)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){var r=new Matrix4;this.bones[e]&&r.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(r)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];r&&r.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){var i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){var r=this.bones,i=this.boneInverses,n=this.boneMatrices,e=this.boneTexture;for(let e=0,t=r.length;e<t;e++){var a=r[e]?r[e].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(a,i[e]),_offsetMatrix.toArray(n,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Skeleton(this.bones,this.boneInverses)}computeBoneTexture(){var e=ceilPowerOfTwo(Math.sqrt(4*this.bones.length)),t=(e=Math.max(e,4),new Float32Array(e*e*4)),r=(t.set(this.boneMatrices),new DataTexture(t,e,e,RGBAFormat,FloatType));return this.boneMatrices=t,this.boneTexture=r,this.boneTextureSize=e,this}getBoneByName(r){for(let e=0,t=this.bones.length;e<t;e++){var i=this.bones[e];if(i.name===r)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(r,i){this.uuid=r.uuid;for(let t=0,e=r.bones.length;t<e;t++){var n=r.bones[t];let e=i[n];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),e=new Bone),this.bones.push(e),this.boneInverses.push((new Matrix4).fromArray(r.boneInverses[t]))}return this.init(),this}toJSON(){var r={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]},i=(r.uuid=this.uuid,this.bones),n=this.boneInverses;for(let e=0,t=i.length;e<t;e++){var a=i[e],a=(r.bones.push(a.uuid),n[e]);r.boneInverses.push(a.toArray())}return r}}class InstancedBufferAttribute extends BufferAttribute{constructor(e,t,r,i=1){"number"==typeof r&&(i=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,r),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){var e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}InstancedBufferAttribute.prototype.isInstancedBufferAttribute=!0;const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;class InstancedMesh extends Mesh{constructor(e,t,r){super(e,t),this.instanceMatrix=new InstancedBufferAttribute(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,i){var t=this.matrixWorld,n=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(let r=0;r<n;r++){this.getMatrixAt(r,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(t,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects);for(let e=0,t=_instanceIntersects.length;e<t;e++){var a=_instanceIntersects[e];a.instanceId=r,a.object=this,i.push(a)}_instanceIntersects.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new InstancedBufferAttribute(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}InstancedMesh.prototype.isInstancedMesh=!0;class LineBasicMaterial extends Material{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}LineBasicMaterial.prototype.isLineBasicMaterial=!0;const _start$1=new Vector3,_end$1=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$1=new Sphere;class Line extends Object3D{constructor(e=new BufferGeometry,t=new LineBasicMaterial){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position,i=[0];for(let e=1,t=r.count;e<t;e++)_start$1.fromBufferAttribute(r,e-1),_end$1.fromBufferAttribute(r,e),i[e]=i[e-1],i[e]+=_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(r,i){var e=this.geometry,t=this.matrixWorld,n=r.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere$1.copy(e.boundingSphere),_sphere$1.applyMatrix4(t),_sphere$1.radius+=n,!1!==r.ray.intersectsSphere(_sphere$1)){_inverseMatrix$1.copy(t).invert(),_ray$1.copy(r.ray).applyMatrix4(_inverseMatrix$1);var t=n/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t,o=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3,u=this.isLineSegments?2:1;if(e.isBufferGeometry){var d,p=e.index,m=e.attributes.position;if(null!==p)for(let e=Math.max(0,a.start),t=Math.min(p.count,a.start+a.count)-1;e<t;e+=u){var f=p.getX(e),g=p.getX(e+1),f=(o.fromBufferAttribute(m,f),l.fromBufferAttribute(m,g),_ray$1.distanceSqToSegment(o,l,h,c));s<f||(h.applyMatrix4(this.matrixWorld),(g=r.ray.origin.distanceTo(h))<r.near)||g>r.far||i.push({distance:g,point:c.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}else for(let e=Math.max(0,a.start),t=Math.min(m.count,a.start+a.count)-1;e<t;e+=u)o.fromBufferAttribute(m,e),l.fromBufferAttribute(m,e+1),s<_ray$1.distanceSqToSegment(o,l,h,c)||(h.applyMatrix4(this.matrixWorld),(d=r.ray.origin.distanceTo(h))<r.near)||d>r.far||i.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var i=t[r[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var n=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Line.prototype.isLine=!0;const _start=new Vector3,_end=new Vector3;class LineSegments extends Line{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position,i=[];for(let e=0,t=r.count;e<t;e+=2)_start.fromBufferAttribute(r,e),_end.fromBufferAttribute(r,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}LineSegments.prototype.isLineSegments=!0;class LineLoop extends Line{constructor(e,t){super(e,t),this.type="LineLoop"}}LineLoop.prototype.isLineLoop=!0;class PointsMaterial extends Material{constructor(e){super(),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}PointsMaterial.prototype.isPointsMaterial=!0;const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_position$2=new Vector3;class Points extends Object3D{constructor(e=new BufferGeometry,t=new PointsMaterial){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(r,i){var e=this.geometry,n=this.matrixWorld,t=r.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),_sphere.copy(e.boundingSphere),_sphere.applyMatrix4(n),_sphere.radius+=t,!1!==r.ray.intersectsSphere(_sphere)){_inverseMatrix.copy(n).invert(),_ray.copy(r.ray).applyMatrix4(_inverseMatrix);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){var o=e.index,l=e.attributes.position;if(null!==o)for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++){var c=o.getX(e);_position$2.fromBufferAttribute(l,c),testPoint(_position$2,c,s,n,r,i,this)}else for(let e=Math.max(0,a.start),t=Math.min(l.count,a.start+a.count);e<t;e++)_position$2.fromBufferAttribute(l,e),testPoint(_position$2,e,s,n,r,i,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var i=t[r[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var n=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function testPoint(e,t,r,i,n,a,s){var o=_ray.distanceSqToPoint(e);o<r&&(r=new Vector3,_ray.closestPointToPoint(e,r),r.applyMatrix4(i),(e=n.ray.origin.distanceTo(r))<n.near||e>n.far||a.push({distance:e,distanceToRay:Math.sqrt(o),point:r,index:t,face:null,object:s}))}Points.prototype.isPoints=!0;class VideoTexture extends Texture{constructor(t,e,r,i,n,a,s,o,l){super(t,e,r,i,n,a,s,o,l),this.format=void 0!==s?s:RGBFormat,this.minFilter=void 0!==a?a:LinearFilter,this.magFilter=void 0!==n?n:LinearFilter,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}VideoTexture.prototype.isVideoTexture=!0;class CompressedTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,c,h,u){super(null,a,s,o,l,c,i,n,h,u),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}CompressedTexture.prototype.isCompressedTexture=!0;class CanvasTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l){super(e,t,r,i,n,a,s,o,l),this.needsUpdate=!0}}CanvasTexture.prototype.isCanvasTexture=!0;class DepthTexture extends Texture{constructor(e,t,r,i,n,a,s,o,l,c){if((c=void 0!==c?c:DepthFormat)!==DepthFormat&&c!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,n,a,s,o,c,r=void 0===(r=void 0===r&&c===DepthFormat?UnsignedShortType:r)&&c===DepthStencilFormat?UnsignedInt248Type:r,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:NearestFilter,this.minFilter=void 0!==o?o:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}}DepthTexture.prototype.isDepthTexture=!0;class CircleGeometry extends BufferGeometry{constructor(r=1,i=8,n=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:r,segments:i,thetaStart:n,thetaLength:a},i=Math.max(3,i);var t=[],s=[],o=[],l=[],c=new Vector3,h=new Vector2;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=i;e++,t+=3){var u=n+e/i*a;c.x=r*Math.cos(u),c.y=r*Math.sin(u),s.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(s[t]/r+1)/2,h.y=(s[t+1]/r+1)/2,l.push(h.x,h.y)}for(let e=1;e<=i;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}static fromJSON(e){return new CircleGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class CylinderGeometry extends BufferGeometry{constructor(p=1,m=1,t=1,f=8,i=1,e=!1,g=0,v=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:p,radiusBottom:m,height:t,radialSegments:f,heightSegments:i,openEnded:e,thetaStart:g,thetaLength:v};const _=this,y=(f=Math.floor(f),i=Math.floor(i),[]),x=[],b=[],M=[];let w=0;const n=[],S=t/2;let T=0;{var a=new Vector3,s=new Vector3;let r=0;var o=(m-p)/t;for(let e=0;e<=i;e++){var l=[],c=e/i,h=c*(m-p)+p;for(let e=0;e<=f;e++){var u=e/f,d=u*v+g,E=Math.sin(d),d=Math.cos(d);s.x=h*E,s.y=-c*t+S,s.z=h*d,x.push(s.x,s.y,s.z),a.set(E,o,d).normalize(),b.push(a.x,a.y,a.z),M.push(u,1-c),l.push(w++)}n.push(l)}for(let t=0;t<f;t++)for(let e=0;e<i;e++){var A=n[e][t],L=n[e+1][t],C=n[e+1][t+1],R=n[e][t+1];y.push(A,L,R),y.push(L,C,R),r+=6}_.addGroup(T,r,0),T+=r}function r(t){var r=w,i=new Vector2,n=new Vector3;let a=0;var s=!0===t?p:m,o=!0===t?1:-1;for(let e=1;e<=f;e++)x.push(0,S*o,0),b.push(0,o,0),M.push(.5,.5),w++;var l=w;for(let e=0;e<=f;e++){var c=e/f*v+g,h=Math.cos(c),c=Math.sin(c);n.x=s*c,n.y=S*o,n.z=s*h,x.push(n.x,n.y,n.z),b.push(0,o,0),i.x=.5*h+.5,i.y=.5*c*o+.5,M.push(i.x,i.y),w++}for(let e=0;e<f;e++){var u=r+e,d=l+e;!0===t?y.push(d,d+1,u):y.push(d+1,d,u),a+=3}_.addGroup(T,a,!0===t?1:2),T+=a}!1===e&&(0<p&&r(!0),0<m)&&r(!1),this.setIndex(y),this.setAttribute("position",new Float32BufferAttribute(x,3)),this.setAttribute("normal",new Float32BufferAttribute(b,3)),this.setAttribute("uv",new Float32BufferAttribute(M,2))}static fromJSON(e){return new CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ConeGeometry extends CylinderGeometry{constructor(e=1,t=1,r=8,i=1,n=!1,a=0,s=2*Math.PI){super(0,e,t,r,i,n,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:a,thetaLength:s}}static fromJSON(e){return new ConeGeometry(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class PolyhedronGeometry extends BufferGeometry{constructor(r,t,e=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:r,indices:t,radius:e,detail:i};const n=[],a=[];var G=i,s=new Vector3,o=new Vector3,l=new Vector3;for(let e=0;e<t.length;e+=3){D(t[e+0],s),D(t[e+1],o),D(t[e+2],l);{c=void 0;h=void 0;u=void 0;d=void 0;p=void 0;m=void 0;f=void 0;g=void 0;v=void 0;_=void 0;var c=s;var h=o;var u=l;var d=G;var p=d+1,m=[];for(let t=0;t<=p;t++){m[t]=[];var f=c.clone().lerp(u,t/p),g=h.clone().lerp(u,t/p),v=p-t;for(let e=0;e<=v;e++)0===e&&t===p?m[t][e]=f:m[t][e]=f.clone().lerp(g,e/v)}for(let t=0;t<p;t++)for(let e=0;e<2*(p-t)-1;e++){var _=Math.floor(e/2);e%2==0?(B(m[t][_+1]),B(m[t+1][_]),B(m[t][_])):(B(m[t][_+1]),B(m[t+1][_+1]),B(m[t+1][_]))}}}var V=e,y=new Vector3;for(let e=0;e<n.length;e+=3)y.x=n[e+0],y.y=n[e+1],y.z=n[e+2],y.normalize().multiplyScalar(V),n[e+0]=y.x,n[e+1]=y.y,n[e+2]=y.z;var x=new Vector3;for(let e=0;e<n.length;e+=3){x.x=n[e+0],x.y=n[e+1],x.z=n[e+2];var N=F(x)/2/Math.PI+.5,U=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(x)/Math.PI+.5;a.push(N,1-U)}var b=new Vector3,M=new Vector3,w=new Vector3,S=new Vector3,T=new Vector2,E=new Vector2,A=new Vector2;for(let e=0,t=0;e<n.length;e+=9,t+=6){b.set(n[e+0],n[e+1],n[e+2]),M.set(n[e+3],n[e+4],n[e+5]),w.set(n[e+6],n[e+7],n[e+8]),T.set(a[t+0],a[t+1]),E.set(a[t+2],a[t+3]),A.set(a[t+4],a[t+5]),S.copy(b).add(M).add(w).divideScalar(3);var L=F(S);I(T,t+0,b,L),I(E,t+2,M,L),I(A,t+4,w,L)}for(let e=0;e<a.length;e+=6){var C=a[e+0],R=a[e+2],P=a[e+4],O=Math.max(C,R,P),z=Math.min(C,R,P);.9<O&&z<.1&&(C<.2&&(a[e+0]+=1),R<.2&&(a[e+2]+=1),P<.2)&&(a[e+4]+=1)}function B(e){n.push(e.x,e.y,e.z)}function D(e,t){e*=3;t.x=r[0+e],t.y=r[1+e],t.z=r[2+e]}function I(e,t,r,i){i<0&&1===e.x&&(a[t]=e.x-1),0===r.x&&0===r.z&&(a[t]=i/2/Math.PI+.5)}function F(e){return Math.atan2(e.z,-e.x)}this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("normal",new Float32BufferAttribute(n.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(a,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new PolyhedronGeometry(e.vertices,e.indices,e.radius,e.details)}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2,i=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new DodecahedronGeometry(e.radius,e.detail)}}const _v0=new Vector3,_v1$1=new Vector3,_normal=new Vector3,_triangle=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry)console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else{var r,i,n=Math.pow(10,4),a=Math.cos(DEG2RAD*t),s=e.getIndex(),o=e.getAttribute("position"),l=(s||o).count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},p=[];for(let e=0;e<l;e+=3){s?(c[0]=s.getX(e),c[1]=s.getX(e+1),c[2]=s.getX(e+2)):(c[0]=e,c[1]=e+1,c[2]=e+2);var{a:m,b:f,c:g}=_triangle;if(m.fromBufferAttribute(o,c[0]),f.fromBufferAttribute(o,c[1]),g.fromBufferAttribute(o,c[2]),_triangle.getNormal(_normal),u[0]=`${Math.round(m.x*n)},${Math.round(m.y*n)},`+Math.round(m.z*n),u[1]=`${Math.round(f.x*n)},${Math.round(f.y*n)},`+Math.round(f.z*n),u[2]=`${Math.round(g.x*n)},${Math.round(g.y*n)},`+Math.round(g.z*n),u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let e=0;e<3;e++){var v=(e+1)%3,_=u[e],y=u[v],x=_triangle[h[e]],b=_triangle[h[v]],M=_+"_"+y,y=y+"_"+_;y in d&&d[y]?(_normal.dot(d[y].normal)<=a&&(p.push(x.x,x.y,x.z),p.push(b.x,b.y,b.z)),d[y]=null):M in d||(d[M]={index0:c[e],index1:c[v],normal:_normal.clone()})}}for(const w in d)d[w]&&({index0:r,index1:i}=d[w],_v0.fromBufferAttribute(o,r),_v1$1.fromBufferAttribute(o,i),p.push(_v0.x,_v0.y,_v0.z),p.push(_v1$1.x,_v1$1.y,_v1$1.z));this.setAttribute("position",new Float32BufferAttribute(p,3))}}}class Curve{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){var r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return r}getSpacedPoints(t=5){var r=[];for(let e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var r=[];let i,n=this.getPoint(0),a=0;r.push(0);for(let e=1;e<=t;e++)i=this.getPoint(e/t),a+=i.distanceTo(n),r.push(a),n=i;return this.cacheArcLengths=r}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var r=this.getLengths();let i=0;var n=r.length;let a,s=(a=t||e*r[n-1],0),o=n-1,l;for(;s<=o;)if((l=r[i=Math.floor(s+(o-s)/2)]-a)<0)s=i+1;else{if(!(0<l)){o=i;break}o=i-1}return r[i=o]===a?i/(n-1):(t=r[i],e=r[i+1],e=(a-t)/(e-t),(i+e)/(n-1))}getTangent(e,t){let r=e-1e-4,i=e+1e-4;r<0&&(r=0),1<i&&(i=1);var e=this.getPoint(r),n=this.getPoint(i),t=t||new(e.isVector2?Vector2:Vector3);return t.copy(n).sub(e).normalize(),t}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(r,e){var t=new Vector3,i=[],n=[],a=[],s=new Vector3,o=new Matrix4;for(let e=0;e<=r;e++){var l=e/r;i[e]=this.getTangentAt(l,new Vector3),i[e].normalize()}n[0]=new Vector3,a[0]=new Vector3;let c=Number.MAX_VALUE;var h,u=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);u<=c&&(c=u,t.set(1,0,0)),d<=c&&(c=d,t.set(0,1,0)),p<=c&&t.set(0,0,1),s.crossVectors(i[0],t).normalize(),n[0].crossVectors(i[0],s),a[0].crossVectors(i[0],n[0]);for(let e=1;e<=r;e++)n[e]=n[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON&&(s.normalize(),h=Math.acos(clamp(i[e-1].dot(i[e]),-1,1)),n[e].applyMatrix4(o.makeRotationAxis(s,h))),a[e].crossVectors(i[e],n[e]);if(!0===e){let t=Math.acos(clamp(n[0].dot(n[r]),-1,1));t/=r,0<i[0].dot(s.crossVectors(n[0],n[r]))&&(t=-t);for(let e=1;e<=r;e++)n[e].applyMatrix4(o.makeRotationAxis(i[e],t*e)),a[e].crossVectors(i[e],n[e])}return{tangents:i,normals:n,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class EllipseCurve extends Curve{constructor(e=0,t=0,r=1,i=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){var t=t||new Vector2,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(var n=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=n?0:r),!0!==this.aClockwise||n||(i===r?i=-r:i-=r);var a,s,n=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(n),l=this.aY+this.yRadius*Math.sin(n);return 0!==this.aRotation&&(e=Math.cos(this.aRotation),n=Math.sin(this.aRotation),a=o-this.aX,s=l-this.aY,o=a*e-s*n+this.aX,l=a*n+s*e+this.aY),t.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){var e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}EllipseCurve.prototype.isEllipseCurve=!0;class ArcCurve extends EllipseCurve{constructor(e,t,r,i,n,a){super(e,t,r,r,i,n,a),this.type="ArcCurve"}}function CubicPoly(){let n=0,a=0,s=0,o=0;function l(e,t,r,i){n=e,a=r,s=-3*e+3*t-2*r-i,o=2*e-2*t+r+i}return{initCatmullRom:function(e,t,r,i,n){l(t,r,n*(r-e),n*(i-t))},initNonuniformCatmullRom:function(e,t,r,i,n,a,s){e=(t-e)/n-(r-e)/(n+a)+(r-t)/a,n=(r-t)/a-(i-t)/(a+s)+(i-r)/s;l(t,r,e*=a,n*=a)},calc:function(e){var t=e*e,r=t*e;return n+a*e+s*t+o*r}}}ArcCurve.prototype.isArcCurve=!0;const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;class CatmullRomCurve3 extends Curve{constructor(e=[],t=!1,r="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=i}getPoint(i,e=new Vector3){var n=this.points,t=n.length,i=(t-(this.closed?0:1))*i;let r=Math.floor(i),a=i-r;this.closed?r+=0<r?0:(Math.floor(Math.abs(r)/t)+1)*t:0===a&&r===t-1&&(r=t-2,a=1);let s,o;s=this.closed||0<r?n[(r-1)%t]:(tmp.subVectors(n[0],n[1]).add(n[0]),tmp);var i=n[r%t],l=n[(r+1)%t];if(o=this.closed||r+2<t?n[(r+2)%t]:(tmp.subVectors(n[t-1],n[t-2]).add(n[t-1]),tmp),"centripetal"===this.curveType||"chordal"===this.curveType){n="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(i),n),t=Math.pow(i.distanceToSquared(l),n),r=Math.pow(l.distanceToSquared(o),n);t<1e-4&&(t=1),e<1e-4&&(e=t),r<1e-4&&(r=t),px.initNonuniformCatmullRom(s.x,i.x,l.x,o.x,e,t,r),py.initNonuniformCatmullRom(s.y,i.y,l.y,o.y,e,t,r),pz.initNonuniformCatmullRom(s.z,i.z,l.z,o.z,e,t,r)}else"catmullrom"===this.curveType&&(px.initCatmullRom(s.x,i.x,l.x,o.x,this.tension),py.initCatmullRom(s.y,i.y,l.y,o.y,this.tension),pz.initCatmullRom(s.z,i.z,l.z,o.z,this.tension));return e.set(px.calc(a),py.calc(a),pz.calc(a)),e}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push(i.clone())}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}toJSON(){var r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){var i=this.points[e];r.points.push(i.toArray())}return r.closed=this.closed,r.curveType=this.curveType,r.tension=this.tension,r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push((new Vector3).fromArray(i))}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}}function CatmullRom(e,t,r,i,n){var t=.5*(i-t),n=.5*(n-r),a=e*e;return(2*r-2*i+t+n)*(e*a)+(-3*r+3*i-2*t-n)*a+t*e+r}function QuadraticBezierP0(e,t){e=1-e;return e*e*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,i){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,i)}function CubicBezierP0(e,t){e=1-e;return e*e*e*t}function CubicBezierP1(e,t){var r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,i,n){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,i)+CubicBezierP3(e,n)}CatmullRomCurve3.prototype.isCatmullRomCurve3=!0;class CubicBezierCurve extends Curve{constructor(e=new Vector2,t=new Vector2,r=new Vector2,i=new Vector2){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=i}getPoint(e,t=new Vector2){var r=this.v0,i=this.v1,n=this.v2,a=this.v3;return t.set(CubicBezier(e,r.x,i.x,n.x,a.x),CubicBezier(e,r.y,i.y,n.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}CubicBezierCurve.prototype.isCubicBezierCurve=!0;class CubicBezierCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3,r=new Vector3,i=new Vector3){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=i}getPoint(e,t=new Vector3){var r=this.v0,i=this.v1,n=this.v2,a=this.v3;return t.set(CubicBezier(e,r.x,i.x,n.x,a.x),CubicBezier(e,r.y,i.y,n.y,a.y),CubicBezier(e,r.z,i.z,n.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}CubicBezierCurve3.prototype.isCubicBezierCurve3=!0;class LineCurve extends Curve{constructor(e=new Vector2,t=new Vector2){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Vector2){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){t=t||new Vector2;return t.copy(this.v2).sub(this.v1).normalize(),t}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}LineCurve.prototype.isLineCurve=!0;class LineCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Vector3){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class QuadraticBezierCurve extends Curve{constructor(e=new Vector2,t=new Vector2,r=new Vector2){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Vector2){var r=this.v0,i=this.v1,n=this.v2;return t.set(QuadraticBezier(e,r.x,i.x,n.x),QuadraticBezier(e,r.y,i.y,n.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0;class QuadraticBezierCurve3 extends Curve{constructor(e=new Vector3,t=new Vector3,r=new Vector3){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Vector3){var r=this.v0,i=this.v1,n=this.v2;return t.set(QuadraticBezier(e,r.x,i.x,n.x),QuadraticBezier(e,r.y,i.y,n.y),QuadraticBezier(e,r.z,i.z,n.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0;class SplineCurve extends Curve{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Vector2){var r=this.points,e=(r.length-1)*e,i=Math.floor(e),e=e-i,n=r[0===i?i:i-1],a=r[i],s=r[i>r.length-2?r.length-1:i+1],r=r[i>r.length-3?r.length-1:i+2];return t.set(CatmullRom(e,n.x,a.x,s.x,r.x),CatmullRom(e,n.y,a.y,s.y,r.y)),t}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push(i.clone())}return this}toJSON(){var r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){var i=this.points[e];r.points.push(i.toArray())}return r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var i=r.points[e];this.points.push((new Vector2).fromArray(i))}return this}}SplineCurve.prototype.isSplineCurve=!0;var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});const Earcut={triangulate:function(o,l,c=2){var h=l&&l.length,u=h?l[0]*c:o.length;let d=linkedList(o,0,u,c,!0);var p=[];if(d&&d.next!==d.prev){let t,r,i,n,a,s,e;if(h&&(d=eliminateHoles(o,l,d,c)),o.length>80*c){t=i=o[0],r=n=o[1];for(let e=c;e<u;e+=c)a=o[e],s=o[e+1],a<t&&(t=a),s<r&&(r=s),a>i&&(i=a),s>n&&(n=s);e=0!==(e=Math.max(i-t,n-r))?1/e:0}earcutLinked(d,p,c,t,r,e)}return p}};function linkedList(e,t,r,i,n){let a,s;if(n===0<signedArea(e,t,r,i))for(a=t;a<r;a+=i)s=insertNode(a,e[a],e[a+1],s);else for(a=r-i;a>=t;a-=i)s=insertNode(a,e[a],e[a+1],s);return s&&equals(s,s.next)&&(removeNode(s),s=s.next),s}function filterPoints(e,t){if(!e)return e;t=t||e;let r=e,i;do{if(i=!1,r.steiner||!equals(r,r.next)&&0!==area(r.prev,r,r.next))r=r.next;else{if(removeNode(r),(r=t=r.prev)===r.next)break;i=!0}}while(i||r!==t);return t}function earcutLinked(i,n,a,s,o,l,c){if(i){!c&&l&&indexCurve(i,s,o,l);let e=i,t,r;for(;i.prev!==i.next;)if(t=i.prev,r=i.next,l?isEarHashed(i,s,o,l):isEar(i))n.push(t.i/a),n.push(i.i/a),n.push(r.i/a),removeNode(i),i=r.next,e=r.next;else if((i=r)===e){c?1===c?earcutLinked(i=cureLocalIntersections(filterPoints(i),n,a),n,a,s,o,l,2):2===c&&splitEarcut(i,n,a,s,o,l):earcutLinked(filterPoints(i),n,a,s,o,l,1);break}}}function isEar(e){var t=e.prev,r=e,i=e.next;if(0<=area(t,r,i))return!1;let n=e.next.next;for(;n!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,i.x,i.y,n.x,n.y)&&0<=area(n.prev,n,n.next))return!1;n=n.next}return!0}function isEarHashed(e,t,r,i){var n=e.prev,a=e,s=e.next;if(0<=area(n,a,s))return!1;var o=(n.x<a.x?n.x<s.x?n:s:a.x<s.x?a:s).x,l=(n.y<a.y?n.y<s.y?n:s:a.y<s.y?a:s).y,c=(n.x>a.x?n.x>s.x?n:s:a.x>s.x?a:s).x,h=(n.y>a.y?n.y>s.y?n:s:a.y>s.y?a:s).y,u=zOrder(o,l,t,r,i),d=zOrder(c,h,t,r,i);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=area(p.prev,p,p.next))return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=area(m.prev,m,m.next))return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=area(p.prev,p,p.next))return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&pointInTriangle(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=area(m.prev,m,m.next))return!1;m=m.nextZ}return!0}function cureLocalIntersections(e,t,r){let i=e;do{var n=i.prev,a=i.next.next;!equals(n,a)&&intersects(n,i,i.next,a)&&locallyInside(n,a)&&locallyInside(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),removeNode(i),removeNode(i.next),i=e=a),i=i.next}while(i!==e);return filterPoints(i)}function splitEarcut(e,t,r,i,n,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){var o;if(s.i!==e.i&&isValidDiagonal(s,e))return o=splitPolygon(s,e),s=filterPoints(s,s.next),o=filterPoints(o,o.next),earcutLinked(s,t,r,i,n,a),void earcutLinked(o,t,r,i,n,a);e=e.next}}while((s=s.next)!==e)}function eliminateHoles(e,t,r,i){var n=[];let a,s,o,l,c;for(a=0,s=t.length;a<s;a++)o=t[a]*i,l=a<s-1?t[a+1]*i:e.length,(c=linkedList(e,o,l,i,!1))===c.next&&(c.steiner=!0),n.push(getLeftmost(c));for(n.sort(compareX),a=0;a<n.length;a++)eliminateHole(n[a],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){(t=findHoleBridge(e,t))&&(e=splitPolygon(t,e),filterPoints(t,t.next),filterPoints(e,e.next))}function findHoleBridge(r,e){let i=e;var n=r.x,a=r.y;let s=-1/0,o;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var t=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>s){if((s=t)===n){if(a===i.y)return i;if(a===i.next.y)return i.next}o=i.x<i.next.x?i:i.next}}}while((i=i.next)!==e);if(!o)return null;if(n!==s){var l=o,c=o.x,h=o.y;let e=1/0,t;for(i=o;n>=i.x&&i.x>=c&&n!==i.x&&pointInTriangle(a<h?n:s,a,c,h,a<h?s:n,a,i.x,i.y)&&(t=Math.abs(a-i.y)/(n-i.x),locallyInside(i,r))&&(t<e||t===e&&(i.x>o.x||i.x===o.x&&sectorContainsSector(o,i)))&&(o=i,e=t),(i=i.next)!==l;);}return o}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,r,i){let n=e;for(;null===n.z&&(n.z=zOrder(n.x,n.y,t,r,i)),n.prevZ=n.prev,n.nextZ=n.next,(n=n.next)!==e;);n.prevZ.nextZ=null,n.prevZ=null,sortLinked(n)}function sortLinked(e){let t,r,i,n,a,s,o,l,c=1;do{for(r=e,e=null,a=null,s=0;r;){for(s++,i=r,o=0,t=0;t<c&&(o++,i=i.nextZ);t++);for(l=c;0<o||0<l&&i;)0!==o&&(0===l||!i||r.z<=i.z)?(r=(n=r).nextZ,o--):(i=(n=i).nextZ,l--),a?a.nextZ=n:e=n,n.prevZ=a,a=n;r=i}}while(a.nextZ=null,c*=2,1<s);return e}function zOrder(e,t,r,i,n){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*n)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*n)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,r=e;for(;(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),(t=t.next)!==e;);return r}function pointInTriangle(e,t,r,i,n,a,s,o){return 0<=(n-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(i-o)-(r-s)*(t-o)&&0<=(r-s)*(a-o)-(n-s)*(i-o)}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&0<area(e.prev,e,e.next)&&0<area(t.prev,t,t.next))}function area(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,i){var n=sign(area(e,t,r)),a=sign(area(e,t,i)),s=sign(area(r,i,e)),o=sign(area(r,i,t));return n!==a&&s!==o||!!(0===n&&onSegment(e,r,t)||0===a&&onSegment(e,i,t)||0===s&&onSegment(r,e,i)||0===o&&onSegment(r,t,i))}function onSegment(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function sign(e){return 0<e?1:e<0?-1:0}function intersectsPolygon(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0}while((r=r.next)!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?0<=area(e,t,e.next)&&0<=area(e,e.prev,t):area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let r=e,i=!1;for(var n=(e.x+t.x)/2,a=(e.y+t.y)/2;r.y>a!=r.next.y>a&&r.next.y!==r.y&&n<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(i=!i),(r=r.next)!==e;);return i}function splitPolygon(e,t){var r=new Node(e.i,e.x,e.y),i=new Node(t.i,t.x,t.y),n=e.next,a=t.prev;return(e.next=t).prev=e,(r.next=n).prev=r,(i.next=r).prev=i,(a.next=i).prev=a,i}function insertNode(e,t,r,i){e=new Node(e,t,r);return i?(e.next=i.next,(e.prev=i).next.prev=e,i.next=e):(e.prev=e).next=e,e}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(r,i,n,a){let s=0;for(let e=i,t=n-a;e<n;e+=a)s+=(r[t]-r[e])*(r[e+1]+r[t+1]),t=e;return s}class ShapeUtils{static area(r){var i=r.length;let n=0;for(let e=i-1,t=0;t<i;e=t++)n+=r[e].x*r[t].y-r[t].x*r[e].y;return.5*n}static isClockWise(e){return ShapeUtils.area(e)<0}static triangulateShape(e,t){var r=[],i=[],n=[];removeDupEndPts(e),addContour(r,e);let a=e.length;t.forEach(removeDupEndPts);for(let e=0;e<t.length;e++)i.push(a),a+=t[e].length,addContour(r,t[e]);var s=Earcut.triangulate(r,i);for(let e=0;e<s.length;e+=3)n.push(s.slice(e,e+3));return n}}function removeDupEndPts(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function addContour(t,r){for(let e=0;e<r.length;e++)t.push(r[e].x),t.push(r[e].y)}class ExtrudeGeometry extends BufferGeometry{constructor(r,Q){super(),this.type="ExtrudeGeometry",this.parameters={shapes:r,options:Q},r=Array.isArray(r)?r:[r];const K=this,ee=[],te=[];for(let e=0,t=r.length;e<t;e++)!function(e){const i=[],G=void 0!==Q.curveSegments?Q.curveSegments:12,p=void 0!==Q.steps?Q.steps:1;let r=void 0!==Q.depth?Q.depth:100,s=void 0===Q.bevelEnabled||Q.bevelEnabled,t=void 0!==Q.bevelThickness?Q.bevelThickness:6,n=void 0!==Q.bevelSize?Q.bevelSize:t-2,a=void 0!==Q.bevelOffset?Q.bevelOffset:0,m=void 0!==Q.bevelSegments?Q.bevelSegments:3;const o=Q.extrudePath,V=void 0!==Q.UVGenerator?Q.UVGenerator:WorldUVGenerator;void 0!==Q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),r=Q.amount);let l,c=!1,h,u,d,f;o&&(l=o.getSpacedPoints(p),c=!0,s=!1,h=o.computeFrenetFrames(p,!1),u=new Vector3,d=new Vector3,f=new Vector3);s||(m=0,t=0,n=0,a=0);e=e.extractPoints(G);let g=e.shape;const v=e.holes,N=!ShapeUtils.isClockWise(g);if(N){g=g.reverse();for(let e=0,t=v.length;e<t;e++){var U=v[e];ShapeUtils.isClockWise(U)&&(v[e]=U.reverse())}}const _=ShapeUtils.triangulateShape(g,v),y=g;for(let e=0,t=v.length;e<t;e++){var O=v[e];g=g.concat(O)}function x(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const b=g.length,M=_.length;function z(e,t,r){let i,n,a;var s=e.x-t.x,o=e.y-t.y,l=r.x-e.x,c=r.y-e.y,h=s*s+o*o;if(Math.abs(s*c-o*l)>Number.EPSILON){var u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-o/u,t=t.y+s/u,u=((r.x-c/d-p)*c-(r.y+l/d-t)*l)/(s*c-o*l),r=(i=p+s*u-e.x,n=t+o*u-e.y,i*i+n*n);if(r<=2)return new Vector2(i,n);a=Math.sqrt(r/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),a=e?(i=-o,n=s,Math.sqrt(h)):(i=s,n=o,Math.sqrt(h/2))}return new Vector2(i/a,n/a)}var w=[];for(let e=0,t=y.length,r=t-1,i=e+1;e<t;e++,r++,i++)r===t&&(r=0),i===t&&(i=0),w[e]=z(y[e],y[r],y[i]);var S=[];let T,E=w.concat();for(let e=0,t=v.length;e<t;e++){var A=v[e];T=[];for(let e=0,t=A.length,r=t-1,i=e+1;e<t;e++,r++,i++)r===t&&(r=0),i===t&&(i=0),T[e]=z(A[e],A[r],A[i]);S.push(T),E=E.concat(T)}for(let e=0;e<m;e++){var H=e/m,k=t*Math.cos(H*Math.PI/2);const L=n*Math.sin(H*Math.PI/2)+a;for(let e=0,t=y.length;e<t;e++){var W=x(y[e],w[e],L);B(W.x,W.y,-k)}for(let e=0,t=v.length;e<t;e++){var j=v[e];T=S[e];for(let e=0,t=j.length;e<t;e++){var q=x(j[e],T[e],L);B(q.x,q.y,-k)}}}const L=n+a;for(let e=0;e<b;e++){var C=s?x(g[e],E[e],L):g[e];c?(d.copy(h.normals[0]).multiplyScalar(C.x),u.copy(h.binormals[0]).multiplyScalar(C.y),f.copy(l[0]).add(d).add(u),B(f.x,f.y,f.z)):B(C.x,C.y,0)}for(let t=1;t<=p;t++)for(let e=0;e<b;e++){var R=s?x(g[e],E[e],L):g[e];c?(d.copy(h.normals[t]).multiplyScalar(R.x),u.copy(h.binormals[t]).multiplyScalar(R.y),f.copy(l[t]).add(d).add(u),B(f.x,f.y,f.z)):B(R.x,R.y,r/p*t)}for(let e=m-1;0<=e;e--){var $=e/m,X=t*Math.cos($*Math.PI/2);const L=n*Math.sin($*Math.PI/2)+a;for(let e=0,t=y.length;e<t;e++){var Y=x(y[e],w[e],L);B(Y.x,Y.y,r+X)}for(let e=0,t=v.length;e<t;e++){var Z=v[e];T=S[e];for(let e=0,t=Z.length;e<t;e++){var P=x(Z[e],T[e],L);c?B(P.x,P.y+l[p-1].y,l[p-1].x+X):B(P.x,P.y,r+X)}}}function J(e,i){let t=e.length;for(;0<=--t;){var n=t;let r=t-1;r<0&&(r=e.length-1);for(let e=0,t=p+2*m;e<t;e++){var a=b*e,s=b*(e+1),o=i+r+a,l=i+r+s,c=(d=u=h=c=void 0,i+n+a),h=o,u=l,d=i+n+s;I(c),I(h),I(d),I(h),I(u),I(d),c=ee.length/3,F((h=V.generateSideWallUV(K,ee,c-6,c-3,c-2,c-1))[0]),F(h[1]),F(h[3]),F(h[1]),F(h[2]),F(h[3])}}}function B(e,t,r){i.push(e),i.push(t),i.push(r)}function D(e,t,r){I(e),I(t),I(r);e=ee.length/3,t=V.generateTopUV(K,ee,e-3,e-2,e-1);F(t[0]),F(t[1]),F(t[2])}function I(e){ee.push(i[3*e+0]),ee.push(i[3*e+1]),ee.push(i[3*e+2])}function F(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*b;for(let e=0;e<M;e++){var r=_[e];D(r[2]+t,r[1]+t,r[0]+t)}e=p+2*m,t=b*e;for(let e=0;e<M;e++){var i=_[e];D(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<M;e++){var n=_[e];D(n[2],n[1],n[0])}for(let e=0;e<M;e++){var a=_[e];D(a[0]+b*p,a[1]+b*p,a[2]+b*p)}}K.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let r=0;J(y,r),r+=y.length;for(let e=0,t=v.length;e<t;e++){var i=v[e];J(i,r),r+=i.length}K.addGroup(e,ee.length/3-e,1)}()}(r[e]);this.setAttribute("position",new Float32BufferAttribute(ee,3)),this.setAttribute("uv",new Float32BufferAttribute(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON();return toJSON$1(this.parameters.shapes,this.parameters.options,e)}static fromJSON(r,i){var n=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=i[r.shapes[e]];n.push(a)}var e=r.options.extrudePath;return void 0!==e&&(r.options.extrudePath=(new Curves[e.type]).fromJSON(e)),new ExtrudeGeometry(n,r.options)}}const WorldUVGenerator={generateTopUV:function(e,t,r,i,n){var a=t[3*r],r=t[3*r+1],s=t[3*i],i=t[3*i+1],o=t[3*n],t=t[3*n+1];return[new Vector2(a,r),new Vector2(s,i),new Vector2(o,t)]},generateSideWallUV:function(e,t,r,i,n,a){var s=t[3*r],o=t[3*r+1],r=t[3*r+2],l=t[3*i],c=t[3*i+1],i=t[3*i+2],h=t[3*n],u=t[3*n+1],n=t[3*n+2],d=t[3*a],p=t[3*a+1],t=t[3*a+2];return Math.abs(o-c)<Math.abs(s-l)?[new Vector2(s,1-r),new Vector2(l,1-i),new Vector2(h,1-n),new Vector2(d,1-t)]:[new Vector2(o,1-r),new Vector2(c,1-i),new Vector2(u,1-n),new Vector2(p,1-t)]}};function toJSON$1(r,e,i){if(i.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var n=r[e];i.shapes.push(n.uuid)}else i.shapes.push(r.uuid);return void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}class IcosahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new IcosahedronGeometry(e.radius,e.detail)}}class LatheGeometry extends BufferGeometry{constructor(r,i=12,e=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:r,segments:i,phiStart:e,phiLength:n},i=Math.floor(i),n=clamp(n,0,2*Math.PI);var a=[],s=[],o=[],l=1/i,c=new Vector3,h=new Vector2;for(let t=0;t<=i;t++){var u=e+t*l*n,d=Math.sin(u),p=Math.cos(u);for(let e=0;e<=r.length-1;e++)c.x=r[e].x*d,c.y=r[e].y,c.z=r[e].x*p,s.push(c.x,c.y,c.z),h.x=t/i,h.y=e/(r.length-1),o.push(h.x,h.y)}for(let t=0;t<i;t++)for(let e=0;e<r.length-1;e++){var m=e+t*r.length,f=m+r.length,g=m+r.length+1,v=m+1;a.push(m,f,v),a.push(f,g,v)}if(this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),this.computeVertexNormals(),n===2*Math.PI){var _=this.attributes.normal.array,y=new Vector3,x=new Vector3,b=new Vector3,M=i*r.length*3;for(let e=0,t=0;e<r.length;e++,t+=3)y.x=_[t+0],y.y=_[t+1],y.z=_[t+2],x.x=_[M+t+0],x.y=_[M+t+1],x.z=_[M+t+2],b.addVectors(y,x).normalize(),_[t+0]=_[M+t+0]=b.x,_[t+1]=_[M+t+1]=b.y,_[t+2]=_[M+t+2]=b.z}}static fromJSON(e){return new LatheGeometry(e.points,e.segments,e.phiStart,e.phiLength)}}class OctahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new OctahedronGeometry(e.radius,e.detail)}}class ParametricGeometry extends BufferGeometry{constructor(t,r,i){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:r,stacks:i};var n=[],a=[],s=[],o=[],l=new Vector3,c=new Vector3,h=new Vector3,u=new Vector3,d=new Vector3,p=(t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter."),r+1);for(let e=0;e<=i;e++){var m=e/i;for(let e=0;e<=r;e++){var f=e/r;t(f,m,c),a.push(c.x,c.y,c.z),0<=f-1e-5?(t(f-1e-5,m,h),u.subVectors(c,h)):(t(1e-5+f,m,h),u.subVectors(h,c)),0<=m-1e-5?(t(f,m-1e-5,h),d.subVectors(c,h)):(t(f,1e-5+m,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(f,m)}}for(let t=0;t<i;t++)for(let e=0;e<r;e++){var g=t*p+e,v=t*p+e+1,_=(t+1)*p+e+1,y=(t+1)*p+e;n.push(g,v,y),n.push(v,_,y)}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2))}}class RingGeometry extends BufferGeometry{constructor(e=.5,t=1,r=8,i=1,n=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:a},r=Math.max(3,r);var s=[],o=[],l=[],c=[];let h=e;var u=(t-e)/(i=Math.max(1,i)),d=new Vector3,p=new Vector2;for(let e=0;e<=i;e++){for(let e=0;e<=r;e++){var m=n+e/r*a;d.x=h*Math.cos(m),d.y=h*Math.sin(m),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<i;e++){var f=e*(r+1);for(let e=0;e<r;e++){var g=e+f,v=g+r+1,_=g+r+2,y=g+1;s.push(g,v,y),s.push(v,_,y)}}this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}static fromJSON(e){return new RingGeometry(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ShapeGeometry extends BufferGeometry{constructor(t,d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let r=0,v=0;if(!1===Array.isArray(t))i(t);else for(let e=0;e<t.length;e++)i(t[e]),this.addGroup(r,v,e),r+=v,v=0;function i(e){var r=m.length/3,e=e.extractPoints(d);let i=e.shape;var n=e.holes;!1===ShapeUtils.isClockWise(i)&&(i=i.reverse());for(let e=0,t=n.length;e<t;e++){var a=n[e];!0===ShapeUtils.isClockWise(a)&&(n[e]=a.reverse())}var s=ShapeUtils.triangulateShape(i,n);for(let e=0,t=n.length;e<t;e++){var o=n[e];i=i.concat(o)}for(let e=0,t=i.length;e<t;e++){var l=i[e];m.push(l.x,l.y,0),f.push(0,0,1),g.push(l.x,l.y)}for(let e=0,t=s.length;e<t;e++){var c=s[e],h=c[0]+r,u=c[1]+r,c=c[2]+r;p.push(h,u,c),v+=3}}this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(m,3)),this.setAttribute("normal",new Float32BufferAttribute(f,3)),this.setAttribute("uv",new Float32BufferAttribute(g,2))}toJSON(){var e=super.toJSON();return toJSON(this.parameters.shapes,e)}static fromJSON(r,i){var n=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=i[r.shapes[e]];n.push(a)}return new ShapeGeometry(n,r.curveSegments)}}function toJSON(r,i){if(i.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var n=r[e];i.shapes.push(n.uuid)}else i.shapes.push(r.uuid);return i}class SphereGeometry extends BufferGeometry{constructor(r=1,i=32,n=16,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:r,widthSegments:i,heightSegments:n,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},i=Math.max(3,Math.floor(i)),n=Math.max(2,Math.floor(n));var c=Math.min(o+l,Math.PI);let h=0;var u=[],d=new Vector3,p=new Vector3,m=[],f=[],g=[],v=[];for(let e=0;e<=n;e++){var _=[],y=e/n;let t=0;0==e&&0==o?t=.5/i:e==n&&c==Math.PI&&(t=-.5/i);for(let e=0;e<=i;e++){var x=e/i;d.x=-r*Math.cos(a+x*s)*Math.sin(o+y*l),d.y=r*Math.cos(o+y*l),d.z=r*Math.sin(a+x*s)*Math.sin(o+y*l),f.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(x+t,1-y),_.push(h++)}u.push(_)}for(let t=0;t<n;t++)for(let e=0;e<i;e++){var b=u[t][e+1],M=u[t][e],w=u[t+1][e],S=u[t+1][e+1];(0!==t||0<o)&&m.push(b,M,S),(t!==n-1||c<Math.PI)&&m.push(M,w,S)}this.setIndex(m),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(g,3)),this.setAttribute("uv",new Float32BufferAttribute(v,2))}static fromJSON(e){return new SphereGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new TetrahedronGeometry(e.radius,e.detail)}}class TextGeometry extends ExtrudeGeometry{constructor(e,t={}){var r=t.font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new BufferGeometry;r=r.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class TorusGeometry extends BufferGeometry{constructor(r=1,i=.4,n=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:r,tube:i,radialSegments:n,tubularSegments:a,arc:s},n=Math.floor(n),a=Math.floor(a);var o=[],l=[],c=[],h=[],u=new Vector3,d=new Vector3,p=new Vector3;for(let t=0;t<=n;t++)for(let e=0;e<=a;e++){var m=e/a*s,f=t/n*Math.PI*2;d.x=(r+i*Math.cos(f))*Math.cos(m),d.y=(r+i*Math.cos(f))*Math.sin(m),d.z=i*Math.sin(f),l.push(d.x,d.y,d.z),u.x=r*Math.cos(m),u.y=r*Math.sin(m),p.subVectors(d,u).normalize(),c.push(p.x,p.y,p.z),h.push(e/a),h.push(t/n)}for(let t=1;t<=n;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,_=(a+1)*(t-1)+e,y=(a+1)*t+e;o.push(g,v,y),o.push(v,_,y)}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}static fromJSON(e){return new TorusGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class TorusKnotGeometry extends BufferGeometry{constructor(e=1,r=.4,i=64,n=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:r,tubularSegments:i,radialSegments:n,p:a,q:s},i=Math.floor(i),n=Math.floor(n);var o=[],l=[],c=[],h=[],u=new Vector3,d=new Vector3,p=new Vector3,m=new Vector3,f=new Vector3,g=new Vector3,v=new Vector3;for(let t=0;t<=i;++t){var _=t/i*a*Math.PI*2;T(_,a,s,e,p),T(.01+_,a,s,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let e=0;e<=n;++e){var y=e/n*Math.PI*2,x=-r*Math.cos(y),y=r*Math.sin(y);u.x=p.x+(x*v.x+y*f.x),u.y=p.y+(x*v.y+y*f.y),u.z=p.z+(x*v.z+y*f.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),c.push(d.x,d.y,d.z),h.push(t/i),h.push(e/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){var b=(n+1)*(t-1)+(e-1),M=(n+1)*t+(e-1),w=(n+1)*t+e,S=(n+1)*(t-1)+e;o.push(b,M,S),o.push(M,w,S)}function T(e,t,r,i,n){var a=Math.cos(e),s=Math.sin(e),r=r/t*e,t=Math.cos(r);n.x=i*(2+t)*.5*a,n.y=i*(2+t)*s*.5,n.z=i*Math.sin(r)*.5}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}static fromJSON(e){return new TorusKnotGeometry(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class TubeGeometry extends BufferGeometry{constructor(a,s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const c=a.computeFrenetFrames(s,e),h=(this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals,new Vector3),u=new Vector3,r=new Vector2;let d=new Vector3;const p=[],m=[],i=[],n=[];for(let e=0;e<s;e++)t(e);t(!1===e?s:0);for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)r.x=t/s,r.y=e/l,i.push(r.x,r.y);for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var f=(l+1)*(t-1)+(e-1),g=(l+1)*t+(e-1),v=(l+1)*t+e,_=(l+1)*(t-1)+e;n.push(f,g,_),n.push(g,v,_)}function t(e){d=a.getPointAt(e/s,d);var t=c.normals[e],r=c.binormals[e];for(let e=0;e<=l;e++){var i=e/l*Math.PI*2,n=Math.sin(i),i=-Math.cos(i);u.x=i*t.x+n*r.x,u.y=i*t.y+n*r.y,u.z=i*t.z+n*r.z,u.normalize(),m.push(u.x,u.y,u.z),h.x=d.x+o*u.x,h.y=d.y+o*u.y,h.z=d.z+o*u.z,p.push(h.x,h.y,h.z)}}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(i,2))}toJSON(){var e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new TubeGeometry((new Curves[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class WireframeGeometry extends BufferGeometry{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry)console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else{var i=[],n=new Set,a=new Vector3,s=new Vector3;if(null!==e.index){var o=e.attributes.position,l=e.index;let r=e.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:l.count,materialIndex:0}]:r).length;e<t;++e){var c=r[e],h=c.start;for(let t=h,e=h+c.count;t<e;t+=3)for(let e=0;e<3;e++){var u=l.getX(t+e),d=l.getX(t+(e+1)%3);a.fromBufferAttribute(o,u),s.fromBufferAttribute(o,d),!0===isUniqueEdge(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}}}else{var r=e.attributes.position;for(let t=0,e=r.count/3;t<e;t++)for(let e=0;e<3;e++){var p=3*t+e,m=3*t+(e+1)%3;a.fromBufferAttribute(r,p),s.fromBufferAttribute(r,m),!0===isUniqueEdge(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}}this.setAttribute("position",new Float32BufferAttribute(i,3))}}}function isUniqueEdge(e,t,r){var i=`${e.x},${e.y},${e.z}-${t.x},${t.y},`+t.z,t=`${t.x},${t.y},${t.z}-${e.x},${e.y},`+e.z;return!0!==r.has(i)&&!0!==r.has(t)&&(r.add(i,t),!0)}var Geometries=Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});class ShadowMaterial extends Material{constructor(e){super(),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}ShadowMaterial.prototype.isShadowMaterial=!0;class MeshStandardMaterial extends Material{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}MeshStandardMaterial.prototype.isMeshStandardMaterial=!0;class MeshPhysicalMaterial extends MeshStandardMaterial{#clearcoat=0;#transmission=0;constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return clamp(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenTint=new Color(0),this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new Color(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new Color(1,1,1),this.specularTintMap=null,this.setValues(e)}get clearcoat(){return this.#clearcoat}set clearcoat(e){0<this.#clearcoat!=0<e&&this.version++,this.#clearcoat=e}get transmission(){return this.#transmission}set transmission(e){0<this.#transmission!=0<e&&this.version++,this.#transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheenTint.copy(e.sheenTint),this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationTint.copy(e.attenuationTint),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularTint.copy(e.specularTint),this.specularTintMap=e.specularTintMap,this}}MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0;class MeshPhongMaterial extends Material{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}MeshPhongMaterial.prototype.isMeshPhongMaterial=!0;class MeshToonMaterial extends Material{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}MeshToonMaterial.prototype.isMeshToonMaterial=!0;class MeshNormalMaterial extends Material{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}MeshNormalMaterial.prototype.isMeshNormalMaterial=!0;class MeshLambertMaterial extends Material{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}MeshLambertMaterial.prototype.isMeshLambertMaterial=!0;class MeshMatcapMaterial extends Material{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0;class LineDashedMaterial extends LineBasicMaterial{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}LineDashedMaterial.prototype.isLineDashedMaterial=!0;var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={arraySlice:function(e,t,r){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(r){var t=r.length,i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(e,t){return r[e]-r[t]}),i},sortedArray:function(r,i,n){var a=r.length,s=new r.constructor(a);for(let e=0,t=0;t!==a;++e){var o=n[e]*i;for(let e=0;e!==i;++e)s[t++]=r[o+e]}return s},flattenJSON:function(t,r,i,n){let a=1,s=t[0];for(;void 0!==s&&void 0===s[n];)s=t[a++];if(void 0!==s){let e=s[n];if(void 0!==e)if(Array.isArray(e))for(;void 0!==(e=s[n])&&(r.push(s.time),i.push.apply(i,e)),void 0!==(s=t[a++]););else if(void 0!==e.toArray)for(;void 0!==(e=s[n])&&(r.push(s.time),e.toArray(i,i.length)),void 0!==(s=t[a++]););else for(;void 0!==(e=s[n])&&(r.push(s.time),i.push(e)),void 0!==(s=t[a++]););}},subclip:function(e,t,r,i,n=30){var a=e.clone(),s=(a.name=t,[]);for(let e=0;e<a.tracks.length;++e){var o=a.tracks[e],l=o.getValueSize(),c=[],h=[];for(let t=0;t<o.times.length;++t){var u=o.times[t]*n;if(!(u<r||i<=u)){c.push(o.times[t]);for(let e=0;e<l;++e)h.push(o.values[t*l+e])}}0!==c.length&&(o.times=AnimationUtils.convertArray(c,o.times.constructor),o.values=AnimationUtils.convertArray(h,o.values.constructor),s.push(o))}a.tracks=s;let d=1/0;for(let e=0;e<a.tracks.length;++e)d>a.tracks[e].times[0]&&(d=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*d);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,r=t,i=30){var n=r.tracks.length,a=e/(i=i<=0?30:i);for(let e=0;e<n;++e){const g=r.tracks[e],v=g.ValueTypeName;if("bool"!==v&&"string"!==v){var s=t.tracks.find(function(e){return e.name===g.name&&e.ValueTypeName===v});if(void 0!==s){let e=0;var o=g.getValueSize();g.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=o/3);let t=0;var l,c,h,u=s.getValueSize(),d=(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=u/3),g.times.length-1);let r;r=a<=g.times[0]?(c=o-(l=e),AnimationUtils.arraySlice(g.values,l,c)):a>=g.times[d]?(c=(l=d*o+e)+o-e,AnimationUtils.arraySlice(g.values,l,c)):(d=g.createInterpolant(),h=o-(o=e),d.evaluate(a),AnimationUtils.arraySlice(d.resultBuffer,o,h)),"quaternion"===v&&(new Quaternion).fromArray(r).normalize().conjugate().toArray(r);var p=s.times.length;for(let e=0;e<p;++e){var m=e*u+t;if("quaternion"===v)Quaternion.multiplyQuaternionsFlat(s.values,m,r,0,s.values,m);else{var f=u-2*t;for(let e=0;e<f;++e)s.values[m+e]-=r[e]}}}}}return t.blendMode=AdditiveAnimationBlendMode,t}};class Interpolant{constructor(e,t,r,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(t){var r=this.parameterPositions;let i=this._cachedIndex,n=r[i],a=r[i-1];e:{t:{let e;r:{i:if(!(t<n)){for(var s=i+2;;){if(void 0===n){if(t<a)break i;return i=r.length,this._cachedIndex=i,this.afterEnd_(i-1,t,a)}if(i===s)break;if(a=n,t<(n=r[++i]))break t}e=r.length;break r}if(t>=a)break e;var o=r[1];t<o&&(i=2,a=o);for(var l=i-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===l)break;if(n=a,t>=(a=r[--i-1]))break t}e=i,i=0}for(;i<e;){var c=i+e>>>1;t<r[c]?e=c:i=1+c}if(n=r[i],void 0===(a=r[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=r.length,this._cachedIndex=i,this.afterEnd_(i-1,a,t)}this._cachedIndex=i,this.intervalChanged_(i,a,n)}return this.interpolate_(i,a,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){var t=this.resultBuffer,r=this.sampleValues,i=this.valueSize,n=e*i;for(let e=0;e!==i;++e)t[e]=r[n+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Interpolant.prototype.beforeStart_=Interpolant.prototype.copySampleValue_,Interpolant.prototype.afterEnd_=Interpolant.prototype.copySampleValue_;class CubicInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding}}intervalChanged_(e,t,r){var i=this.parameterPositions;let n=e-2,a=e+1,s=i[n],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:n=e,s=2*t-r;break;case WrapAroundEnding:n=i.length-2,s=t+i[n]-i[n+1];break;default:n=e,s=r}if(void 0===o)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:a=e,o=2*r-t;break;case WrapAroundEnding:a=1,o=r+i[1]-i[0];break;default:a=e-1,o=t}var l=.5*(r-t),c=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-r),this._offsetPrev=n*c,this._offsetNext=a*c}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,e=this._weightPrev,u=this._weightNext,r=(r-t)/(i-t),i=r*r,t=i*r,d=-e*t+2*e*i-e*r,p=(1+e)*t+(-1.5-2*e)*i+(-.5+e)*r+1,m=(-1-u)*t+(1.5+u)*i+.5*r,f=u*t-u*i;for(let e=0;e!==s;++e)n[e]=d*a[c+e]+p*a[l+e]+m*a[o+e]+f*a[h+e];return n}}class LinearInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=(r-t)/(i-t),h=1-c;for(let e=0;e!==s;++e)n[e]=a[l+e]*h+a[o+e]*c;return n}}class DiscreteInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class KeyframeTrack{constructor(e,t,r,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){var t=e.constructor;let r;return t.toJSON!==this.toJSON?r=t.toJSON(e):(r={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)},(t=e.getInterpolation())!==e.DefaultInterpolation&&(r.interpolation=t)),r.type=e.ValueTypeName,r}InterpolantFactoryMethodDiscrete(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrack:",r)}else this.createInterpolant=t;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}}getValueSize(){return this.values.length/this.times.length}shift(r){if(0!==r){var i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]+=r}return this}scale(r){if(1!==r){var i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]*=r}return this}trim(e,t){var r,i=this.times,n=i.length;let a=0,s=n-1;for(;a!==n&&i[a]<e;)++a;for(;-1!==s&&i[s]>t;)--s;return++s,0===a&&s===n||(a>=s&&(s=Math.max(s,1),a=s-1),r=this.getValueSize(),this.times=AnimationUtils.arraySlice(i,a,s),this.values=AnimationUtils.arraySlice(this.values,a*r,s*r)),this}validate(){let r=!0;var e=this.getValueSize(),t=(e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),r=!1),this.times),i=this.values,n=t.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),r=!1);let a=null;for(let e=0;e!==n;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),r=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),r=!1;break}a=s}if(void 0!==i&&AnimationUtils.isTypedArray(i))for(let e=0,t=i.length;e!==t;++e){var o=i[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),r=!1;break}}return r}optimize(){var r=AnimationUtils.arraySlice(this.times),i=AnimationUtils.arraySlice(this.values),n=this.getValueSize(),a=this.getInterpolation()===InterpolateSmooth,s=r.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=r[e];if(l!==r[e+1]&&(1!==e||l!==r[0]))if(a)t=!0;else{var c=e*n,h=c-n,u=c+n;for(let e=0;e!==n;++e){var d=i[c+e];if(d!==i[h+e]||d!==i[u+e]){t=!0;break}}}if(t){if(e!==o){r[o]=r[e];var p=e*n,m=o*n;for(let e=0;e!==n;++e)i[m+e]=i[p+e]}++o}}if(0<s){r[o]=r[s];for(let e=s*n,t=o*n,r=0;r!==n;++r)i[t+r]=i[e+r];++o}return o!==r.length?(this.times=AnimationUtils.arraySlice(r,0,o),this.values=AnimationUtils.arraySlice(i,0,o*n)):(this.times=r,this.values=i),this}clone(){var e=AnimationUtils.arraySlice(this.times,0),t=AnimationUtils.arraySlice(this.values,0),e=new this.constructor(this.name,e,t);return e.createInterpolant=this.createInterpolant,e}}KeyframeTrack.prototype.TimeBufferType=Float32Array,KeyframeTrack.prototype.ValueBufferType=Float32Array,KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName="bool",BooleanKeyframeTrack.prototype.ValueBufferType=Array,BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName="color";class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName="number";class QuaternionLinearInterpolant extends Interpolant{constructor(e,t,r,i){super(e,t,r,i)}interpolate_(e,t,r,i){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(r-t)/(i-t);let l=e*s;for(var c=l+s;l!==c;l+=4)Quaternion.slerpFlat(n,0,a,l-s,a,l,o);return n}}class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)}}QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion",QuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear,QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName="string",StringKeyframeTrack.prototype.ValueBufferType=Array,StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName="vector";class AnimationClip{constructor(e,t=-1,r,i=NormalAnimationBlendMode){this.name=e,this.tracks=r,this.duration=t,this.blendMode=i,this.uuid=generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){var r=[],i=e.tracks,n=1/(e.fps||1);for(let e=0,t=i.length;e!==t;++e)r.push(parseKeyframeTrack(i[e]).scale(n));var t=new this(e.name,e.duration,r,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){var r=[],i=e.tracks,e={name:e.name,duration:e.duration,tracks:r,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=i.length;e!==t;++e)r.push(KeyframeTrack.toJSON(i[e]));return e}static CreateFromMorphTargetSequence(e,i,n,a){var s=i.length,o=[];for(let r=0;r<s;r++){let e=[],t=[];e.push((r+s-1)%s,r,(r+1)%s),t.push(0,1,0);var l=AnimationUtils.getKeyframeOrder(e);e=AnimationUtils.sortedArray(e,1,l),t=AnimationUtils.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+i[r].name+"]",e,t).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let r=e;Array.isArray(e)||(r=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null}static CreateClipsFromMorphTargetSequences(r,e,t){var i={},n=/^([\w-]*?)([\d]+)$/;for(let e=0,t=r.length;e<t;e++){var a=r[e],s=a.name.match(n);if(s&&1<s.length){s=s[1];let e=i[s];e||(i[s]=e=[]),e.push(a)}}var o=[];for(const l in i)o.push(this.CreateFromMorphTargetSequence(l,i[l],e,t));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function r(e,t,r,i,n){var a,s;0!==r.length&&(a=[],s=[],AnimationUtils.flattenJSON(r,a,s,i),0!==a.length)&&n.push(new e(t,a,s))}var i=[],n=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;var l=e.hierarchy||[];for(let e=0;e<l.length;e++){var c=l[e].keys;if(c&&0!==c.length)if(c[0].morphTargets){var h={};let t;for(t=0;t<c.length;t++)if(c[t].morphTargets)for(let e=0;e<c[t].morphTargets.length;e++)h[c[t].morphTargets[e]]=-1;for(const f in h){var u=[],d=[];for(let e=0;e!==c[t].morphTargets.length;++e){var p=c[t];u.push(p.time),d.push(p.morphTarget===f?1:0)}i.push(new NumberKeyframeTrack(".morphTargetInfluence["+f+"]",u,d))}o=h.length*(a||1)}else{var m=".bones["+t[e].name+"]";r(VectorKeyframeTrack,m+".position",c,"pos",i),r(QuaternionKeyframeTrack,m+".quaternion",c,"rot",i),r(VectorKeyframeTrack,m+".scale",c,"scl",i)}}return 0===i.length?null:new this(n,o,i,s)}resetDuration(){let r=0;for(let e=0,t=this.tracks.length;e!==t;++e){var i=this.tracks[e];r=Math.max(r,i.times[i.times.length-1])}return this.duration=r,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){var t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t,r,i=getTrackTypeForValueTypeName(e.type);return void 0===e.times&&(t=[],r=[],AnimationUtils.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r),void 0!==i.parse?i.parse(e):new i(e.name,e.times,e.values,e.interpolation)}const Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class LoadingManager{constructor(e,t,r){const i=this;let n=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){s++,!1===n&&void 0!==i.onStart&&i.onStart(e,a,s),n=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,s),a===s&&(n=!1,void 0!==i.onLoad)&&i.onLoad()},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(r){for(let e=0,t=l.length;e<t;e+=2){var i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(r))return n}return null}}}const DefaultLoadingManager=new LoadingManager;class Loader{constructor(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(r,i){const n=this;return new Promise(function(e,t){n.load(r,e,i,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const loading={};class FileLoader extends Loader{constructor(e){super(e)}load(o,r,t,i){void 0===o&&(o=""),void 0!==this.path&&(o=this.path+o),o=this.manager.resolveURL(o);const l=this,e=Cache.get(o);if(void 0!==e)return l.manager.itemStart(o),setTimeout(function(){r&&r(e),l.manager.itemEnd(o)},0),e;if(void 0===loading[o]){var n=o.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(n){var a=n[1],s=!!n[2];let t=n[3];t=decodeURIComponent(t),s&&(t=atob(t));try{let e;var c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":var h=new Uint8Array(t.length);for(let e=0;e<t.length;e++)h[e]=t.charCodeAt(e);e="blob"===c?new Blob([h.buffer],{type:a}):h.buffer;break;case"document":var u=new DOMParser;e=u.parseFromString(t,a);break;case"json":e=JSON.parse(t);break;default:e=t}setTimeout(function(){r&&r(e),l.manager.itemEnd(o)},0)}catch(e){setTimeout(function(){i&&i(e),l.manager.itemError(o),l.manager.itemEnd(o)},0)}}else{loading[o]=[],loading[o].push({onLoad:r,onProgress:t,onError:i}),(e=new XMLHttpRequest).open("GET",o,!0),e.addEventListener("load",function(r){var i=this.response,n=loading[o];if(delete loading[o],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(o,i);for(let e=0,t=n.length;e<t;e++){var a=n[e];a.onLoad&&a.onLoad(i)}}else{for(let e=0,t=n.length;e<t;e++){var s=n[e];s.onError&&s.onError(r)}l.manager.itemError(o)}l.manager.itemEnd(o)},!1),e.addEventListener("progress",function(r){var i=loading[o];for(let e=0,t=i.length;e<t;e++){var n=i[e];n.onProgress&&n.onProgress(r)}},!1),e.addEventListener("error",function(r){var i=loading[o];delete loading[o];for(let e=0,t=i.length;e<t;e++){var n=i[e];n.onError&&n.onError(r)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),e.addEventListener("abort",function(r){var i=loading[o];delete loading[o];for(let e=0,t=i.length;e<t;e++){var n=i[e];n.onError&&n.onError(r)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const d in this.requestHeader)e.setRequestHeader(d,this.requestHeader[d]);e.send(null)}return l.manager.itemStart(o),e}loading[o].push({onLoad:r,onProgress:t,onError:i})}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class AnimationLoader extends Loader{constructor(e){super(e)}load(t,r,e,i){const n=this;var a=new FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(t){var r=[];for(let e=0;e<t.length;e++){var i=AnimationClip.parse(t[e]);r.push(i)}return r}}class CompressedTextureLoader extends Loader{constructor(e){super(e)}load(r,n,i,a){const s=this,o=[],l=new CompressedTexture,c=new FileLoader(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let h=0;if(Array.isArray(r))for(let e=0,t=r.length;e<t;++e)!function(t){c.load(r[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},6===(h+=1)&&(1===e.mipmapCount&&(l.minFilter=LinearFilter),l.image=o,l.format=e.format,l.needsUpdate=!0,n)&&n(l)},i,a)}(e);else c.load(r,function(e){var r=s.parse(e,!0);if(r.isCubemap){var i=r.mipmaps.length/r.mipmapCount;for(let t=0;t<i;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}l.image=o}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=LinearFilter),l.format=r.format,l.needsUpdate=!0,n&&n(l)},i,a);return l}}class ImageLoader extends Loader{constructor(e){super(e)}load(t,e,r,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=Cache.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){e&&e(a),n.manager.itemEnd(t)},0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),Cache.add(t,this),e&&e(this),n.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(e),n.manager.itemError(t),n.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(t),s.src=t,s}}class CubeTextureLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=new CubeTexture,s=new ImageLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<r.length;++e)!function(t){s.load(r[t],function(e){a.images[t]=e,6===++o&&(a.needsUpdate=!0,i)&&i(a)},void 0,n)}(e);return a}}class DataTextureLoader extends Loader{constructor(e){super(e)}load(e,t,r,i){const n=this,a=new DataTexture;var s=new FileLoader(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(n.withCredentials),s.load(e,function(e){e=n.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:ClampToEdgeWrapping,a.wrapT=void 0!==e.wrapT?e.wrapT:ClampToEdgeWrapping,a.magFilter=void 0!==e.magFilter?e.magFilter:LinearFilter,a.minFilter=void 0!==e.minFilter?e.minFilter:LinearFilter,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=LinearMipmapLinearFilter),1===e.mipmapCount&&(a.minFilter=LinearFilter),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t)&&t(a,e)},r,i),a}}class TextureLoader extends Loader{constructor(e){super(e)}load(t,r,e,i){const n=new Texture;var a=new ImageLoader(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(e){n.image=e;e=0<t.search(/\.jpe?g($|\?)/i)||0===t.search(/^data\:image\/jpeg/);n.format=e?RGBFormat:RGBAFormat,n.needsUpdate=!0,void 0!==r&&r(n)},e,i),n}}class CurvePath extends Curve{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))}getPoint(e){var t,r,i,n=e*this.getLength(),a=this.getCurveLengths();let s=0;for(;s<a.length;){if(a[s]>=n)return t=a[s]-n,i=(r=this.curves[s]).getLength(),r.getPointAt(0===i?0:1-t/i);s++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var r=[];let i=0;for(let e=0,t=this.curves.length;e<t;e++)i+=this.curves[e].getLength(),r.push(i);return this.cacheLengths=r}getSpacedPoints(t=40){var r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return this.autoClose&&r.push(r[0]),r}getPoints(r=12){var i=[];let n;for(let e=0,t=this.curves;e<t.length;e++){var a=t[e],s=a&&a.isEllipseCurve?2*r:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?r*a.points.length:r,o=a.getPoints(s);for(let e=0;e<o.length;e++){var l=o[e];n&&n.equals(l)||(i.push(l),n=l)}}return this.autoClose&&1<i.length&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(r){super.copy(r),this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var i=r.curves[e];this.curves.push(i.clone())}return this.autoClose=r.autoClose,this}toJSON(){var r=super.toJSON();r.autoClose=this.autoClose,r.curves=[];for(let e=0,t=this.curves.length;e<t;e++){var i=this.curves[e];r.curves.push(i.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.autoClose=r.autoClose,this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var i=r.curves[e];this.curves.push((new Curves[i.type]).fromJSON(i))}return this}}class Path extends CurvePath{constructor(e){super(),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}setFromPoints(r){this.moveTo(r[0].x,r[0].y);for(let e=1,t=r.length;e<t;e++)this.lineTo(r[e].x,r[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,i){e=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,i));return this.curves.push(e),this.currentPoint.set(r,i),this}bezierCurveTo(e,t,r,i,n,a){e=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,i),new Vector2(n,a));return this.curves.push(e),this.currentPoint.set(n,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new SplineCurve(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,i,n,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,r,i,n,a),this}absarc(e,t,r,i,n,a){return this.absellipse(e,t,r,r,i,n,a),this}ellipse(e,t,r,i,n,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,r,i,n,a,s,o),this}absellipse(e,t,r,i,n,a,s,o){e=new EllipseCurve(e,t,r,i,n,a,s,o),0<this.curves.length&&((t=e.getPoint(0)).equals(this.currentPoint)||this.lineTo(t.x,t.y)),this.curves.push(e),r=e.getPoint(1);return this.currentPoint.copy(r),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){var e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Shape extends Path{constructor(e){super(e),this.uuid=generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(r){var i=[];for(let e=0,t=this.holes.length;e<t;e++)i[e]=this.holes[e].getPoints(r);return i}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(r){super.copy(r),this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var i=r.holes[e];this.holes.push(i.clone())}return this}toJSON(){var r=super.toJSON();r.uuid=this.uuid,r.holes=[];for(let e=0,t=this.holes.length;e<t;e++){var i=this.holes[e];r.holes.push(i.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.uuid=r.uuid,this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var i=r.holes[e];this.holes.push((new Path).fromJSON(i))}return this}}class Light extends Object3D{constructor(e,t=1){super(),this.type="Light",this.color=new Color(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){e=super.toJSON(e);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}Light.prototype.isLight=!0;class HemisphereLight extends Light{constructor(e,t,r){super(e,r),this.type="HemisphereLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}copy(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}HemisphereLight.prototype.isHemisphereLight=!0;const _projScreenMatrix$1=new Matrix4,_lightPositionWorld$1=new Vector3,_lookTarget$1=new Vector3;class LightShadow{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){var t=this.camera,r=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(e.matrixWorld),t.position.copy(_lightPositionWorld$1),_lookTarget$1.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(_lookTarget$1),t.updateMatrixWorld(),_projScreenMatrix$1.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix$1),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,.5,500)),this.focus=1}updateMatrices(e){var t=this.camera,r=2*RAD2DEG*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;r===t.fov&&i===t.aspect&&n===t.far||(t.fov=r,t.aspect=i,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}SpotLightShadow.prototype.isSpotLightShadow=!0;class SpotLight extends Light{constructor(e,t,r=0,i=Math.PI/3,n=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.distance=r,this.angle=i,this.penumbra=n,this.decay=a,this.shadow=new SpotLightShadow}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}SpotLight.prototype.isSpotLight=!0;const _projScreenMatrix=new Matrix4,_lightPositionWorld=new Vector3,_lookTarget=new Vector3;class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}updateMatrices(e,t=0){var r=this.camera,i=this.matrix,n=e.distance||r.far;n!==r.far&&(r.far=n,r.updateProjectionMatrix()),_lightPositionWorld.setFromMatrixPosition(e.matrixWorld),r.position.copy(_lightPositionWorld),_lookTarget.copy(r.position),_lookTarget.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(_lookTarget),r.updateMatrixWorld(),i.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z),_projScreenMatrix.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix)}}PointLightShadow.prototype.isPointLightShadow=!0;class PointLight extends Light{constructor(e,t,r=0,i=1){super(e,t),this.type="PointLight",this.distance=r,this.decay=i,this.shadow=new PointLightShadow}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}PointLight.prototype.isPointLight=!0;class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,.5,500))}}DirectionalLightShadow.prototype.isDirectionalLightShadow=!0;class DirectionalLight extends Light{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}DirectionalLight.prototype.isDirectionalLight=!0;class AmbientLight extends Light{constructor(e,t){super(e,t),this.type="AmbientLight"}}AmbientLight.prototype.isAmbientLight=!0;class RectAreaLight extends Light{constructor(e,t,r=10,i=10){super(e,t),this.type="RectAreaLight",this.width=r,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){e=super.toJSON(e);return e.object.width=this.width,e.object.height=this.height,e}}RectAreaLight.prototype.isRectAreaLight=!0;class SphericalHarmonics3{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Vector3)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var r=e.x,i=e.y,e=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*i),t.addScaledVector(n[2],.488603*e),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],r*i*1.092548),t.addScaledVector(n[5],i*e*1.092548),t.addScaledVector(n[6],.315392*(3*e*e-1)),t.addScaledVector(n[7],r*e*1.092548),t.addScaledVector(n[8],.546274*(r*r-i*i)),t}getIrradianceAt(e,t){var r=e.x,i=e.y,e=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],1.023328*i),t.addScaledVector(n[2],1.023328*e),t.addScaledVector(n[3],1.023328*r),t.addScaledVector(n[4],.858086*r*i),t.addScaledVector(n[5],.858086*i*e),t.addScaledVector(n[6],.743125*e*e-.247708),t.addScaledVector(n[7],.858086*r*e),t.addScaledVector(n[8],.429043*(r*r-i*i)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,r){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],r);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,r){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],r);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,r=0){var i=this.coefficients;for(let e=0;e<9;e++)i[e].fromArray(t,r+3*e);return this}toArray(t=[],r=0){var i=this.coefficients;for(let e=0;e<9;e++)i[e].toArray(t,r+3*e);return t}static getBasisAt(e,t){var r=e.x,i=e.y,e=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*e,t[3]=.488603*r,t[4]=1.092548*r*i,t[5]=1.092548*i*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*r*e,t[8]=.546274*(r*r-i*i)}}SphericalHarmonics3.prototype.isSphericalHarmonics3=!0;class LightProbe extends Light{constructor(e=new SphericalHarmonics3,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){e=super.toJSON(e);return e.object.sh=this.sh.toArray(),e}}LightProbe.prototype.isLightProbe=!0;class MaterialLoader extends Loader{constructor(e){super(e),this.textures={}}load(t,r,e,i){const n=this;var a=new FileLoader(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(t){const r=this.textures;function e(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}var i=new Materials[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheenTint&&(i.sheenTint=(new Color).setHex(t.sheenTint)),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularTint&&void 0!==i.specularTint&&i.specularTint.setHex(t.specularTint),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationTint&&void 0!==i.attenuationTint&&i.attenuationTint.setHex(t.attenuationTint),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.format&&(i.format=t.format),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=0<t.vertexColors:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var n=t.uniforms[a];switch(i.uniforms[a]={},n.type){case"t":i.uniforms[a].value=e(n.value);break;case"c":i.uniforms[a].value=(new Color).setHex(n.value);break;case"v2":i.uniforms[a].value=(new Vector2).fromArray(n.value);break;case"v3":i.uniforms[a].value=(new Vector3).fromArray(n.value);break;case"v4":i.uniforms[a].value=(new Vector4).fromArray(n.value);break;case"m3":i.uniforms[a].value=(new Matrix3).fromArray(n.value);break;case"m4":i.uniforms[a].value=(new Matrix4).fromArray(n.value);break;default:i.uniforms[a].value=n.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=e(t.map)),void 0!==t.matcap&&(i.matcap=e(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new Vector2).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=e(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=e(t.specularIntensityMap)),void 0!==t.specularTintMap&&(i.specularTintMap=e(t.specularTintMap)),void 0!==t.envMap&&(i.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Vector2).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(i.transmissionMap=e(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=e(t.thicknessMap)),i}setTextures(e){return this.textures=e,this}}class LoaderUtils{static decodeText(r){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(r);let i="";for(let e=0,t=r.length;e<t;e++)i+=String.fromCharCode(r[e]);try{return decodeURIComponent(escape(i))}catch(e){return i}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){var e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}InstancedBufferGeometry.prototype.isInstancedBufferGeometry=!0;class BufferGeometryLoader extends Loader{constructor(e){super(e)}load(t,r,e,i){const n=this;var a=new FileLoader(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(t,function(e){try{r(n.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}},e,i)}parse(r){const i={},n={};function a(e,t){var r;return void 0!==i[t]?i[t]:(r=function(e,t){if(void 0!==n[t])return n[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return n[t]=e}(e,(e=e.interleavedBuffers[t]).buffer),r=getTypedArray(e.type,r),(r=new InterleavedBuffer(r,e.stride)).uuid=e.uuid,i[t]=r)}var s=new(r.isInstancedBufferGeometry?InstancedBufferGeometry:BufferGeometry),e=r.data.index,t=(void 0!==e&&(e=getTypedArray(e.type,e.array),s.setIndex(new BufferAttribute(e,1))),r.data.attributes);for(const v in t){var o,l=t[v];let e;e=l.isInterleavedBufferAttribute?(o=a(r.data,l.data),new InterleavedBufferAttribute(o,l.itemSize,l.offset,l.normalized)):(o=getTypedArray(l.type,l.array),new(l.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(o,l.itemSize,l.normalized)),void 0!==l.name&&(e.name=l.name),void 0!==l.usage&&e.setUsage(l.usage),void 0!==l.updateRange&&(e.updateRange.offset=l.updateRange.offset,e.updateRange.count=l.updateRange.count),s.setAttribute(v,e)}var c=r.data.morphAttributes;if(c)for(const _ in c){var h=c[_],u=[];for(let t=0,e=h.length;t<e;t++){var d,p=h[t];let e;e=p.isInterleavedBufferAttribute?(d=a(r.data,p.data),new InterleavedBufferAttribute(d,p.itemSize,p.offset,p.normalized)):(d=getTypedArray(p.type,p.array),new BufferAttribute(d,p.itemSize,p.normalized)),void 0!==p.name&&(e.name=p.name),u.push(e)}s.morphAttributes[_]=u}r.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var m=r.data.groups||r.data.drawcalls||r.data.offsets;if(void 0!==m)for(let e=0,t=m.length;e!==t;++e){var f=m[e];s.addGroup(f.start,f.count,f.materialIndex)}var g,e=r.data.boundingSphere;return void 0!==e&&(g=new Vector3,void 0!==e.center&&g.fromArray(e.center),s.boundingSphere=new Sphere(g,e.radius)),r.name&&(s.name=r.name),r.userData&&(s.userData=r.userData),s}}class ObjectLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=this;var t=""===this.path?LoaderUtils.extractUrlBase(r):this.path,t=(this.resourcePath=this.resourcePath||t,new FileLoader(this.manager));t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+r+".",e.message)}e=t.metadata;void 0===e||void 0===e.type||"geometry"===e.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+r):a.parse(t,i)},e,n)}async loadAsync(e,t){var r=""===this.path?LoaderUtils.extractUrlBase(e):this.path,r=(this.resourcePath=this.resourcePath||r,new FileLoader(this.manager)),r=(r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),await r.loadAsync(e,t)),t=JSON.parse(r),r=t.metadata;if(void 0===r||void 0===r.type||"geometry"===r.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return this.parseAsync(t)}parse(e,t){var r=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,i),n=this.parseImages(e.images,function(){void 0!==t&&t(o)}),a=this.parseTextures(e.textures,n),s=this.parseMaterials(e.materials,a);const o=this.parseObject(e.object,i,s,a,r);i=this.parseSkeletons(e.skeletons,o);if(this.bindSkeletons(o,i),void 0!==t){let e=!1;for(const l in n)if(n[l]instanceof HTMLImageElement){e=!0;break}!1===e&&t(o)}return o}async parseAsync(e){var t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,r),i=await this.parseImagesAsync(e.images),i=this.parseTextures(e.textures,i),n=this.parseMaterials(e.materials,i),r=this.parseObject(e.object,r,n,i,t),n=this.parseSkeletons(e.skeletons,r);return this.bindSkeletons(r,n),r}parseShapes(r){var i={};if(void 0!==r)for(let e=0,t=r.length;e<t;e++){var n=(new Shape).fromJSON(r[e]);i[n.uuid]=n}return i}parseSkeletons(r,e){var i={};const n={};if(e.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==r)for(let e=0,t=r.length;e<t;e++){var a=(new Skeleton).fromJSON(r[e],n);i[a.uuid]=a}return i}parseGeometries(r,i){var n={};if(void 0!==r){var a=new BufferGeometryLoader;for(let t=0,e=r.length;t<e;t++){let e;var s=r[t];switch(s.type){case"BufferGeometry":case"InstancedBufferGeometry":e=a.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:s.type in Geometries?e=Geometries[s.type].fromJSON(s,i):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${s.type}"`)}e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),!0===e.isBufferGeometry&&void 0!==s.userData&&(e.userData=s.userData),n[s.uuid]=e}}return n}parseMaterials(r,e){var i={},n={};if(void 0!==r){var a=new MaterialLoader;a.setTextures(e);for(let e=0,t=r.length;e<t;e++){var s=r[e];if("MultiMaterial"===s.type){var o=[];for(let e=0;e<s.materials.length;e++){var l=s.materials[e];void 0===i[l.uuid]&&(i[l.uuid]=a.parse(l)),o.push(i[l.uuid])}n[s.uuid]=o}else void 0===i[s.uuid]&&(i[s.uuid]=a.parse(s)),n[s.uuid]=i[s.uuid]}}return n}parseAnimations(t){var r={};if(void 0!==t)for(let e=0;e<t.length;e++){var i=t[e],i=AnimationClip.parse(i);r[i.uuid]=i}return r}parseImages(r,e){const i=this;var n={};let a;function s(e){var t,r;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:i.resourcePath+t,r=t,i.manager.itemStart(r),a.load(r,function(){i.manager.itemEnd(r)},void 0,function(){i.manager.itemError(r),i.manager.itemEnd(r)})):e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){e=new LoadingManager(e);(a=new ImageLoader(e)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){n[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var c=s(l[e]);null!==c&&(c instanceof HTMLImageElement?n[o.uuid].push(c):n[o.uuid].push(new DataTexture(c.data,c.width,c.height)))}}else{var h=s(o.url);null!==h&&(n[o.uuid]=h)}}}return n}async parseImagesAsync(r){const i=this;var n={};let a;async function s(e){var t;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:i.resourcePath+t,a.loadAsync(t)):e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){(a=new ImageLoader(this.manager)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){n[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var c=await s(l[e]);null!==c&&(c instanceof HTMLImageElement?n[o.uuid].push(c):n[o.uuid].push(new DataTexture(c.data,c.width,c.height)))}}else{var h=await s(o.url);null!==h&&(n[o.uuid]=h)}}}return n}parseTextures(r,i){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var a={};if(void 0!==r)for(let t=0,e=r.length;t<e;t++){var s=r[t];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===i[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let e;var o=i[s.image];Array.isArray(o)?(e=new CubeTexture(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new DataTexture(o.data,o.width,o.height):new Texture(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=n(s.mapping,TEXTURE_MAPPING)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=n(s.wrap[0],TEXTURE_WRAPPING),e.wrapT=n(s.wrap[1],TEXTURE_WRAPPING)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=n(s.minFilter,TEXTURE_FILTER)),void 0!==s.magFilter&&(e.magFilter=n(s.magFilter,TEXTURE_FILTER)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),a[s.uuid]=e}return a}parseObject(e,t,a,r,i){let n;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(r){if(void 0!==r){if(Array.isArray(r)){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),i.push(a[n])}return i}return void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),a[r]}}function l(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let c,h;switch(e.type){case"Scene":n=new Scene,void 0!==e.background&&(Number.isInteger(e.background)?n.background=new Color(e.background):n.background=l(e.background)),void 0!==e.environment&&(n.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":n=new DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":c=s(e.geometry),h=o(e.material),n=new SkinnedMesh(c,h),void 0!==e.bindMode&&(n.bindMode=e.bindMode),void 0!==e.bindMatrix&&n.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(n.skeleton=e.skeleton);break;case"Mesh":c=s(e.geometry),h=o(e.material),n=new Mesh(c,h);break;case"InstancedMesh":c=s(e.geometry),h=o(e.material);var u=e.count,d=e.instanceMatrix,p=e.instanceColor;(n=new InstancedMesh(c,h,u)).instanceMatrix=new InstancedBufferAttribute(new Float32Array(d.array),16),void 0!==p&&(n.instanceColor=new InstancedBufferAttribute(new Float32Array(p.array),p.itemSize));break;case"LOD":n=new LOD;break;case"Line":n=new Line(s(e.geometry),o(e.material));break;case"LineLoop":n=new LineLoop(s(e.geometry),o(e.material));break;case"LineSegments":n=new LineSegments(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":n=new Points(s(e.geometry),o(e.material));break;case"Sprite":n=new Sprite(o(e.material));break;case"Group":n=new Group;break;case"Bone":n=new Bone;break;default:n=new Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera)&&(n.shadow.camera=this.parseObject(e.shadow.camera)),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){var m=e.children;for(let e=0;e<m.length;e++)n.add(this.parseObject(m[e],t,a,r,i))}if(void 0!==e.animations){var f=e.animations;for(let e=0;e<f.length;e++){var g=f[e];n.animations.push(i[g])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);var v=e.levels;for(let e=0;e<v.length;e++){var _=v[e],y=n.getObjectByProperty("uuid",_.object);void 0!==y&&n.addLevel(y,_.distance)}}return n}bindSkeletons(e,r){0!==Object.keys(r).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=r[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};class ImageBitmapLoader extends Loader{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,r,e,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=Cache.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){r&&r(a),n.manager.itemEnd(t)},0),a;var s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(e){Cache.add(t,e),r&&r(e),n.manager.itemEnd(t)}).catch(function(e){i&&i(e),n.manager.itemError(t),n.manager.itemEnd(t)}),n.manager.itemStart(t)}}ImageBitmapLoader.prototype.isImageBitmapLoader=!0;class ShapePath{constructor(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,r,i){return this.currentPath.quadraticCurveTo(e,t,r,i),this}bezierCurveTo(e,t,r,i,n,a){return this.currentPath.bezierCurveTo(e,t,r,i,n,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(i,e){function t(r){var i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e],a=new Shape;a.curves=n.curves,i.push(a)}return i}var n=ShapeUtils.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return t(s);let o,l,c;var h=[];if(1===s.length)l=s[0],(c=new Shape).curves=l.curves,h.push(c);else{var u,d,p=!n(s[0].getPoints()),p=i?!p:p,m=[],f=[];let a=[],r=0;f[r]=void 0,a[r]=[];for(let e=0,t=s.length;e<t;e++)o=n(u=(l=s[e]).getPoints()),(i?!o:o)?(!p&&f[r]&&r++,f[r]={s:new Shape,p:u},f[r].s.curves=l.curves,p&&r++,a[r]=[]):a[r].push({h:l,p:u[0]});if(!f[0])return t(s);if(1<f.length){let n=!1;var g=[];for(let e=0,t=f.length;e<t;e++)m[e]=[];for(let i=0,e=f.length;i<e;i++){var v=a[i];for(let r=0;r<v.length;r++){var _=v[r];let t=!0;for(let e=0;e<f.length;e++)!function(s,o){var e=o.length;let l=!1;for(let n=e-1,a=0;a<e;n=a++){let e=o[n],t=o[a],r=t.x-e.x,i=t.y-e.y;if(Math.abs(i)>Number.EPSILON){if(i<0&&(e=o[a],r=-r,t=o[n],i=-i),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var c=i*(s.x-e.x)-r*(s.y-e.y);if(0==c)return 1;c<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(_.p,f[e].p)||(i!==e&&g.push({froms:i,tos:e,hole:r}),t?(t=!1,m[e].push(_)):n=!0);t&&m[i].push(_)}}0<g.length&&(n||(a=m))}for(let r=0,e=f.length;r<e;r++){c=f[r].s,h.push(c);for(let e=0,t=(d=a[r]).length;e<t;e++)c.holes.push(d[e].h)}}return h}}class Font{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){var r=[],i=createPaths(e,t,this.data);for(let e=0,t=i.length;e<t;e++)Array.prototype.push.apply(r,i[e].toShapes());return r}}function createPaths(e,t,r){var i=Array.from(e),n=t/r.resolution,a=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*n,s=[];let o=0,l=0;for(let e=0;e<i.length;e++){var c=i[e];"\n"===c?(o=0,l-=a):(c=createPath(c,n,o,l,r),o+=c.offsetX,s.push(c.path))}return s}function createPath(e,h,u,d,t){var p=t.glyphs[e]||t.glyphs["?"];if(p){var m=new ShapePath;let r,i,n,a,s,o,l,c;if(p.o){var f=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let e=0,t=f.length;e<t;)switch(f[e++]){case"m":r=f[e++]*h+u,i=f[e++]*h+d,m.moveTo(r,i);break;case"l":r=f[e++]*h+u,i=f[e++]*h+d,m.lineTo(r,i);break;case"q":n=f[e++]*h+u,a=f[e++]*h+d,s=f[e++]*h+u,o=f[e++]*h+d,m.quadraticCurveTo(s,o,n,a);break;case"b":n=f[e++]*h+u,a=f[e++]*h+d,s=f[e++]*h+u,o=f[e++]*h+d,l=f[e++]*h+u,c=f[e++]*h+d,m.bezierCurveTo(s,o,l,c,n,a)}}return{offsetX:p.ha*h,path:m}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+t.familyName+".")}Font.prototype.isFont=!0;class FontLoader extends Loader{constructor(e){super(e)}load(e,i,t,r){const n=this;var a=new FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(t){let r;try{r=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(t.substring(65,t.length-2))}t=n.parse(r);i&&i(t)},t,r)}parse(e){return new Font(e)}}let _context;const AudioContext={getContext:function(){return _context=void 0===_context?new(window.AudioContext||window.webkitAudioContext):_context},setContext:function(e){_context=e}};class AudioLoader extends Loader{constructor(e){super(e)}load(r,i,e,n){const a=this;var t=new FileLoader(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){try{var t=e.slice(0);AudioContext.getContext().decodeAudioData(t,function(e){i(e)})}catch(e){n?n(e):console.error(e),a.manager.itemError(r)}},e,n)}}class HemisphereLightProbe extends LightProbe{constructor(e,t,r=1){super(void 0,r);var r=(new Color).set(e),e=(new Color).set(t),t=new Vector3(r.r,r.g,r.b),r=new Vector3(e.r,e.g,e.b),e=Math.sqrt(Math.PI),i=e*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(r).multiplyScalar(e),this.sh.coefficients[1].copy(t).sub(r).multiplyScalar(i)}}HemisphereLightProbe.prototype.isHemisphereLightProbe=!0;class AmbientLightProbe extends LightProbe{constructor(e,t=1){super(void 0,t);t=(new Color).set(e);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}}AmbientLightProbe.prototype.isAmbientLightProbe=!0;const _eyeRight=new Matrix4,_eyeLeft=new Matrix4;class StereoCamera{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){var t,r,i,n,a,s=this._cache;s.focus===e.focus&&s.fov===e.fov&&s.aspect===e.aspect*this.aspect&&s.near===e.near&&s.far===e.far&&s.zoom===e.zoom&&s.eyeSep===this.eyeSep||(s.focus=e.focus,s.fov=e.fov,s.aspect=e.aspect*this.aspect,s.near=e.near,s.far=e.far,s.zoom=e.zoom,s.eyeSep=this.eyeSep,t=e.projectionMatrix.clone(),r=(n=s.eyeSep/2)*s.near/s.focus,i=s.near*Math.tan(DEG2RAD*s.fov*.5)/s.zoom,_eyeLeft.elements[12]=-n,_eyeRight.elements[12]=n,n=-i*s.aspect+r,a=i*s.aspect+r,t.elements[0]=2*s.near/(a-n),t.elements[8]=(a+n)/(a-n),this.cameraL.projectionMatrix.copy(t),n=-i*s.aspect-r,a=i*s.aspect-r,t.elements[0]=2*s.near/(a-n),t.elements[8]=(a+n)/(a-n),this.cameraR.projectionMatrix.copy(t)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}}class Clock{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;var t;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=now(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e)}}function now(){return("undefined"==typeof performance?Date:performance).now()}const _position$1=new Vector3,_quaternion$1=new Quaternion,_scale$1=new Vector3,_orientation$1=new Vector3;class AudioListener extends Object3D{constructor(){super(),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return(null!==this.filter?(this.gain.disconnect(this.filter),this.filter):this.gain).disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);var t,e=this.context.listener,r=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1),_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1),e.positionX?(t=this.context.currentTime+this.timeDelta,e.positionX.linearRampToValueAtTime(_position$1.x,t),e.positionY.linearRampToValueAtTime(_position$1.y,t),e.positionZ.linearRampToValueAtTime(_position$1.z,t),e.forwardX.linearRampToValueAtTime(_orientation$1.x,t),e.forwardY.linearRampToValueAtTime(_orientation$1.y,t),e.forwardZ.linearRampToValueAtTime(_orientation$1.z,t),e.upX.linearRampToValueAtTime(r.x,t),e.upY.linearRampToValueAtTime(r.y,t),e.upZ.linearRampToValueAtTime(r.z,t)):(e.setPosition(_position$1.x,_position$1.y,_position$1.z),e.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,r.x,r.y,r.z))}}class Audio extends Object3D{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else{if(!1!==this.hasPlaybackControl)return this._startedAt=this.context.currentTime+e,(e=this.context.createBufferSource()).buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect();console.warn("THREE.Audio: this Audio has no playback control.")}}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const _position=new Vector3,_quaternion=new Quaternion,_scale=new Vector3,_orientation=new Vector3;class PositionalAudio extends Audio{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this}updateMatrixWorld(e){var t;super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying||(this.matrixWorld.decompose(_position,_quaternion,_scale),_orientation.set(0,0,1).applyQuaternion(_quaternion),(e=this.panner).positionX?(t=this.context.currentTime+this.listener.timeDelta,e.positionX.linearRampToValueAtTime(_position.x,t),e.positionY.linearRampToValueAtTime(_position.y,t),e.positionZ.linearRampToValueAtTime(_position.z,t),e.orientationX.linearRampToValueAtTime(_orientation.x,t),e.orientationY.linearRampToValueAtTime(_orientation.y,t),e.orientationZ.linearRampToValueAtTime(_orientation.z,t)):(e.setPosition(_position.x,_position.y,_position.z),e.setOrientation(_orientation.x,_orientation.y,_orientation.z)))}}class AudioAnalyser{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var r=this.getFrequencyData();for(let e=0;e<r.length;e++)t+=r[e];return t/r.length}}class PropertyMixer{constructor(e,t,r){this.binding=e,this.valueSize=r;let i,n,a;switch(t){case"quaternion":i=this._slerp,n=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":i=this._select,n=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:i=this._lerp,n=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=n,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){var r=this.buffer,i=this.valueSize,n=e*i+i;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==i;++e)r[n+e]=r[e];a=t}else{e=t/(a+=t);this._mixBufferRegion(r,n,0,e,i)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,r=this.valueSize,i=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,r),this.cumulativeWeightAdditive+=e}apply(e){var t,r=this.valueSize,i=this.buffer,n=e*r+r,e=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1&&(t=r*this._origIndex,this._mixBufferRegion(i,n,t,1-e,r)),0<a&&this._mixBufferRegionAdditive(i,n,this._addIndex*r,1,r);for(let e=r,t=r+r;e!==t;++e)if(i[e]!==i[e+r]){s.setValue(i,n);break}}saveOriginalState(){var e=this.binding,r=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(r,n);for(let e=i,t=n;e!==t;++e)r[e]=r[n+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,r=t+this.valueSize;for(let e=t;e<r;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,r=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[r+e]=this.buffer[t+e]}_select(t,r,i,e,n){if(.5<=e)for(let e=0;e!==n;++e)t[r+e]=t[i+e]}_slerp(e,t,r,i){Quaternion.slerpFlat(e,t,e,t,e,r,i)}_slerpAdditive(e,t,r,i,n){n=this._workIndex*n;Quaternion.multiplyQuaternionsFlat(e,n,e,t,e,r),Quaternion.slerpFlat(e,t,e,t,e,n,i)}_lerp(t,r,i,n,a){var s=1-n;for(let e=0;e!==a;++e){var o=r+e;t[o]=t[o]*s+t[i+e]*n}}_lerpAdditive(t,r,i,n,a){for(let e=0;e!==a;++e){var s=r+e;t[s]=t[s]+t[i+e]*n}}}const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("["+_RESERVED_CHARS_RE+"]","g"),_wordChar="[^"+_RESERVED_CHARS_RE+"]",_wordCharOrDot="[^"+_RESERVED_CHARS_RE.replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];class Composite{constructor(e,t,r){r=r||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,r=this._bindings[r];void 0!==r&&r.getValue(e,t)}setValue(r,i){var n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].setValue(r,i)}bind(){var r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].bind()}unbind(){var r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].unbind()}}class PropertyBinding{constructor(e,t,r){this.path=t,this.parsedPath=r||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return new(e&&e.isAnimationObjectGroup?PropertyBinding.Composite:PropertyBinding)(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")}static parseTrackName(e){var t=_trackRe.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var r,t={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=t.nodeName&&t.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i&&(r=t.nodeName.substring(i+1),-1!==_supportedObjectNames.indexOf(r))&&(t.nodeName=t.nodeName.substring(0,i),t.objectName=r),null===t.propertyName||0===t.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t}static findNode(e,i){if(!i||""===i||"."===i||-1===i||i===e.name||i===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(i);if(void 0!==t)return t}if(e.children){const n=function(t){for(let e=0;e<t.length;e++){var r=t[e];if(r.name===i||r.uuid===i)return r;r=n(r.children);if(r)return r}return null};t=n(e.children);if(t)return t}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)r[i++]=n[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++]}_setValue_array_setNeedsUpdate(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(r,i){var n=this.resolvedProperty;for(let e=0,t=n.length;e!==t;++e)n[e]=r[i++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let r=this.node;var e=this.parsedPath,i=e.objectName,n=e.propertyName;let a=e.propertyIndex;if(r||(r=PropertyBinding.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=r),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,r){if(i){let t=e.objectIndex;switch(i){case"materials":if(!r.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!r.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);r=r.material.materials;break;case"bones":if(!r.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);r=r.skeleton.bones;for(let e=0;e<r.length;e++)if(r[e].name===t){t=e;break}break;default:if(void 0===r[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);r=r[i]}if(void 0!==t){if(void 0===r[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,r);r=r[t]}}var s=r[n];if(void 0===s)e=e.nodeName,console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+n+" but it wasn't found.",r);else{let e=this.Versioning.None,t=(void 0!==(this.targetObject=r).needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==r.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==a){if("morphTargetInfluences"===n){if(!r.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!r.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!r.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==r.morphTargetDictionary[a]&&(a=r.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}PropertyBinding.Composite=Composite,PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray],PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AnimationObjectGroup{constructor(){this.uuid=generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var r={};this._indicesByUUID=r;for(let e=0,t=arguments.length;e!==t;++e)r[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){var i=this._objects,n=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let c=void 0,h=i.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let r=n[p];if(void 0===r){r=h++,n[p]=r,i.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new PropertyBinding(d,a[e],s[e]))}else if(r<u){c=i[r];var m=--u,f=i[m];i[n[f.uuid]=r]=f,i[n[p]=m]=d;for(let t=0,e=l;t!==e;++t){var g=o[t],v=g[m];let e=g[r];g[r]=v,void 0===e&&(e=new PropertyBinding(d,a[t],s[t])),g[m]=e}}else i[r]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){var r=this._objects,i=this._indicesByUUID,n=this._bindings,a=n.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,c=i[l];if(void 0!==c&&c>=s){var h=s++,u=r[h];r[i[u.uuid]=c]=u,r[i[l]=h]=o;for(let e=0,t=a;e!==t;++e){var d=n[e],p=d[h],m=d[c];d[c]=p,d[h]=m}}}this.nCachedObjects_=s}uncache(){var r=this._objects,i=this._indicesByUUID,n=this._bindings,a=n.length;let s=this.nCachedObjects_,o=r.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,c=i[l];if(void 0!==c)if(delete i[l],c<s){var h=--s,l=r[h],u=--o,d=r[u];r[i[l.uuid]=c]=l,r[i[d.uuid]=h]=d,r.pop();for(let e=0,t=a;e!==t;++e){var p=n[e],m=p[h],f=p[u];p[c]=m,p[h]=f,p.pop()}}else{var g=--o,l=r[g];0<g&&(i[l.uuid]=c),r[c]=l,r.pop();for(let e=0,t=a;e!==t;++e){var v=n[e];v[c]=v[g],v.pop()}}}this.nCachedObjects_=s}subscribe_(r,i){var e=this._bindingsIndicesByPath,t=e[r],n=this._bindings;if(void 0!==t)return n[t];var a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l),t=n.length;e[r]=t,a.push(r),s.push(i),n.push(h);for(let e=c,t=o.length;e!==t;++e){var u=o[e];h[e]=new PropertyBinding(u,r,i)}return h}unsubscribe_(e){var t,r,i,n,a,s=this._bindingsIndicesByPath,o=s[e];void 0!==o&&(t=this._paths,r=this._parsedPaths,a=(i=this._bindings)[n=i.length-1],i[s[e[n]]=o]=a,i.pop(),r[o]=r[n],r.pop(),t[o]=t[n],t.pop())}}AnimationObjectGroup.prototype.isAnimationObjectGroup=!0;class AnimationAction{constructor(e,t,r=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=i;var n=t.tracks,a=n.length,s=new Array(a),o={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let e=0;e!==a;++e){var l=n[e].createInterpolant(null);(s[e]=l).settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){var i,n;return e.fadeOut(t),this.fadeIn(t),r&&(n=(r=this._clip.duration)/(i=e._clip.duration),e.warp(1,i/r,t),this.warp(n,1,t)),this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){var i=this._mixer,n=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);var i=s.parameterPositions,o=s.sampleValues;return i[0]=n,i[1]=n+r,o[0]=e/a,o[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,i){if(this.enabled){var n=this._startTime;if(null!==n){n=(e-n)*r;if(n<0||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){var o=this._interpolants,l=this._propertyBindings;if(this.blendMode===AdditiveAnimationBlendMode)for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);else{NormalAnimationBlendMode;for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(i,s)}}}else this._updateWeight(e)}_updateWeight(e){let t=0;var r,i;return this.enabled&&(t=this.weight,null!==(r=this._weightInterpolant))&&(i=r.evaluate(e)[0],t*=i,e>r.parameterPositions[1])&&(this.stopFading(),0===i)&&(this.enabled=!1),this._effectiveWeight=t}_updateTimeScale(e){let t=0;var r,i;return this.paused||(t=this.timeScale,null!==(r=this._timeScaleInterpolant)&&(i=r.evaluate(e)[0],t*=i,e>r.parameterPositions[1])&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)),this._effectiveTimeScale=t}_updateTime(e){var t=this._clip.duration,r=this.loop;let i=this.time+e,n=this._loopCount;var a,s=r===LoopPingPong;if(0===e)return-1!==n&&s&&1==(1&n)?t-i:i;if(r===LoopOnce){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===n&&(0<=e?(n=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=t||i<0?(r=Math.floor(i/t),i-=t*r,n+=Math.abs(r),(a=this.repetitions-n)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=0<e?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==a?this._setEndings(a=e<0,!a,s):this._setEndings(!1,!1,s),this._loopCount=n,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r}))):this.time=i,s&&1==(1&n))return t-i;return i}_setEndings(e,t,r){var i=this._interpolantSettings;r?(i.endingStart=ZeroSlopeEnding,i.endingEnd=ZeroSlopeEnding):(i.endingStart=e?this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding,i.endingEnd=t?this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding)}_scheduleFading(e,t,r){var i=this._mixer,n=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var i=a.parameterPositions,s=a.sampleValues;return i[0]=n,s[0]=t,i[1]=n+e,s[1]=r,this}}class AnimationMixer extends EventDispatcher{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,r){var i=e._localRoot||this._root,n=e._clip.tracks,a=n.length,s=e._propertyBindings,o=e._interpolants,l=i.uuid,e=this._bindingsByRootAndName;let c=e[l];void 0===c&&(c={},e[l]=c);for(let t=0;t!==a;++t){var h=n[t],u=h.name;let e=c[u];if(void 0===e){if(void 0!==(e=s[t])){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,u));continue}var d=r&&r._propertyBindings[t].binding.parsedPath;++(e=new PropertyMixer(PropertyBinding.create(i,u,d),h.ValueTypeName,h.getValueSize())).referenceCount,this._addInactiveBinding(e,l,u)}s[t]=e,o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,r=e._clip.uuid,i=this._actionsByClip[r],this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,r,t));var t,r,i,n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){var a=n[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){var i=r[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,r){var i=this._actions,n=this._actionsByClip;let a=n[t];void 0===a?(a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=a):(n=a.knownActions,e._byClipCacheIndex=n.length,n.push(e)),e._cacheIndex=i.length,i.push(e),a.actionByRoot[r]=e}_removeInactiveAction(e){var t=this._actions,r=t[t.length-1],i=e._cacheIndex,i=(t[r._cacheIndex=i]=r,t.pop(),e._cacheIndex=null,e._clip.uuid),r=this._actionsByClip,t=r[i],n=t.knownActions,a=n[n.length-1],s=e._byClipCacheIndex;n[a._byClipCacheIndex=s]=a,n.pop(),e._byClipCacheIndex=null,delete t.actionByRoot[(e._localRoot||this._root).uuid],0===n.length&&delete r[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){var i=r[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){var t=this._actions,r=e._cacheIndex,i=this._nActiveActions++,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_takeBackAction(e){var t=this._actions,r=e._cacheIndex,i=--this._nActiveActions,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_addInactiveBinding(e,t,r){var i=this._bindingsByRootAndName,n=this._bindings;let a=i[t];void 0===a&&(a={},i[t]=a),(a[r]=e)._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){var t=this._bindings,r=e.binding,i=r.rootNode.uuid,r=r.path,n=this._bindingsByRootAndName,a=n[i],s=t[t.length-1],e=e._cacheIndex;t[s._cacheIndex=e]=s,t.pop(),delete a[r],0===Object.keys(a).length&&delete n[i]}_lendBinding(e){var t=this._bindings,r=e._cacheIndex,i=this._nActiveBindings++,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_takeBackBinding(e){var t=this._bindings,r=e._cacheIndex,i=--this._nActiveBindings,n=t[i];t[e._cacheIndex=i]=e,t[n._cacheIndex=r]=n}_lendControlInterpolant(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(e[(r=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t]=r),r}_takeBackControlInterpolant(e){var t=this._controlInterpolants,r=e.__cacheIndex,i=--this._nActiveControlInterpolants,n=t[i];t[e.__cacheIndex=i]=e,t[n.__cacheIndex=r]=n}clipAction(e,t,r){var i=t||this._root,n=i.uuid;let a="string"==typeof e?AnimationClip.findByName(i,e):e;i=null!==a?a.uuid:e,e=this._actionsByClip[i];let s=null;if(void 0===r&&(r=null!==a?a.blendMode:NormalAnimationBlendMode),void 0!==e){var o=e.actionByRoot[n];if(void 0!==o&&o.blendMode===r)return o;s=e.knownActions[0],null===a&&(a=s._clip)}return null===a?null:(o=new AnimationAction(this,a,t,r),this._bindAction(o,s),this._addInactiveAction(o,i,n),o)}existingAction(e,t){var t=t||this._root,r=t.uuid,t="string"==typeof e?AnimationClip.findByName(t,e):e,t=t?t.uuid:e,e=this._actionsByClip[t];return void 0!==e&&e.actionByRoot[r]||null}stopAllAction(){var t=this._actions;for(let e=this._nActiveActions-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var r=this._actions,i=this._nActiveActions,n=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==i;++e)r[e]._update(n,t,a,s);var o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){var r=this._actions,e=e.uuid,t=this._actionsByClip,i=t[e];if(void 0!==i){var n=i.knownActions;for(let e=0,t=n.length;e!==t;++e){var a=n[e],s=(this._deactivateAction(a),a._cacheIndex),o=r[r.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,r[o._cacheIndex=s]=o,r.pop(),this._removeInactiveBindingsForAction(a)}delete t[e]}}uncacheRoot(e){var t=e.uuid,r=this._actionsByClip;for(const s in r){var i=r[s].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var n=this._bindingsByRootAndName[t];if(void 0!==n)for(const o in n){var a=n[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){e=this.existingAction(e,t);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}AnimationMixer.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Uniform{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())}}class InstancedInterleavedBuffer extends InterleavedBuffer{constructor(e,t,r=1){super(e,t),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){e=super.clone(e);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(e){e=super.toJSON(e);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer=!0;class GLBufferAttribute{constructor(e,t,r,i,n){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=i,this.count=n,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}GLBufferAttribute.prototype.isGLBufferAttribute=!0;class Raycaster{constructor(e,t,r=0,i=1/0){this.ray=new Ray(e,t),this.near=r,this.far=i,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,r=[]){return intersectObject(e,this,r,t),r.sort(ascSort),r}intersectObjects(r,i=!1,n=[]){for(let e=0,t=r.length;e<t;e++)intersectObject(r[e],this,n,i);return n.sort(ascSort),n}}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,r,i,t){if(e.layers.test(r.layers)&&e.raycast(r,i),!0===t){var n=e.children;for(let e=0,t=n.length;e<t;e++)intersectObject(n[e],r,i,!0)}}class Spherical{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(clamp(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Cylindrical{constructor(e=1,t=0,r=0){return this.radius=e,this.theta=t,this.y=r,this}set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const _vector$4=new Vector2;class Box2{constructor(e=new Vector2(1/0,1/0),t=new Vector2(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=_vector$4.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$4.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Box2.prototype.isBox2=!0;const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(e=new Vector3,t=new Vector3){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);e=_startEnd.dot(_startEnd);let r=_startEnd.dot(_startP)/e;return r=t?clamp(r,0,1):r}closestPointToPoint(e,t,r){e=this.closestPointToPointParameter(e,t);return this.delta(r).multiplyScalar(e).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class ImmediateRenderObject extends Object3D{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}ImmediateRenderObject.prototype.isImmediateRenderObject=!0;const _vector$3=new Vector3;class SpotLightHelper extends Object3D{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;var e=new BufferGeometry,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,n=t/32*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(n),Math.sin(n),1)}e.setAttribute("position",new Float32BufferAttribute(r,3));t=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(e,t),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$3.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$3),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const _vector$2=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;class SkeletonHelper extends LineSegments{constructor(e){var t=getBoneList(e),r=new BufferGeometry,i=[],n=[],a=new Color(0,0,1),s=new Color(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),n.push(a.r,a.g,a.b),n.push(s.r,s.g,s.b))}r.setAttribute("position",new Float32BufferAttribute(i,3)),r.setAttribute("color",new Float32BufferAttribute(n,3)),super(r,new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var r=this.bones,t=this.geometry,i=t.getAttribute("position");_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<r.length;e++){var n=r[e];n.parent&&n.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,n.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),i.setXYZ(t,_vector$2.x,_vector$2.y,_vector$2.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,n.parent.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),i.setXYZ(t+1,_vector$2.x,_vector$2.y,_vector$2.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function getBoneList(t){var r=[];t&&t.isBone&&r.push(t);for(let e=0;e<t.children.length;e++)r.push.apply(r,getBoneList(t.children[e]));return r}class PointLightHelper extends Mesh{constructor(e,t,r){super(new SphereGeometry(t,4,2),new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=r,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$1=new Vector3,_color1=new Color,_color2=new Color;class HemisphereLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;e=new OctahedronGeometry(t),e.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0),r=e.getAttribute("position"),t=new Float32Array(3*r.count);e.setAttribute("color",new BufferAttribute(t,3)),this.add(new Mesh(e,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var r=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let e=0,t=r.count;e<t;e++){var i=e<t/2?_color1:_color2;r.setXYZ(e,i.r,i.g,i.b)}r.needsUpdate=!0}e.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class GridHelper extends LineSegments{constructor(e=10,i=10,n=4473924,a=8947848){n=new Color(n),a=new Color(a);var s=i/2,o=e/i,l=e/2,c=[],h=[];for(let e=0,t=0,r=-l;e<=i;e++,r+=o){c.push(-l,0,r,l,0,r),c.push(r,0,-l,r,0,l);var u=e===s?n:a;u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3}var e=new BufferGeometry,t=(e.setAttribute("position",new Float32BufferAttribute(c,3)),e.setAttribute("color",new Float32BufferAttribute(h,3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(e,t),this.type="GridHelper"}}class PolarGridHelper extends LineSegments{constructor(t=10,r=16,i=8,n=64,a=4473924,s=8947848){a=new Color(a),s=new Color(s);var o=[],l=[];for(let e=0;e<=r;e++){var c=e/r*(2*Math.PI),h=Math.sin(c)*t,c=Math.cos(c)*t,h=(o.push(0,0,0),o.push(h,0,c),1&e?a:s);l.push(h.r,h.g,h.b),l.push(h.r,h.g,h.b)}for(let e=0;e<=i;e++){var u=1&e?a:s,d=t-t/i*e;for(let e=0;e<n;e++){var p=e/n*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d;o.push(m,0,f),l.push(u.r,u.g,u.b),p=(e+1)/n*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d,o.push(m,0,f),l.push(u.r,u.g,u.b)}}var e=new BufferGeometry,g=(e.setAttribute("position",new Float32BufferAttribute(o,3)),e.setAttribute("color",new Float32BufferAttribute(l,3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(e,g),this.type="PolarGridHelper"}}const _v1=new Vector3,_v2=new Vector3,_v3=new Vector3;class DirectionalLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));e=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(i,e),this.add(this.lightPlane),(i=new BufferGeometry).setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(i,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_v1.setFromMatrixPosition(this.light.matrixWorld),_v2.setFromMatrixPosition(this.light.target.matrixWorld),_v3.subVectors(_v2,_v1),this.lightPlane.lookAt(_v2),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2),this.targetLine.scale.z=_v3.length()}}const _vector=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(e){var t=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1});const i=[],n=[],a={};var s=new Color(16755200),o=new Color(16711680),l=new Color(43775),c=new Color(16777215),h=new Color(3355443);function u(e,t,r){d(e,r),d(t,r)}function d(e,t){i.push(0,0,0),n.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(i.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.setAttribute("position",new Float32BufferAttribute(i,3)),t.setAttribute("color",new Float32BufferAttribute(n,3)),super(t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){var e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function setPoint(e,t,r,i,n,a,s){_vector.set(n,a,s).unproject(i);var o=t[e];if(void 0!==o){var l=r.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],_vector.x,_vector.y,_vector.z)}}const _box=new Box3;class BoxHelper extends LineSegments{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),n=new BufferGeometry;n.setIndex(new BufferAttribute(r,1)),n.setAttribute("position",new BufferAttribute(i,3)),super(n,new LineBasicMaterial({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){var t,r,i;void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box.setFromObject(this.object),_box.isEmpty()||(e=_box.min,t=_box.max,(i=(r=this.geometry.attributes.position).array)[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere())}setFromObject(e){return this.object=e,this.update(),this}copy(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this}}class Box3Helper extends LineSegments{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new BufferGeometry;i.setIndex(new BufferAttribute(r,1)),i.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new LineBasicMaterial({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class PlaneHelper extends Line{constructor(e,t=1,r=16776960){var i=new BufferGeometry,i=(i.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new LineBasicMaterial({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t,new BufferGeometry);i.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new Mesh(i,new MeshBasicMaterial({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?BackSide:FrontSide,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const _axis=new Vector3;let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(e=new Vector3(0,0,1),t=new Vector3(0,0,0),r=1,i=16776960,n=.2*r,a=.2*n){super(),this.type="ArrowHelper",void 0===_lineGeometry&&((_lineGeometry=new BufferGeometry).setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),(_coneGeometry=new CylinderGeometry(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,n,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(_axis.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(_axis,e))}setLength(e,t=.2*e,r=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class AxesHelper extends LineSegments{constructor(e=1){var e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],t=new BufferGeometry,e=(t.setAttribute("position",new Float32BufferAttribute(e,3)),t.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),new LineBasicMaterial({vertexColors:!0,toneMapped:!1}));super(t,e),this.type="AxesHelper"}setColors(e,t,r){var i=new Color,n=this.geometry.attributes.color.array;return i.set(e),i.toArray(n,0),i.toArray(n,3),i.set(t),i.toArray(n,6),i.toArray(n,9),i.set(r),i.toArray(n,12),i.toArray(n,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const _floatView=new Float32Array(1),_int32View=new Int32Array(_floatView.buffer);class DataUtils{static toHalfFloat(e){_floatView[0]=e;e=_int32View[0];let t=e>>16&32768,r=e>>12&2047;var i=e>>23&255;if(!(i<103)){if(142<i)return t=t|31744|((255==i?0:1)&&8388607&e);if(i<113)return r|=2048,t|=(r>>114-i)+(r>>113-i&1);t=(t|=i-112<<10|r>>1)+(1&r)}return t}}const LineStrip=0,LinePieces=1,NoColors=0,FaceColors=1,VertexColors=2;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,r)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(DynamicDrawUsage)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}function WebGLRenderTargetCube(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,r)}function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},Path.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Loader.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)},Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Box2.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Box2.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Box2.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Box2.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},Box3.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Box3.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Box3.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Box3.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Box3.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Sphere.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Matrix3.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Matrix3.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Matrix3.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Matrix3.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Matrix3.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Matrix3.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Matrix4.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Matrix4.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Matrix4.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Vector3).setFromMatrixColumn(this,3)},Matrix4.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Matrix4.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Matrix4.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Matrix4.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Matrix4.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Matrix4.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Matrix4.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Matrix4.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Matrix4.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Matrix4.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Matrix4.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Matrix4.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Matrix4.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Matrix4.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Matrix4.prototype.makeFrustum=function(e,t,r,i,n,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,r,n,a)},Matrix4.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Quaternion.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Quaternion.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Ray.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Ray.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Ray.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Triangle.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Triangle.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},Triangle.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},Triangle.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},Triangle.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},Triangle.barycoordFromPoint=function(e,t,r,i,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,r,i,n)},Triangle.normal=function(e,t,r,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,r,i)},Shape.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Shape.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},Shape.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)},Vector2.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},Vector2.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Vector2.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Vector3.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Vector3.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Vector3.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Vector3.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Vector3.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Vector3.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Vector3.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},Vector3.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Vector3.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Vector4.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},Vector4.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Object3D.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Object3D.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Object3D.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Object3D.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Object3D.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Mesh.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),TrianglesDrawMode},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(DynamicDrawUsage)}}}),BufferAttribute.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},BufferAttribute.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},BufferAttribute.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},BufferGeometry.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},BufferGeometry.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(t,arguments[2])))},BufferGeometry.prototype.addDrawCall=function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},BufferGeometry.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},BufferGeometry.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},BufferGeometry.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},BufferGeometry.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),InterleavedBuffer.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},InterleavedBuffer.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ExtrudeGeometry.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},ExtrudeGeometry.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},ExtrudeGeometry.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Scene.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Uniform.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===FlatShading}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),WebGLRenderer.prototype.clearTarget=function(e,t,r,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,i)},WebGLRenderer.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},WebGLRenderer.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},WebGLRenderer.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},WebGLRenderer.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},WebGLRenderer.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},WebGLRenderer.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},WebGLRenderer.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},WebGLRenderer.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},WebGLRenderer.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},WebGLRenderer.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},WebGLRenderer.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},WebGLRenderer.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},WebGLRenderer.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},WebGLRenderer.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},WebGLRenderer.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},WebGLRenderer.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},WebGLRenderer.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},WebGLRenderer.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},WebGLRenderer.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},WebGLRenderer.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},WebGLRenderer.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},WebGLRenderer.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},WebGLRenderer.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},WebGLRenderer.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?sRGBEncoding:LinearEncoding}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Audio.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new AudioLoader).load(e,function(e){t.setBuffer(e)}),this},AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},CubeCamera.prototype.clear=function(e,t,r,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,r,i)},ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,r,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var n=new TextureLoader,n=(n.setCrossOrigin(this.crossOrigin),n.load(e,r,void 0,i));return t&&(n.mapping=t),n},ImageUtils.loadTextureCube=function(e,t,r,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var n=new CubeTextureLoader,n=(n.setCrossOrigin(this.crossOrigin),n.load(e,r,void 0,i));return t&&(n.mapping=t),n},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=REVISION);export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveAnimationBlendMode,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxGeometry as BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleGeometry as CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeGeometry as ConeBufferGeometry,ConeGeometry,CubeCamera,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CustomToneMapping,CylinderGeometry as CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DataUtils,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry as DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeGeometry as ExtrudeBufferGeometry,ExtrudeGeometry,FaceColors,FileLoader,FlatShading,Float16BufferAttribute,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontSide,Frustum,GLBufferAttribute,GLSL1,GLSL3,GammaEncoding,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronGeometry as IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheGeometry as LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalAnimationBlendMode,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronGeometry as OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricGeometry as ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneGeometry as PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronGeometry as PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingGeometry as RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeGeometry as ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereGeometry as SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,SplineCurve,SpotLight,SpotLightHelper,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronGeometry as TetrahedronBufferGeometry,TetrahedronGeometry,TextGeometry as TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusGeometry as TorusBufferGeometry,TorusGeometry,TorusKnotGeometry as TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry as TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGL1Renderer,WebGLCubeRenderTarget,WebGLMultipleRenderTargets,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding};